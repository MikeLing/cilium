# SOME DESCRIPTIVE TITLE.
# Copyright (C) Cilium Authors
# This file is distributed under the same license as the Cilium package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Cilium \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-25 00:09+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../contributing/development/codeoverview.rst:3
#: ../../contributing/development/contributing_guide.rst:3
#: ../../contributing/development/debugging.rst:3
#: ../../contributing/development/dev_setup.rst:3
#: ../../contributing/development/documentation.rst:3
#: ../../contributing/development/hubble.rst:3
#: ../../contributing/development/images.rst:3
#: ../../contributing/development/index.rst:3
#: ../../contributing/development/season_of_docs.rst:3
#: ../../contributing/release/backports.rst:3
#: ../../contributing/release/feature.rst:3
#: ../../contributing/release/index.rst:3
#: ../../contributing/release/organization.rst:3
#: ../../contributing/release/rc.rst:3 ../../contributing/release/stable.rst:3
#: ../../contributing/testing/ci.rst:3
#: ../../contributing/testing/documentation.rst:3
#: ../../contributing/testing/e2e.rst:3 ../../contributing/testing/index.rst:3
#: ../../contributing/testing/unit.rst:3
msgid ""
"WARNING: You are looking at unreleased Cilium documentation. Please use "
"the official rendered version released here: https://docs.cilium.io"
msgstr ""

#: ../../contributing/development/codeoverview.rst:10
msgid "Code Overview"
msgstr ""

#: ../../contributing/development/codeoverview.rst:12
msgid ""
"This section provides an overview of the Cilium & Hubble source code "
"directory structure. It is useful to get an initial overview on where to "
"find what."
msgstr ""

#: ../../contributing/development/codeoverview.rst:16
msgid "High-level"
msgstr ""

#: ../../contributing/development/codeoverview.rst:18
msgid ""
"Top-level directories `github.com/cilium/cilium "
"<https://github.com/cilium/cilium>`_:"
msgstr ""

#: ../../contributing/development/codeoverview.rst:21
msgid "api"
msgstr ""

#: ../../contributing/development/codeoverview.rst:21
msgid "The Cilium & Hubble API definition."
msgstr ""

#: ../../contributing/development/codeoverview.rst:24
#: ../../contributing/development/codeoverview.rst:71
msgid "bpf"
msgstr ""

#: ../../contributing/development/codeoverview.rst:24
#: ../../contributing/development/codeoverview.rst:71
msgid "The eBPF datapath code"
msgstr ""

#: ../../contributing/development/codeoverview.rst:27
msgid "bugtool"
msgstr ""

#: ../../contributing/development/codeoverview.rst:27
msgid "CLI for collecting agent & system information for bug reporting"
msgstr ""

#: ../../contributing/development/codeoverview.rst:30
#: ../../contributing/development/codeoverview.rst:74
msgid "cilium"
msgstr ""

#: ../../contributing/development/codeoverview.rst:30
#: ../../contributing/development/codeoverview.rst:74
msgid "Cilium CLI client"
msgstr ""

#: ../../contributing/development/codeoverview.rst:33
msgid "contrib, tools"
msgstr ""

#: ../../contributing/development/codeoverview.rst:33
msgid "Additional tooling and resources used for development"
msgstr ""

#: ../../contributing/development/codeoverview.rst:36
#: ../../contributing/development/codeoverview.rst:80
msgid "daemon"
msgstr ""

#: ../../contributing/development/codeoverview.rst:36
msgid "The cilium-agent running on each node"
msgstr ""

#: ../../contributing/development/codeoverview.rst:40
msgid "examples"
msgstr ""

#: ../../contributing/development/codeoverview.rst:39
msgid ""
"Various example resources and manifests. Typically require to be modified"
" before usage is possible."
msgstr ""

#: ../../contributing/development/codeoverview.rst:43
#: ../../contributing/development/codeoverview.rst:101
msgid "hubble-relay"
msgstr ""

#: ../../contributing/development/codeoverview.rst:43
msgid "Hubble Relay server"
msgstr ""

#: ../../contributing/development/codeoverview.rst:46
msgid "install"
msgstr ""

#: ../../contributing/development/codeoverview.rst:46
msgid "Helm deployment manifests for all components"
msgstr ""

#: ../../contributing/development/codeoverview.rst:49
msgid "pkg"
msgstr ""

#: ../../contributing/development/codeoverview.rst:49
msgid "Common Go packages shared between all components"
msgstr ""

#: ../../contributing/development/codeoverview.rst:53
msgid "operator"
msgstr ""

#: ../../contributing/development/codeoverview.rst:52
msgid ""
"Operator responsible for centralized tasks which do not require to be "
"performed on each node."
msgstr ""

#: ../../contributing/development/codeoverview.rst:56
msgid "plugins"
msgstr ""

#: ../../contributing/development/codeoverview.rst:56
msgid "Plugins to integrate with Kubernetes and Docker"
msgstr ""

#: ../../contributing/development/codeoverview.rst:59
msgid "test"
msgstr ""

#: ../../contributing/development/codeoverview.rst:59
msgid "End-to-end integration tests run in the :ref:`testsuite`."
msgstr ""

#: ../../contributing/development/codeoverview.rst:62
msgid "Cilium"
msgstr ""

#: ../../contributing/development/codeoverview.rst:65
msgid "api/v1/openapi.yaml"
msgstr ""

#: ../../contributing/development/codeoverview.rst:65
msgid "API specification of the Cilium API. Used for code generation."
msgstr ""

#: ../../contributing/development/codeoverview.rst:68
msgid "api/v1/models/"
msgstr ""

#: ../../contributing/development/codeoverview.rst:68
msgid "Go code generated from openapi.yaml representing all API resources"
msgstr ""

#: ../../contributing/development/codeoverview.rst:77
msgid "cilium-health"
msgstr ""

#: ../../contributing/development/codeoverview.rst:77
msgid "Cilium cluster connectivity CLI client"
msgstr ""

#: ../../contributing/development/codeoverview.rst:80
msgid "cilium-agent specific code"
msgstr ""

#: ../../contributing/development/codeoverview.rst:83
msgid "plugins/cilium-cni"
msgstr ""

#: ../../contributing/development/codeoverview.rst:83
msgid "The CNI plugin to integrate with Kubernetes"
msgstr ""

#: ../../contributing/development/codeoverview.rst:86
msgid "plugins/cilium-docker"
msgstr ""

#: ../../contributing/development/codeoverview.rst:86
msgid "The Docker integration plugin"
msgstr ""

#: ../../contributing/development/codeoverview.rst:89
#: ../../contributing/development/hubble.rst:11
msgid "Hubble"
msgstr ""

#: ../../contributing/development/codeoverview.rst:91
msgid ""
"The server-side code of Hubble is integrated into the Cilium repository. "
"The Hubble CLI can be found in the separate repository "
"`github.com/cilium/hubble <https://github.com/cilium/hubble>`_. The "
"Hubble UI can be found in the separate repository `github.com/cilium"
"/hubble-ui <https://github.com/cilium/hubble-ui>`_."
msgstr ""

#: ../../contributing/development/codeoverview.rst:98
msgid "api/v1/external, api/v1/flow, api/v1/observer, api/v1/peer, api/v1/relay"
msgstr ""

#: ../../contributing/development/codeoverview.rst:98
msgid "API specifications of the Hubble APIs."
msgstr ""

#: ../../contributing/development/codeoverview.rst:101
msgid "Hubble Relay agent"
msgstr ""

#: ../../contributing/development/codeoverview.rst:104
msgid "pkg/hubble"
msgstr ""

#: ../../contributing/development/codeoverview.rst:104
msgid "All Hubble specific code"
msgstr ""

#: ../../contributing/development/codeoverview.rst:107
msgid "pkg/hubble/container"
msgstr ""

#: ../../contributing/development/codeoverview.rst:107
msgid "Ring buffer implementation"
msgstr ""

#: ../../contributing/development/codeoverview.rst:110
msgid "pkg/hubble/filters"
msgstr ""

#: ../../contributing/development/codeoverview.rst:110
msgid "Flow filtering capabilities"
msgstr ""

#: ../../contributing/development/codeoverview.rst:113
msgid "pkg/hubble/metrics"
msgstr ""

#: ../../contributing/development/codeoverview.rst:113
msgid "Metrics plugins providing Prometheus based on Hubble's visibility"
msgstr ""

#: ../../contributing/development/codeoverview.rst:117
msgid "pkg/hubble/observe"
msgstr ""

#: ../../contributing/development/codeoverview.rst:116
msgid ""
"Layer running on top of the Cilium datapath monitoring, feeding the "
"metrics and ring buffer."
msgstr ""

#: ../../contributing/development/codeoverview.rst:120
msgid "pkg/hubble/parser"
msgstr ""

#: ../../contributing/development/codeoverview.rst:120
msgid "Network flow parsers"
msgstr ""

#: ../../contributing/development/codeoverview.rst:123
msgid "pkg/hubble/peer"
msgstr ""

#: ../../contributing/development/codeoverview.rst:123
msgid "Peer service implementation"
msgstr ""

#: ../../contributing/development/codeoverview.rst:126
msgid "pkg/hubble/relay"
msgstr ""

#: ../../contributing/development/codeoverview.rst:126
msgid "Hubble Relay service implementation"
msgstr ""

#: ../../contributing/development/codeoverview.rst:129
msgid "pkg/hubble/server"
msgstr ""

#: ../../contributing/development/codeoverview.rst:129
msgid "The server providing the API for the Hubble client and UI"
msgstr ""

#: ../../contributing/development/codeoverview.rst:132
msgid "Important common packages"
msgstr ""

#: ../../contributing/development/codeoverview.rst:135
msgid "pkg/allocator"
msgstr ""

#: ../../contributing/development/codeoverview.rst:135
msgid "Security identity allocation"
msgstr ""

#: ../../contributing/development/codeoverview.rst:138
msgid "pkg/bpf"
msgstr ""

#: ../../contributing/development/codeoverview.rst:138
msgid "Abstraction layer to interact with the eBPF runtime"
msgstr ""

#: ../../contributing/development/codeoverview.rst:141
msgid "pkg/client"
msgstr ""

#: ../../contributing/development/codeoverview.rst:141
msgid "Go client to access Cilium API"
msgstr ""

#: ../../contributing/development/codeoverview.rst:144
msgid "pkg/clustermesh"
msgstr ""

#: ../../contributing/development/codeoverview.rst:144
msgid "Multi-cluster implementation including control plane and global services"
msgstr ""

#: ../../contributing/development/codeoverview.rst:148
msgid "pkg/controller"
msgstr ""

#: ../../contributing/development/codeoverview.rst:147
msgid ""
"Base controller implementation for any background operation that requires"
" retries or interval-based invocation."
msgstr ""

#: ../../contributing/development/codeoverview.rst:151
msgid "pkg/datapath"
msgstr ""

#: ../../contributing/development/codeoverview.rst:151
msgid "Abstraction layer for datapath interaction"
msgstr ""

#: ../../contributing/development/codeoverview.rst:154
msgid "pkg/defaults"
msgstr ""

#: ../../contributing/development/codeoverview.rst:154
msgid "All default values"
msgstr ""

#: ../../contributing/development/codeoverview.rst:157
msgid "pkg/elf"
msgstr ""

#: ../../contributing/development/codeoverview.rst:157
msgid "ELF abstraction library for the eBPF loader"
msgstr ""

#: ../../contributing/development/codeoverview.rst:160
msgid "pkg/endpoint"
msgstr ""

#: ../../contributing/development/codeoverview.rst:160
msgid "Abstraction of a Cilium endpoint, representing all workloads."
msgstr ""

#: ../../contributing/development/codeoverview.rst:163
msgid "pkg/endpointmanager"
msgstr ""

#: ../../contributing/development/codeoverview.rst:163
msgid "Manager of all endpoints"
msgstr ""

#: ../../contributing/development/codeoverview.rst:166
msgid "pkg/envoy"
msgstr ""

#: ../../contributing/development/codeoverview.rst:166
msgid "Envoy proxy interactions"
msgstr ""

#: ../../contributing/development/codeoverview.rst:169
msgid "pkg/fqdn"
msgstr ""

#: ../../contributing/development/codeoverview.rst:169
msgid "FQDN proxy and FQDN policy implementation"
msgstr ""

#: ../../contributing/development/codeoverview.rst:172
msgid "pkg/health"
msgstr ""

#: ../../contributing/development/codeoverview.rst:172
msgid "Network connectivity health checking"
msgstr ""

#: ../../contributing/development/codeoverview.rst:175
msgid "pkg/identity"
msgstr ""

#: ../../contributing/development/codeoverview.rst:175
msgid "Representation of a security identity for workloads"
msgstr ""

#: ../../contributing/development/codeoverview.rst:178
msgid "pkg/ipam"
msgstr ""

#: ../../contributing/development/codeoverview.rst:178
msgid "IP address management"
msgstr ""

#: ../../contributing/development/codeoverview.rst:181
msgid "pkg/ipcache"
msgstr ""

#: ../../contributing/development/codeoverview.rst:181
msgid "Global cache mapping IPs to endpoints and security identities"
msgstr ""

#: ../../contributing/development/codeoverview.rst:184
msgid "pkg/k8s"
msgstr ""

#: ../../contributing/development/codeoverview.rst:184
msgid "All interactions with Kubernetes"
msgstr ""

#: ../../contributing/development/codeoverview.rst:187
msgid "pkg/kafka"
msgstr ""

#: ../../contributing/development/codeoverview.rst:187
msgid "Kafka protocol proxy and policy implementation"
msgstr ""

#: ../../contributing/development/codeoverview.rst:190
msgid "pkg/kvstore"
msgstr ""

#: ../../contributing/development/codeoverview.rst:190
msgid "Key-value store abstraction layer with backends for etcd"
msgstr ""

#: ../../contributing/development/codeoverview.rst:194
msgid "pkg/labels"
msgstr ""

#: ../../contributing/development/codeoverview.rst:193
msgid ""
"Base metadata type to describe all label/metadata requirements for "
"workload identity specification and policy matching."
msgstr ""

#: ../../contributing/development/codeoverview.rst:197
msgid "pkg/loadbalancer"
msgstr ""

#: ../../contributing/development/codeoverview.rst:197
msgid "Control plane for load-balancing functionality"
msgstr ""

#: ../../contributing/development/codeoverview.rst:200
msgid "pkg/maps"
msgstr ""

#: ../../contributing/development/codeoverview.rst:200
msgid "eBPF map representations"
msgstr ""

#: ../../contributing/development/codeoverview.rst:203
msgid "pkg/metrics"
msgstr ""

#: ../../contributing/development/codeoverview.rst:203
msgid "Prometheus metrics implementation"
msgstr ""

#: ../../contributing/development/codeoverview.rst:206
msgid "pkg/monitor"
msgstr ""

#: ../../contributing/development/codeoverview.rst:206
msgid "eBPF datapath monitoring abstraction"
msgstr ""

#: ../../contributing/development/codeoverview.rst:209
msgid "pkg/node"
msgstr ""

#: ../../contributing/development/codeoverview.rst:209
msgid "Representation of a network node"
msgstr ""

#: ../../contributing/development/codeoverview.rst:212
msgid "pkg/option"
msgstr ""

#: ../../contributing/development/codeoverview.rst:212
msgid "All available configuration options"
msgstr ""

#: ../../contributing/development/codeoverview.rst:215
msgid "pkg/policy"
msgstr ""

#: ../../contributing/development/codeoverview.rst:215
msgid "Policy enforcement specification & implementation"
msgstr ""

#: ../../contributing/development/codeoverview.rst:218
msgid "pkg/proxy"
msgstr ""

#: ../../contributing/development/codeoverview.rst:218
msgid "Layer 7 proxy abstraction"
msgstr ""

#: ../../contributing/development/codeoverview.rst:221
msgid "pkg/service"
msgstr ""

#: ../../contributing/development/codeoverview.rst:221
msgid "Representation of a load-balancing service"
msgstr ""

#: ../../contributing/development/codeoverview.rst:226
msgid "pkg/trigger"
msgstr ""

#: ../../contributing/development/codeoverview.rst:224
msgid ""
"Implementation of trigger functionality to implement event-driven "
"functionality"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:11
msgid "How To Contribute"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:14
msgid "Clone and Provision Environment"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:16
msgid "Make sure you have a `GitHub account <https://github.com/join>`_"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:17
msgid "Fork the Cilium repository to your GitHub user or organization."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:18
msgid ""
"Turn off GitHub actions for your fork as described in the `GitHub Docs "
"<https://docs.github.com/en/repositories/managing-your-repositorys-"
"settings-and-features/enabling-features-for-your-repository/managing-"
"github-actions-settings-for-a-repository#managing-github-actions-"
"permissions-for-your-repository>`_. #. This is recommended to avoid "
"unnecessary CI notification failures on the fork."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:20
msgid ""
"Clone your ``${YOUR_GITHUB_USERNAME_OR_ORG}/cilium`` fork into your "
"``GOPATH``, and setup the base repository as ``upstream`` remote:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:30
msgid "Set up your :ref:`dev_env`."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:31
msgid ""
"Check the GitHub issues for `good tasks to get started "
"<https://github.com/cilium/cilium/issues?q=is%3Aopen+is%3Aissue+label"
"%3Agood-first-issue>`_."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:33
msgid "Follow the steps in :ref:`making_changes` to start contributing :)"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:38
msgid "Submitting a pull request"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:40
msgid ""
"Contributions must be submitted in the form of pull requests against the "
"upstream GitHub repository at https://github.com/cilium/cilium."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:43
msgid "Fork the Cilium repository."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:44
msgid "Push your changes to the topic branch in your fork of the repository."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:45
msgid "Submit a pull request on https://github.com/cilium/cilium."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:47
msgid ""
"Before hitting the submit button, please make sure that the following "
"requirements have been met:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:50
msgid ""
"Each commit compiles and is functional on its own to allow for bisecting "
"of commits."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:52
msgid "All code is covered by unit and/or runtime tests where feasible."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:53
msgid ""
"All changes have been tested and checked for regressions by running the "
"existing testsuite against your changes. See the :ref:`testsuite` section"
" for additional details."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:56
msgid ""
"All commits contain a well written commit description including a title, "
"description and a ``Fixes: #XXX`` line if the commit addresses a "
"particular GitHub issue. Note that the GitHub issue will be automatically"
" closed when the commit is merged."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:81
msgid ""
"Make sure to include a blank line in between commit title and commit "
"description."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:84
msgid ""
"If any of the commits fixes a particular commit already in the tree, that"
" commit is referenced in the commit message of the bugfix. This ensures "
"that whoever performs a backport will pull in all required fixes:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:98
msgid ""
"The proper format for the ``Fixes:`` tag referring to commits is to use "
"the first 12 characters of the git SHA followed by the full commit title "
"as seen above without breaking the line."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:102
msgid ""
"If you change CLI arguments of any binaries in this repo, the CI will "
"reject your PR if you don't also update the command reference docs. To do"
" so, make sure to run the ``postcheck`` make target."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:111
msgid "All commits are signed off. See the section :ref:`dev_coo`."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:115
msgid ""
"Passing the ``-s`` option to ``git commit`` will add the ``Signed-off-"
"by:`` line to your commit message automatically."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:118
msgid ""
"Document any user-facing or breaking changes in "
"``Documentation/install/upgrade.rst``."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:120
msgid ""
"(optional) Pick the appropriate milestone for which this PR is being "
"targeted, e.g. ``1.6``, ``1.7``. This is in particular important in the "
"time frame between the feature freeze and final release date."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:124
msgid ""
"If you have permissions to do so, pick the right release-note label. "
"These labels will be used to generate the release notes which will "
"primarily be read by users."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:129
#: ../../contributing/development/contributing_guide.rst:173
#: ../../contributing/development/contributing_guide.rst:309
#: ../../contributing/development/contributing_guide.rst:363
#: ../../contributing/development/contributing_guide.rst:376
#: ../../contributing/development/contributing_guide.rst:390
#: ../../contributing/development/contributing_guide.rst:409
msgid "Labels"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:129
#: ../../contributing/development/contributing_guide.rst:173
#: ../../contributing/development/contributing_guide.rst:309
#: ../../contributing/development/contributing_guide.rst:363
#: ../../contributing/development/contributing_guide.rst:376
#: ../../contributing/development/contributing_guide.rst:390
#: ../../contributing/development/contributing_guide.rst:409
msgid "When to set"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:131
#: ../../contributing/development/contributing_guide.rst:394
msgid "``release-note/bug``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:131
#: ../../contributing/development/contributing_guide.rst:394
msgid "This is a non-trivial bugfix and is a user-facing bug"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:133
#: ../../contributing/development/contributing_guide.rst:396
msgid "``release-note/major``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:133
#: ../../contributing/development/contributing_guide.rst:396
msgid "This is a major feature addition, e.g. Add MongoDB support"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:135
#: ../../contributing/development/contributing_guide.rst:398
msgid "``release-note/minor``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:135
#: ../../contributing/development/contributing_guide.rst:398
msgid ""
"This is a minor feature addition, e.g. Add support for a Kubernetes "
"version"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:137
#: ../../contributing/development/contributing_guide.rst:400
msgid "``release-note/misc``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:137
#: ../../contributing/development/contributing_guide.rst:400
msgid ""
"This is a not user-facing change , e.g. Refactor endpoint package, a bug "
"fix of a non-released feature"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:139
#: ../../contributing/development/contributing_guide.rst:402
msgid "``release-note/ci``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:139
#: ../../contributing/development/contributing_guide.rst:402
msgid "This is a CI feature of bug fix."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:142
msgid ""
"Verify the release note text. If not explicitly changed, the title of the"
" PR will be used for the release notes. If you want to change this, you "
"can add a special section to the description of the PR. These release "
"notes are primarily going to be read by users so it is important that "
"release notes for bugs, major and minor features do not contain internal "
"details of Cilium functionality which sometimes are irrelevant for users."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:150
msgid "Example of a bad release note ::"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:157
msgid "Example of a good release note ::"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:166
msgid ""
"If multiple lines are provided, then the first line serves as the high "
"level bullet point item and any additional line will be added as a sub "
"item to the first line."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:170
msgid "If you have permissions, pick the right labels for your PR:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:175
msgid "``kind/bug``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:175
msgid "This is a bugfix worth mentioning in the release notes"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:177
msgid "``kind/enhancement``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:177
msgid "This enhances existing functionality in Cilium"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:179
msgid "``kind/feature``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:179
msgid "This is a feature"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:181
msgid "``release-blocker/X.Y``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:181
msgid "This PR should block the next X.Y release"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:183
#: ../../contributing/development/contributing_guide.rst:378
msgid "``needs-backport/X.Y``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:183
#: ../../contributing/development/contributing_guide.rst:378
msgid "PR needs to be backported to these stable releases"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:185
msgid "``backport/X.Y``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:185
msgid "This is backport PR, may only be set as part of :ref:`backport_process`"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:187
#: ../../contributing/development/contributing_guide.rst:411
msgid "``upgrade-impact``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:187
#: ../../contributing/development/contributing_guide.rst:411
msgid "The code changes have a potential upgrade impact"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:189
msgid "``area/*`` (Optional)"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:189
msgid "Code area this PR covers"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:194
msgid ""
"If you do not have permissions to set labels on your pull request. Leave "
"a comment and a core team member will add the labels for you. Most "
"reviewers will do this automatically without prior request."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:198
msgid ""
"Open a draft pull request. GitHub provides the ability to create a Pull "
"Request in \"draft\" mode. On the \"New Pull Request\" page, below the "
"pull request description box there is a button for creating the pull "
"request. Click the arrow and choose \"Create draft pull request\". If "
"your PR is still a work in progress, please select this mode. You will "
"still be able to run the CI against it. Once the PR is ready for review "
"you can click in \"Ready for review\" button at the bottom of the page\" "
"and reviewers will start reviewing. When you are actively changing your "
"PR, set it back to draft PR mode to signal that reviewers do not need to "
"spend time reviewing the PR right now. When it is ready for review again,"
" mark it as such."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:213
msgid "Getting a pull request merged"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:215
msgid ""
"As you submit the pull request as described in the section "
":ref:`submit_pr`. One of the reviewers will start a CI run by replying "
"with a comment ``/test`` as described in :ref:`trigger_phrases`. If you "
"are a core team member, you may trigger the CI run yourself."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:220
msgid ""
"Basic static code analyzer by Github Action and Travis CI. Golang linter "
"suggestions are added in-line on PRs. For other failed jobs, please refer"
" to build log for required action (e.g. Please run ``go mod tidy && go "
"mod vendor`` and submit your changes, etc)."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:225
msgid ":ref:`ci_jenkins`: Will run a series of tests:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:227
msgid "Unit tests"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:228
msgid "Single node runtime tests"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:229
msgid "Multi node Kubernetes tests"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:231
msgid ""
"If a CI test fails which seems unrelated to your PR, it may be a flaky "
"test. Follow the process described in :ref:`ci_failure_triage`."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:234
msgid ""
"As part of the submission, GitHub will have requested a review from the "
"respective code owners according to the ``CODEOWNERS`` file in the "
"repository."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:238
msgid "Address any feedback received from the reviewers"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:239
msgid ""
"You can push individual commits to address feedback and then rebase your "
"branch at the end before merging."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:242
msgid ""
"Owners of the repository will automatically adjust the labels on the pull"
" request to track its state and progress towards merging."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:245
msgid ""
"Once the PR has been reviewed and the CI tests have passed, the PR will "
"be merged by one of the repository owners. In case this does not happen, "
"ping us on Slack."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:249
msgid ""
"If reviewers have requested changes and those changes have been "
"addressed, re-request a review for the reviewers that have requested "
"changes. Otherwise, those reviewers will not be notified and your PR will"
" not receive any reviews. If the PR is considerably large (e.g. with more"
" than 200 lines changed and/or more than 6 commits) create new commit for"
" each review. This will make the review process smoother as GitHub has "
"limitations that prevents reviewers from only seeing the new changes "
"added since the last time they have reviewed a PR. Once all reviews are "
"addressed those commits should be squashed against the commit that "
"introduced those changes. This can be easily accomplished by the usage of"
" ``git rebase -i origin/master`` and in that windows, move these new "
"commits below the commit that introduced the changes and replace the work"
" ``pick`` with ``fixup``. In the following example, commit ``d2cb02265`` "
"will be meld into ``9c62e62d8`` and commit ``146829b59`` will be meld "
"into ``9400fed20``."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:271
msgid ""
"Once this is done you can perform push force into your branch and request"
" for your PR to be merged."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:276
msgid "Pull requests review process for committers"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:278
msgid ""
"Every committer in the `committers team "
"<https://github.com/orgs/cilium/teams/committers/members>`_ belongs to "
"`one or more other teams in the Cilium organization "
"<https://github.com/orgs/cilium/teams/team/teams>`_ if you would like to "
"be added or removed from any team, please contact any of the `maintainers"
" <https://github.com/orgs/cilium/teams/cilium-maintainers/members>`_."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:283
msgid ""
"Once a PR is open, GitHub will automatically pick which `teams "
"<https://github.com/orgs/cilium/teams/team/teams>`_ should review the PR "
"using the ``CODEOWNERS`` file. Each committer can see the PRs they need "
"to review by filtering by reviews requested. A good filter is provided in"
" this `link "
"<https://github.com/cilium/cilium/pulls?q=is%3Apr+is%3Aopen+draft%3Afalse"
"+user-review-requested%3A%40me+sort%3Aupdated-asc>`_ so make sure to "
"bookmark it."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:289
msgid ""
"Belonging to a team does not mean that a committer should know every "
"single line of code the team is maintaining. For this reason it is "
"recommended that once you have reviewed a PR, if you feel that another "
"pair of eyes is needed, you should re-request a review from the "
"appropriate team. In the example below, the committer belonging to the CI"
" team is re-requesting a review for other team members to review the PR. "
"This allows other team members belonging to the CI team to see the PR as "
"part of the PRs that require review in the `filter "
"<https://github.com/cilium/cilium/pulls?q=is%3Apr+is%3Aopen+draft%3Afalse"
"+review-requested%3A%40me+sort%3Aupdated-asc>`_"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:302
msgid ""
"When all review objectives for all ``CODEOWNERS`` are met, all required "
"CI tests have passed and a proper release label as been set, you may set "
"the ``ready-to-merge`` label to indicate that all criteria have been met."
" Maintainer's little helper might set this label automatically if the "
"previous requirements were met."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:311
msgid "``ready-to-merge``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:311
msgid "PR is ready to be merged"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:315
msgid "Weekly duties"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:317
msgid ""
"Some members of the committers team will have rotational duties that "
"change every week. The following steps describe how to perform those "
"duties. Please submit changes to these steps if you have found a better "
"way to perform each duty."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:322
msgid ""
"`People in a Janitor hat this week "
"<https://github.com/orgs/cilium/teams/tophat/members>`_"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:323
msgid ""
"`People in a Triage hat this week "
"<https://github.com/orgs/cilium/teams/tophat/members>`_"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:324
msgid ""
"`People in a Backport hat this week "
"<https://github.com/orgs/cilium/teams/tophat/members>`_"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:327
msgid "Pull request review process for Janitors team"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:331
msgid ""
"These instructions assume that whoever is reviewing is a member of the "
"Cilium GitHub organization or has the status of a contributor. This is "
"required to obtain the privileges to modify GitHub labels on the pull "
"request."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:336
msgid ""
"Dedicated expectation time for each member of Janitors team: Follow the "
"next steps 1 to 2 times per day. Works best if done first thing in the "
"working day."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:339
#, python-format
msgid ""
"Review all PRs needing a review `from you "
"<https://github.com/cilium/cilium/pulls?q=is%3Apr+is%3Aopen+draft%3Afalse"
"+team-review-requested%3Acilium%2Ftophat+sort%3Aupdated-asc>`_;"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:341
msgid ""
"If this PR was opened by a non-committer (e.g. external contributor) "
"please assign yourself to that PR and make sure to keep track the PR gets"
" reviewed and merged. This may extend beyond your assigned week for "
"Janitor duty."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:345
msgid ""
"If the contributor is a Cilium committer, then they are responsible for "
"getting the PR in a ready to be merged state by adding the ``ready-to-"
"merge`` label, once all reviews have been addressed and CI checks are "
"successful, so that the janitor can merge it (see below)."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:350
msgid ""
"If this PR is a backport PR (e.g. with the label ``kind/backport``) and "
"no-one else has reviewed the PR, review the changes as a sanity check. If"
" any individual commits deviate from the original patch, request review "
"from the original author to validate that the backport was correctly "
"applied."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:355
msgid ""
"Review overall correctness of the PR according to the rules specified in "
"the section :ref:`submit_pr`."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:358
msgid ""
"Set the labels accordingly, a bot called maintainer's little helper might"
" automatically help you with this."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:365
msgid "``dont-merge/needs-sign-off``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:365
msgid "Some commits are not signed off"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:367
msgid "``needs-rebase``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:367
msgid "PR is outdated and needs to be rebased"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:370
msgid ""
"Validate that bugfixes are marked with ``kind/bug`` and validate whether "
"the assessment of backport requirements as requested by the submitter "
"conforms to the :ref:`backport_criteria`."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:381
msgid ""
"If the PR is subject to backport, validate that the PR does not mix "
"bugfix and refactoring of code as it will heavily complicate the backport"
" process. Demand for the PR to be split."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:385
msgid ""
"Validate the ``release-note/*`` label and check the PR title for release "
"note suitability. Put yourself into the perspective of a future release "
"notes reader with lack of context and ensure the title is precise but "
"brief."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:392
msgid "``dont-merge/needs-release-note``"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:392
msgid "Do NOT merge PR, needs a release note"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:405
msgid ""
"Check for upgrade compatibility impact and if in doubt, set the label "
"``upgrade-impact`` and discuss in the Slack channel or in the weekly "
"meeting."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:414
msgid ""
"When all review objectives for all ``CODEOWNERS`` are met, all CI tests "
"have passed, and all reviewers have approved the requested changes, merge"
" the PR by clicking in the \"Rebase and merge\" button."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:418
msgid ""
"Merge PRs with the ``ready-to-merge`` label set `here "
"<https://github.com/cilium/cilium/pulls?q=is%3Apr+is%3Aopen+draft%3Afalse+sort"
"%3Aupdated-asc+label%3Aready-to-merge+>`_"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:420
msgid ""
"If the PR is a backport PR, update the labels of cherry-picked PRs with "
"the command included at the end of the original post. For example:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:427
msgid "Triage issues for Triage team"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:429
msgid ""
"Dedicated expectation time for each member of Triage team: 15/30 minutes "
"per day. Works best if done first thing in the working day."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:432
msgid ""
"Committers belonging to the `Triage team "
"<https://github.com/orgs/cilium/teams/triage>`_ should make sure that:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:435
msgid ""
"`Issues opened by community users are tracked down "
"<https://github.com/cilium/cilium/issues?q=is%3Aissue+is%3Aopen+no%3Aassignee+sort"
"%3Aupdated-desc>`_:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:437
msgid "Add the label ``kind/community-report``;"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:438
msgid "If feasible, try to reproduce the issue described;"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:439
msgid ""
"Assign a member that is responsible for that code section to that GitHub "
"issue;"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:441
msgid ""
"If it is a relevant bug to the rest of the committers, bring the issue up"
" in the weekly meeting. For example:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:444
msgid "The issue may impact an upcoming release; or"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:445
msgid "The resolution is unclear and assistance is needed to make progress; or"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:446
msgid ""
"The issue needs additional attention from core contributors to confirm "
"the resolution is the right path."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:449
#, python-format
msgid ""
"`Issues recently commented are not left out unanswered "
"<https://github.com/cilium/cilium/issues?q=is%3Aissue+is%3Aopen+sort"
"%3Aupdated-desc+label%3Akind%2Fcommunity-report>`_:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:451
msgid ""
"If there is someone already assigned to that GitHub issue and that "
"committer hasn't provided an answer to that user for a while, ping that "
"committer directly on Slack;"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:454
msgid "If the issue cannot be solved, bring the issue up in the weekly meeting."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:458
msgid "Backporting PR for Backport team"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:460
msgid ""
"Dedicated expectation time for each member of Backport team: 60 minutes "
"per week depending on releases that need to be performed at the moment."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:463
msgid ""
"Even if the next release is not imminently planned, it is still important"
" to perform backports to keep the process smooth and to catch potential "
"regressions in stable branches as soon as possible. If backports are "
"delayed, this can also delay releases which is important to avoid "
"especially if there are security-sensitive bug fixes that require an "
"immediate release."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:469
msgid ""
"In addition, when a backport PR is open, the person opening it is "
"responsible to drive it to completion, even if it stretches after the "
"assigned week of backporting hat. If this is not feasible (e.g. PTO), you"
" are responsible to initiate handover of the PR to the next week's "
"backporters."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:474
msgid ""
"If you can't backport a PR due technical constraints feel free to contact"
" the original author of that PR directly so they can backport the PR "
"themselves."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:477
msgid "Follow the :ref:`backport_process` guide to know how to perform this task."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:480
msgid "Coordination"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:482
msgid ""
"In general, coordinating in the #launchpad Slack channel with the other "
"hat owner for the week is encouraged. It can reduce your workload and it "
"will avoid backporting conflicts such as opening a PR with the same "
"backports. Such discussions will typically revolve around which branches "
"to tackle and which day of the week."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:488
msgid "An example interaction in #launchpad:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:495
msgid ""
"The other hat owner can then handle v1.9 and v1.10 backports the next "
"day, for example."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:498
msgid ""
"If there are many backports to be done, then splitting up the rounds can "
"be beneficial. Typically, backporters opt to start a round in the "
"beginning of the week and then another near the end of the week."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:502
msgid ""
"By the start / end of the week, if there are other backport PRs that "
"haven't been merged, then please coordinate with the previous / next "
"backporter to check what the status is and establish who will work on "
"getting the backports into the tree (for instance by investigating CI "
"failures and addressing review feedback). There's leeway to negotiate "
"depending on who has time available."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:511
msgid "Developer's Certificate of Origin"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:513
msgid ""
"To improve tracking of who did what, we've introduced a \"sign-off\" "
"procedure."
msgstr ""

#: ../../contributing/development/contributing_guide.rst:516
msgid ""
"The sign-off is a simple line at the end of the explanation for the "
"commit, which certifies that you wrote it or otherwise have the right to "
"pass it on as open-source work. The rules are pretty simple: if you can "
"certify the below:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:561
msgid "then you just add a line saying:"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:567
msgid "Use your real name (sorry, no pseudonyms or anonymous contributions.)"
msgstr ""

#: ../../contributing/development/contributing_guide.rst:569
msgid ""
"If you need to add your sign off to a commit you have already made, "
"please see `this article <https://docs.github.com/en/desktop"
"/contributing-and-collaborating-using-github-desktop/managing-"
"commits/amending-a-commit>`_."
msgstr ""

#: ../../contributing/development/debugging.rst:9
#: ../../contributing/development/dev_setup.rst:633
msgid "Debugging"
msgstr ""

#: ../../contributing/development/debugging.rst:13
msgid "toFQDNs and DNS Debugging"
msgstr ""

#: ../../contributing/development/debugging.rst:15
msgid ""
"The interactions of L3 toFQDNs and L7 DNS rules can be difficult to debug"
" around. Unlike many other policy rules, these are resolved at runtime "
"with unknown data. Pods may create large numbers of IPs in the cache or "
"the IPs returned may not be compatible with our datapath implementation. "
"Sometimes we also just have bugs."
msgstr ""

#: ../../contributing/development/debugging.rst:24
msgid "Isolating the source of toFQDNs issues"
msgstr ""

#: ../../contributing/development/debugging.rst:26
msgid ""
"While there is no common culprit when debugging, the DNS Proxy shares the"
" least code with other system and so is more likely the least audited in "
"this chain. The cascading caching scheme is also complex in its "
"behaviour. Determining whether an issue is caused by the DNS components, "
"in the policy layer or in the datapath is often the first step when "
"debugging toFQDNs related issues. Generally, working top-down is easiest "
"as the information needed to verify low-level correctness can be "
"collected in the initial debug invocations."
msgstr ""

#: ../../contributing/development/debugging.rst:36
msgid "REFUSED vs NXDOMAIN responses"
msgstr ""

#: ../../contributing/development/debugging.rst:38
msgid ""
"The proxy uses REFUSED DNS responses to indicate a denied request. Some "
"libc implementations, notably musl which is common in Alpine Linux "
"images, terminate the whole DNS search in these cases. This often "
"manifests as a connect error in applications, as the libc lookup returns "
"no data. To work around this, denied responses can be configured to be "
"NXDOMAIN by setting ``--tofqdns-dns-reject-response-code=nameError`` on "
"the command line."
msgstr ""

#: ../../contributing/development/debugging.rst:47
msgid "Monitor Events"
msgstr ""

#: ../../contributing/development/debugging.rst:49
msgid ""
"The DNS Proxy emits multiple L7 DNS monitor events. One for the request "
"and one for the response (if allowed). Often the L7 DNS rules are paired "
"with L3 toFQDNs rules and events relating to those rules are also "
"relevant."
msgstr ""

#: ../../contributing/development/debugging.rst:55
msgid "Be sure to run cilium monitor on the same node as the pod being debugged!"
msgstr ""

#: ../../contributing/development/debugging.rst:84
msgid ""
"The above is for a simple ``curl cilium.io`` in a pod. The L7 DNS request"
" is the first set of message and the subsequent L3 connection is the HTTP"
" component. AAAA DNS lookups commonly happen but were removed to simplify"
" the example."
msgstr ""

#: ../../contributing/development/debugging.rst:89
msgid ""
"If no L7 DNS requests appear, the proxy redirect is not in place. This "
"may mean that the policy does not select this endpoint or there is an "
"issue with the proxy redirection. Whether any redirects exist can be "
"checked with ``cilium status --all-redirects``. In the past, a bug "
"occurred with more permissive L3 rules overriding the proxy redirect, "
"causing the proxy to never see the requests."
msgstr ""

#: ../../contributing/development/debugging.rst:95
msgid ""
"If the L7 DNS request is blocked, with an explicit denied message, then "
"the requests are not allowed by the proxy. This may be due to a typo in "
"the network policy, or the matchPattern rule not allowing this domain. It"
" may also be due to a bug in policy propagation to the DNS Proxy."
msgstr ""

#: ../../contributing/development/debugging.rst:99
msgid ""
"If the DNS request is allowed, with an explicit message, and it should "
"not be, this may be because a more general policy is in place that allows"
" the request. ``matchPattern: \"*\"`` visibility policies are commonly in"
" place and would supersede all other, more restrictive, policies. If no "
"other policies are in place, incorrect allows may indicate a bug when "
"passing policy information to the proxy. There is no way to dump the "
"rules in the proxy, but a debug log is printed when a rule is added. Look"
" for ``DNS Proxy updating matchNames in allowed list during "
"UpdateRules``. The pkg/proxy/dns.go file contains the DNS proxy "
"implementation."
msgstr ""

#: ../../contributing/development/debugging.rst:109
msgid ""
"If L7 DNS behaviour seems correct, see the sections below to further "
"isolate the issue. This can be verified with ``cilium fqdn cache list``. "
"The IPs in the response should appear in the cache for the appropriate "
"endpoint. The lookup time is included in the json output of the command."
msgstr ""

#: ../../contributing/development/debugging.rst:122
msgid "DNS Proxy Errors"
msgstr ""

#: ../../contributing/development/debugging.rst:124
msgid ""
"REFUSED responses are returned when the proxy encounters an error during "
"processing. This can be confusing to debug as that is also the response "
"when a DNS request is denied.  An error log is always printed in these "
"cases. Some are callbacks provided by other packages via daemon in "
"cilium-agent."
msgstr ""

#: ../../contributing/development/debugging.rst:129
msgid ""
"``Rejecting DNS query from endpoint due to error``: This is the "
"\"normal\" policy-reject message. It is a debug log."
msgstr ""

#: ../../contributing/development/debugging.rst:131
msgid ""
"``cannot extract endpoint IP from DNS request``: The proxy cannot read "
"the socket information to read the source endpoint IP. This could mean an"
" issue with the datapath routing and information passing."
msgstr ""

#: ../../contributing/development/debugging.rst:134
msgid ""
"``cannot extract endpoint ID from DNS request``: The proxy cannot use the"
" source endpoint IP to get the cilium-internal ID for that endpoint. This"
" is different from the Security Identity. This could mean that cilium is "
"not managing this endpoint and that something has gone awry. It could "
"also mean a routing problem where a packet has arrived at the proxy "
"incorrectly."
msgstr ""

#: ../../contributing/development/debugging.rst:139
msgid ""
"``cannot extract destination IP:port from DNS request``: The proxy cannot"
" read the socket information of the original request to obtain the "
"intended target IP:Port. This could mean an issue with the datapath "
"routing and information passing."
msgstr ""

#: ../../contributing/development/debugging.rst:143
msgid ""
"``cannot find server ip in ipcache``: The proxy cannot resolve a Security"
" Identity for the target IP of the DNS request. This should always "
"succeed, as world catches all IPs not set by more specific entries. This "
"can mean a broken ipcache BPF table."
msgstr ""

#: ../../contributing/development/debugging.rst:147
msgid ""
"``Rejecting DNS query from endpoint due to error``: While checking if the"
" DNS request was allowed (based on Endpoint ID, destination IP:Port and "
"the DNS query) an error occurred. These errors would come from the "
"internal rule lookup in the proxy, the ``allowed`` field."
msgstr ""

#: ../../contributing/development/debugging.rst:151
msgid ""
"``Timeout waiting for response to forwarded proxied DNS lookup``: The "
"proxy forwards requests 1:1 and does not cache. It applies a 10s timeout "
"on responses to those requests, as the client will retry within this "
"period (usually). Bursts of these errors can happen if the DNS target "
"server misbehaves and many pods see DNS timeouts. This isn't an actual "
"problem with cilium or the proxy although it can be caused by policy "
"blocking the DNS target server if it is in-cluster."
msgstr ""

#: ../../contributing/development/debugging.rst:158
msgid ""
"``Timed out waiting for datapath updates of FQDN IP information; "
"returning response``: When the proxy updates the DNS caches with response"
" data, it needs to allow some time for that information to get into the "
"datapath. Otherwise, pods would attempt to make the outbound connection "
"(the thing that caused the DNS lookup) before the datapath is ready. Many"
" stacks retry the SYN in such cases but some return an error and some "
"apps further crash as a response. This delay is configurable by setting "
"the ``--tofqdns-proxy-response-max-delay`` command line argument but "
"defaults to 100ms. It can be exceeded if the system is under load."
msgstr ""

#: ../../contributing/development/debugging.rst:170
msgid "Identities and Policy"
msgstr ""

#: ../../contributing/development/debugging.rst:172
msgid ""
"Once a DNS response has been passed back through the proxy and is placed "
"in the DNS cache ``toFQDNs`` rules can begin using the IPs in the cache. "
"There are multiple layers of cache:"
msgstr ""

#: ../../contributing/development/debugging.rst:176
msgid ""
"A per-Endpoint ``DNSCache`` stores the lookups for this endpoint. It is "
"restored on cilium startup with the endpoint. Limits are applied here for"
" ``--tofqdns-endpoint-max-ip-per-hostname`` and TTLs are tracked. The "
"``--tofqdns-min-ttl`` is not used here."
msgstr ""

#: ../../contributing/development/debugging.rst:180
msgid ""
"A per-Endpoint ``DNSZombieMapping`` list of IPs that have expired from "
"the per-Endpoint cache but are waiting for the Connection Tracking GC to "
"mark them in-use or not. This can take up to 12 hours to occur. This list"
" is size-limited by ``--tofqdns-max-deferred-connection-deletes``."
msgstr ""

#: ../../contributing/development/debugging.rst:184
msgid ""
"A global ``DNSCache`` where all endpoint and poller DNS data is "
"collected. It does apply the ``--tofqdns-min-ttl`` value but not the "
"``--tofqdns-endpoint-max-ip-per-hostname`` value."
msgstr ""

#: ../../contributing/development/debugging.rst:188
msgid ""
"If an IP exists in the FQDN cache (check with ``cilium fqdn cache list``)"
" then ``toFQDNs`` rules that select a domain name, either explicitly via "
"``matchName`` or via ``matchPattern``, should cause IPs for that domain "
"to have allocated Security Identities. These can be listed with:"
msgstr ""

#: ../../contributing/development/debugging.rst:212
msgid ""
"Note that CIDR identities are allocated locally on the node and have a "
"high-bit set so they are often in the 16-million range. Note that this is"
" the identity in the monitor output for the HTTP connection."
msgstr ""

#: ../../contributing/development/debugging.rst:215
msgid ""
"In cases where there is no matching identity for an IP in the fqdn cache "
"it may simply be because no policy selects an associated domain. The "
"policy system represents each ``toFQDNs:`` rule with a ``FQDNSelector`` "
"instance. These receive updates from a global ``NameManage`` in the "
"daemon. They can be listed along with other selectors (roughly "
"corresponding to any L3 rule):"
msgstr ""

#: ../../contributing/development/debugging.rst:243
msgid ""
"In this example 16777217 is used by two selectors, one with "
"``matchPattern: \"*\"`` and another empty one. This is because of the "
"policy in use:"
msgstr ""

#: ../../contributing/development/debugging.rst:267
msgid ""
"The L7 DNS rule has an implicit L3 allow-all because it defines only L4 "
"and L7 sections. This is the second selector in the list, and includes "
"all possible L3 identities known in the system. In contrast, the first "
"selector, which corresponds to the ``toFQDNS: matchName: \"*\"`` rule "
"would list all identities for IPs that came from the DNS Proxy. Other "
"CIDR identities would not be included."
msgstr ""

#: ../../contributing/development/debugging.rst:275
msgid "Unintended DNS Policy Drops"
msgstr ""

#: ../../contributing/development/debugging.rst:277
msgid ""
"``toFQDNSs`` policy enforcement relies on the source POD performing a DNS"
" query before using an IP address returned in the DNS response. Sometimes"
" PODs may hold on to a DNS response and start new connections to the same"
" IP address at a later time. This may trigger policy drops if the DNS "
"response has expired as requested by the DNS server in the time-to-live "
"(TTL) value in the response. When DNS is used for service load balancing "
"the advertised TTL value may be short (e.g., 60 seconds). To allow for "
"reasonable POD behavior without unintended policy drops Cilium employs a "
"configurable minimum DNS TTL value via ``--tofqdns-min-ttl`` which "
"defaults to 3600 seconds. This setting overrides short TTLs and allows "
"the POD to use the IP address in the DNS response for one hour. Existing "
"connections also keep the IP address as allowed in the policy. Any new "
"connections opened by the POD using the same IP address without "
"performing a new DNS query after the (possibly extended) DNS TTL has "
"expired can be dropped by Cilium policy enforcement. To allow PODs to use"
" the DNS response after TTL expiry for new connections a command line "
"option ``--tofqdns-idle-connection-grace-period`` may be used to keep the"
" IP-address/name mapping valid in the policy for an extended time after "
"DNS TTL expiry. This option takes effect only if the POD has opened at "
"least one connection during the DNS TTL period."
msgstr ""

#: ../../contributing/development/debugging.rst:298
msgid "Datapath Plumbing"
msgstr ""

#: ../../contributing/development/debugging.rst:300
msgid ""
"For a policy to be fully realized the datapath for an Endpoint must be "
"updated. In the case of a new DNS-source IP, the CIDR identity associated"
" with it must propagate from the selectors to the Endpoint specific "
"policy. Unless a new policy is being added, this often only involves "
"updating the Policy Map of the Endpoint with the new CIDR Identity of the"
" IP. This can be verified:"
msgstr ""

#: ../../contributing/development/debugging.rst:317
msgid ""
"Note that the labels for identities are resolved here. This can be "
"skipped, or there may be cases where this doesn't occur:"
msgstr ""

#: ../../contributing/development/debugging.rst:331
msgid ""
"L3 ``toFQDNs`` rules are egress only, so we would expect to see an "
"``Egress`` entry with Security Identity ``16777217``. The L7 rule, used "
"to redirect to the DNS Proxy is also present with a populated ``PROXY "
"PORT``. It has a 0 ``IDENTITY`` as it is an L3 wildcard, i.e. the policy "
"allows any peer on the specified port."
msgstr ""

#: ../../contributing/development/debugging.rst:337
msgid "An identity missing here can be an error in various places:"
msgstr ""

#: ../../contributing/development/debugging.rst:339
msgid ""
"Policy doesn't actually allow this Endpoint to connect. A sanity check is"
" to use ``cilium endpoint list`` to see if cilium thinks it should have "
"policy enforcement."
msgstr ""

#: ../../contributing/development/debugging.rst:342
msgid ""
"Endpoint regeneration is slow and the Policy Map has not been updated "
"yet. This can occur in cases where we have leaked IPs from the DNS cache "
"(i.e. they were never deleted correctly) or when there are legitimately "
"many IPs. It can also simply mean an overloaded node or even a deadlock "
"within cilium."
msgstr ""

#: ../../contributing/development/debugging.rst:346
msgid ""
"A more permissive policy has removed the need to include this identity. "
"This is likely a bug, however, as the IP would still have an identity "
"allocated and it would be included in the Policy Map.  In the past, a "
"similar bug occurred with the L7 redirect and that would stop this whole "
"process at the beginning."
msgstr ""

#: ../../contributing/development/debugging.rst:353
msgid "Mutexes / Locks and Data Races"
msgstr ""

#: ../../contributing/development/debugging.rst:357
msgid "This section only applies to Golang code."
msgstr ""

#: ../../contributing/development/debugging.rst:359
msgid ""
"There are a few options available to debug Cilium data races and "
"deadlocks."
msgstr ""

#: ../../contributing/development/debugging.rst:361
msgid ""
"To debug data races, Golang allows ``-race`` to be passed to the compiler"
" to compile Cilium with race detection. Additionally, the flag can be "
"provided to ``go test`` to detect data races in a testing context."
msgstr ""

#: ../../contributing/development/debugging.rst:369
#: ../../contributing/development/images.rst:37
msgid "Race detection"
msgstr ""

#: ../../contributing/development/debugging.rst:371
msgid "To compile a Cilium binary with race detection, you can do:"
msgstr ""

#: ../../contributing/development/debugging.rst:379
msgid ""
"For building the Operator with race detection, you must also provide "
"``BASE_IMAGE`` which can be the ``cilium/cilium-runtime`` image from the "
"root Dockerfile found in the Cilium repository."
msgstr ""

#: ../../contributing/development/debugging.rst:383
msgid "To run integration tests with race detection, you can do:"
msgstr ""

#: ../../contributing/development/debugging.rst:391
msgid "Deadlock detection"
msgstr ""

#: ../../contributing/development/debugging.rst:393
msgid ""
"Cilium can be compiled with a build tag ``lockdebug`` which will provide "
"a seamless wrapper over the standard mutex types in Golang, via `sasha-s"
"/go-deadlock library <https://github.com/sasha-s/go-deadlock>`_. No "
"action is required, besides building the binary with this tag."
msgstr ""

#: ../../contributing/development/debugging.rst:398
msgid "For example:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:10
msgid "Development Setup"
msgstr ""

#: ../../contributing/development/dev_setup.rst:13
msgid "Verifying Your Development Setup"
msgstr ""

#: ../../contributing/development/dev_setup.rst:15
msgid ""
"Assuming you have Go installed, you can quickly verify many elements of "
"your development setup by running:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:23
msgid "Requirements"
msgstr ""

#: ../../contributing/development/dev_setup.rst:25
msgid ""
"You need to have the following tools available in order to effectively "
"contribute to Cilium:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:29
#: ../../contributing/development/dev_setup.rst:61
#: ../../contributing/release/backports.rst:125
msgid "Dependency"
msgstr ""

#: ../../contributing/development/dev_setup.rst:29
#: ../../contributing/development/dev_setup.rst:61
msgid "Version / Commit ID"
msgstr ""

#: ../../contributing/development/dev_setup.rst:29
#: ../../contributing/development/dev_setup.rst:61
#: ../../contributing/release/backports.rst:125
msgid "Download Command"
msgstr ""

#: ../../contributing/development/dev_setup.rst:31
#: ../../contributing/release/backports.rst:129
msgid "git"
msgstr ""

#: ../../contributing/development/dev_setup.rst:31
#: ../../contributing/development/dev_setup.rst:51
msgid "latest"
msgstr ""

#: ../../contributing/development/dev_setup.rst:31
#: ../../contributing/development/dev_setup.rst:33
#: ../../contributing/development/dev_setup.rst:35
#: ../../contributing/development/dev_setup.rst:37
#: ../../contributing/development/dev_setup.rst:47
#: ../../contributing/development/dev_setup.rst:49
#: ../../contributing/development/dev_setup.rst:51
#: ../../contributing/development/dev_setup.rst:65
#: ../../contributing/release/backports.rst:127
#: ../../contributing/release/backports.rst:129
#: ../../contributing/release/backports.rst:131
#: ../../contributing/release/backports.rst:137
msgid "N/A (OS-specific)"
msgstr ""

#: ../../contributing/development/dev_setup.rst:33
msgid "clang"
msgstr ""

#: ../../contributing/development/dev_setup.rst:33
#: ../../contributing/development/dev_setup.rst:35
msgid ">= 10.0 (latest recommended)"
msgstr ""

#: ../../contributing/development/dev_setup.rst:35
msgid "llvm"
msgstr ""

#: ../../contributing/development/dev_setup.rst:37
msgid "`go <https://golang.org/dl/>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:37
msgid "|GO_RELEASE|"
msgstr ""

#: ../../contributing/development/dev_setup.rst:39
msgid "`ginkgo <https://github.com/onsi/ginkgo>`__"
msgstr ""

#: ../../contributing/development/dev_setup.rst:39
msgid ">= 1.4.0 and < 2.0.0"
msgstr ""

#: ../../contributing/development/dev_setup.rst:39
msgid "``go install github.com/onsi/ginkgo/ginkgo@latest``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:41
msgid "`golangci-lint <https://github.com/golangci/golangci-lint>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:41
msgid ">= v1.27"
msgstr ""

#: ../../contributing/development/dev_setup.rst:41
msgid "``go install github.com/golangci/golangci-lint@latest``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:43
msgid "`cfssl <https://github.com/cloudflare/cfssl>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:43
#: ../../contributing/development/dev_setup.rst:45
msgid ">= v1.6.0"
msgstr ""

#: ../../contributing/development/dev_setup.rst:43
msgid "``go install github.com/cloudflare/cfssl/cmd/cfssl@latest``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:45
msgid "`cfssljson <https://github.com/cloudflare/cfssl>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:45
msgid "``go install github.com/cloudflare/cfssl/cmd/cfssljson@latest``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:47
msgid "`Docker <https://docs.docker.com/engine/installation/>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:47
#: ../../contributing/development/dev_setup.rst:49
msgid "OS-Dependent"
msgstr ""

#: ../../contributing/development/dev_setup.rst:49
msgid "`Docker-Compose <https://docs.docker.com/compose/install/>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:51
msgid "python3-pip"
msgstr ""

#: ../../contributing/development/dev_setup.rst:54
msgid ""
"For `integration_testing`, you will need to run ``docker`` without "
"privileges. You can usually achieve this by adding your current user to "
"the ``docker`` group."
msgstr ""

#: ../../contributing/development/dev_setup.rst:58
msgid "Finally, in order to run Cilium locally on VMs, you need:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:63
msgid "`Vagrant <https://www.vagrantup.com/downloads>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:63
msgid ">= 2.0"
msgstr ""

#: ../../contributing/development/dev_setup.rst:63
msgid ""
"`Vagrant Install Instructions "
"<https://www.vagrantup.com/docs/installation>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:65
msgid "`VirtualBox <https://www.virtualbox.org/wiki/Downloads>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:65
msgid ">= 5.2"
msgstr ""

#: ../../contributing/development/dev_setup.rst:68
msgid ""
"You should start with the `gs_guide`, which walks you through the set-up,"
" such as installing Vagrant, getting the Cilium sources, and going "
"through some Cilium basics."
msgstr ""

#: ../../contributing/development/dev_setup.rst:74
msgid "Vagrant Setup"
msgstr ""

#: ../../contributing/development/dev_setup.rst:76
msgid ""
"While the `gs_guide` uses a Vagrantfile tuned for the basic walk through,"
" the setup for the Vagrantfile in the root of the Cilium tree depends on "
"a number of environment variables and network setup that are managed via "
"``contrib/vagrant/start.sh``."
msgstr ""

#: ../../contributing/development/dev_setup.rst:82
msgid "Option 1 - Using the Provided Vagrantfiles (Recommended)"
msgstr ""

#: ../../contributing/development/dev_setup.rst:84
msgid "To bring up a Vagrant VM with Cilium plus dependencies installed, run:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:90
msgid ""
"This will create and run a vagrant VM based on the base box "
"``cilium/ubuntu``. The ``vm_name`` argument is optional and allows you to"
" add new nodes to an existing cluster. For example, to add a net-next VM "
"to a one-node cluster:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:98
msgid ""
"Cilium Vagrantfiles look for a file ``.devvmrc`` in the root of your "
"Cilium repository. This file is ignored for Git, so it does not exist by "
"default. If this file exists and is executable, it will be executed in "
"the beginning of the VM bootstrap. This allows you to automatically "
"customize the new VM, e.g., with your personal Git configuration. You may"
" also want to add any local entries you need in ``/etc/hosts``, etc."
msgstr ""

#: ../../contributing/development/dev_setup.rst:106
msgid "For example, you could have something like this in your ``.devvmrc``:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:119
msgid ""
"Remember to make the script executable (``chmod +x .devvmrc``). When "
"successfully running, the VM bootstrap shows a message like this right "
"after the shared folders have been set up:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:128
msgid "The box is currently available for the following providers:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:130
msgid "virtualbox"
msgstr ""

#: ../../contributing/development/dev_setup.rst:133
msgid "Configuration Options"
msgstr ""

#: ../../contributing/development/dev_setup.rst:135
msgid ""
"The following environment variables can be set to customize the VMs "
"brought up by vagrant:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:138
msgid ""
"``NWORKERS=n``: Number of child nodes you want to start with the master, "
"default 0."
msgstr ""

#: ../../contributing/development/dev_setup.rst:140
msgid ""
"``RELOAD=1``: Issue a ``vagrant reload`` instead of ``vagrant up``, "
"useful to resume halted VMs."
msgstr ""

#: ../../contributing/development/dev_setup.rst:142
msgid ""
"``NO_PROVISION=1``: Avoid provisioning Cilium inside the VM. Supports "
"quick restart without recompiling all of Cilium."
msgstr ""

#: ../../contributing/development/dev_setup.rst:144
msgid ""
"``K8S=1``: Build & install kubernetes on the nodes. ``k8s1`` is the "
"master node, which contains both master components: etcd, kube-"
"controller-manager, kube-scheduler, kube-apiserver, and node components: "
"kubelet, kube-proxy, kubectl and Cilium. When used in combination with "
"``NWORKERS=1`` a second node is created, where ``k8s2`` will be a "
"kubernetes node, which contains: kubelet, kube-proxy, kubectl and cilium."
msgstr ""

#: ../../contributing/development/dev_setup.rst:150
msgid "``NETNEXT=1``: Run with net-next kernel."
msgstr ""

#: ../../contributing/development/dev_setup.rst:151
msgid ""
"``SERVER_BOX`` and ``SERVER_VERSION``: Run with a specified vagrant box. "
"See: ``vagrant_box_defaults.rb`` for the supported versions. This may be "
"useful for BPF developers that want to test their changes with ``make -C "
"bpf && sudo test/bpf/verifier-test.sh``."
msgstr ""

#: ../../contributing/development/dev_setup.rst:156
msgid "``IPV4=1``: Run Cilium with IPv4 enabled."
msgstr ""

#: ../../contributing/development/dev_setup.rst:157
msgid ""
"``RUNTIME=x``: Sets up the container runtime to be used inside a "
"kubernetes cluster. Valid options are: ``docker``, ``containerd`` and "
"``crio``. If not set, it defaults to ``docker``."
msgstr ""

#: ../../contributing/development/dev_setup.rst:160
msgid "``VM_SET_PROXY=https://127.0.0.1:80/`` Sets up VM's ``https_proxy``."
msgstr ""

#: ../../contributing/development/dev_setup.rst:161
msgid ""
"``INSTALL=1``: Restarts the installation of Cilium, Kubernetes, etc. Only"
" useful when the installation was interrupted."
msgstr ""

#: ../../contributing/development/dev_setup.rst:163
msgid "``MAKECLEAN=1``: Execute ``make clean`` before building cilium in the VM."
msgstr ""

#: ../../contributing/development/dev_setup.rst:164
msgid ""
"``NO_BUILD=1``: Does not run the \"build\" provision step in the VM. "
"Assumes the developer had previously executed ``make build`` before "
"provisioning the VM."
msgstr ""

#: ../../contributing/development/dev_setup.rst:167
msgid ""
"``SHARE_PARENT``: Share the parent of your Cilium directory instead. This"
" requires your Cilium directory to be named ``cilium``, but will also "
"make all other files and folders in the parent directory available for "
"the VM. This is useful to share all the cilium repos to the VM, for "
"example."
msgstr ""

#: ../../contributing/development/dev_setup.rst:171
msgid ""
"``USER_MOUNTS``: Additional mounts for the VM in a comma-separated list "
"of mount specifications. Each mount specification can be simply a "
"directory name relative to the home directory, or include a '=' character"
" separating the destination mount point from the host directory. For "
"example:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:176
msgid "``USER_MOUNTS=foo``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:178
msgid "Mounts host directory ``~/foo`` as ``/home/vagrant/foo``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:180
msgid "``USER_MOUNTS=foo,/tmp/bar=/tmp/bar``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:182
msgid ""
"Mounts host directory ``~/foo`` as ``/home/vagrant/foo`` in the VM, and "
"host directory ``/tmp/bar`` as ``/tmp/bar`` in the VM."
msgstr ""

#: ../../contributing/development/dev_setup.rst:185
msgid ""
"``VM_MEMORY``: Memory in megabytes to configure for the VMs (default "
"4096)."
msgstr ""

#: ../../contributing/development/dev_setup.rst:186
msgid "``VM_CPUS``: Number of CPUs to configure for the VMs (default 2)."
msgstr ""

#: ../../contributing/development/dev_setup.rst:188
msgid ""
"If you want to start the VM with cilium enabled with ``containerd``, with"
" kubernetes installed and plus a worker, run:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:195
msgid "If you want to get VM status, run:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:201
msgid ""
"If you want to connect to the Kubernetes cluster running inside the "
"developer VM via ``kubectl`` from your host machine, set ``KUBECONFIG`` "
"environment variable to include new kubeconfig file:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:207
msgid "and add ``127.0.0.1 k8s1`` to your hosts file."
msgstr ""

#: ../../contributing/development/dev_setup.rst:209
msgid ""
"If you have any issue with the provided vagrant box ``cilium/ubuntu`` or "
"need a different box format, you may build the box yourself using the "
"`packer scripts <https://github.com/cilium/packer-ci-build>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:214
msgid "Launch CI VMs"
msgstr ""

#: ../../contributing/development/dev_setup.rst:216
msgid ""
"The ``test`` directory also contains a ``Vagrantfile`` that can be used "
"to bring up the CI VM images that will cache a Vagrant box locally (in "
"``test/.vagrant/`` that prepulls all the docker images needed for the CI "
"tests. Unfortunately some of the options are different from the main "
"Vagrantfile, for example:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:222
msgid ""
"``K8S_NODES`` determines the total number of k8s nodes, including the "
"master. - ``NWORKERS`` is not supported."
msgstr ""

#: ../../contributing/development/dev_setup.rst:224
msgid "``USER_MOUNTS`` is not available."
msgstr ""

#: ../../contributing/development/dev_setup.rst:226
msgid "To start a local k8s 1.18 cluster with one CI VM locally, run:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:233
msgid ""
"This will first destroy any CI VMs you may have running on the current "
"``K8S_VERSION``, and then create a local Vagrant box if not already "
"created. This can take some time."
msgstr ""

#: ../../contributing/development/dev_setup.rst:237
msgid ""
"VM preloading can be turned off by exporting ``VM_PRELOAD=false``. You "
"can run ``make clean`` in ``test`` to delete the cached vagrant box."
msgstr ""

#: ../../contributing/development/dev_setup.rst:240
msgid "To start the CI runtime VM locally, run:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:247
msgid ""
"The runtime VM is connected to the same private VirtualBox network as the"
" local CI k8s nodes."
msgstr ""

#: ../../contributing/development/dev_setup.rst:250
msgid ""
"The runtime VM uses the same cached box as the k8s nodes, but does not "
"start K8s, but runs Cilium as a systemd service."
msgstr ""

#: ../../contributing/development/dev_setup.rst:254
msgid "Option 2 - Manual Installation"
msgstr ""

#: ../../contributing/development/dev_setup.rst:256
msgid ""
"Alternatively you can import the vagrant box ``cilium/ubuntu`` directly "
"and manually install Cilium:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:282
msgid "Notes"
msgstr ""

#: ../../contributing/development/dev_setup.rst:284
msgid ""
"Your Cilium tree is mapped to the VM so that you do not need to keep "
"manually copying files between your host and the VM. Folders are by "
"default synced automatically using `VirtualBox Shared Folders "
"<https://www.virtualbox.org/manual/ch04.html#sharedfolders>`_ with NFS. "
"Note that your host firewall must have a variety of ports open. The "
"Vagrantfile will inform you of the configuration of these addresses and "
"ports to enable NFS."
msgstr ""

#: ../../contributing/development/dev_setup.rst:293
msgid ""
"OSX file system is by default case insensitive, which can confuse git.  "
"At the writing of this Cilium repo has no file names that would be "
"considered referring to the same file on a case insensitive file system."
"  Regardless, it may be useful to create a disk image with a case "
"sensitive file system for holding your git repos."
msgstr ""

#: ../../contributing/development/dev_setup.rst:302
msgid ""
"VirtualBox for OSX currently (version 5.1.22) always reports host-only "
"networks' prefix length as 64.  Cilium needs this prefix to be 16, and "
"the startup script will check for this.  This check always fails when "
"using VirtualBox on OSX, but it is safe to let the startup script to "
"reset the prefix length to 16."
msgstr ""

#: ../../contributing/development/dev_setup.rst:310
msgid "Make sure your host NFS configuration is setup to use tcp:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:323
msgid ""
"If for some reason, running of the provisioning script fails, you should "
"bring the VM down before trying again:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:330
msgid "Local Development in Vagrant Box"
msgstr ""

#: ../../contributing/development/dev_setup.rst:332
msgid ""
"See :ref:`dev_env` for information on how to setup the development "
"environment."
msgstr ""

#: ../../contributing/development/dev_setup.rst:334
msgid ""
"When the development VM is provisioned, it builds and installs Cilium.  "
"After the initial build and install you can do further building and "
"testing incrementally inside the VM. ``vagrant ssh`` takes you to the "
"Cilium source tree directory "
"(``/home/vagrant/go/src/github.com/cilium/cilium``) by default, and the "
"following commands assume that you are working within that directory."
msgstr ""

#: ../../contributing/development/dev_setup.rst:341
msgid "Build Cilium"
msgstr ""

#: ../../contributing/development/dev_setup.rst:343
msgid ""
"When you make changes, the tree is automatically kept in sync via NFS. "
"You can issue a build as follows:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:351
msgid "Install to dev environment"
msgstr ""

#: ../../contributing/development/dev_setup.rst:353
msgid "After a successful build and test you can re-install Cilium by:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:360
msgid "Restart Cilium service"
msgstr ""

#: ../../contributing/development/dev_setup.rst:362
msgid "To run the newly installed version of Cilium, restart the service:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:368
msgid ""
"You can verify the service and cilium-agent status by the following "
"commands, respectively:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:377
msgid "Simple smoke-test with HTTP policies"
msgstr ""

#: ../../contributing/development/dev_setup.rst:379
msgid ""
"After Cilium daemon has been restarted, you may want to verify that it "
"boots up properly and integration with Envoy still works. To do this, run"
" this bash test script:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:387
msgid ""
"This test launches three docker containers (one curl client, and two "
"httpd servers) and tests various simple network policies with them. These"
" containers should be automatically removed when the test finishes."
msgstr ""

#: ../../contributing/development/dev_setup.rst:395
msgid "Making Changes"
msgstr ""

#: ../../contributing/development/dev_setup.rst:397
msgid "Make sure the ``master`` branch of your fork is up-to-date:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:403
msgid "Create a PR branch with a descriptive name, branching from ``master``:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:409
msgid "Make the changes you want."
msgstr ""

#: ../../contributing/development/dev_setup.rst:410
msgid "Separate the changes into logical commits."
msgstr ""

#: ../../contributing/development/dev_setup.rst:412
msgid ""
"Describe the changes in the commit messages. Focus on answering the "
"question why the change is required and document anything that might be "
"unexpected."
msgstr ""

#: ../../contributing/development/dev_setup.rst:415
msgid ""
"If any description is required to understand your code changes, then "
"those instructions should be code comments instead of statements in the "
"commit description."
msgstr ""

#: ../../contributing/development/dev_setup.rst:421
msgid ""
"For submitting PRs, all commits need be to signed off (``git commit "
"-s``). See the section :ref:`dev_coo`."
msgstr ""

#: ../../contributing/development/dev_setup.rst:423
msgid "Make sure your changes meet the following criteria:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:425
msgid "New code is covered by :ref:`integration_testing`."
msgstr ""

#: ../../contributing/development/dev_setup.rst:426
msgid ""
"End to end integration / runtime tests have been extended or added. If "
"not required, mention in the commit message what existing test covers the"
" new code."
msgstr ""

#: ../../contributing/development/dev_setup.rst:429
msgid ""
"Follow-up commits are squashed together nicely. Commits should separate "
"logical chunks of code and not represent a chronological list of changes."
msgstr ""

#: ../../contributing/development/dev_setup.rst:432
msgid "Run ``git diff --check`` to catch obvious white space violations"
msgstr ""

#: ../../contributing/development/dev_setup.rst:433
msgid ""
"Run ``make`` to build your changes. This will also run ``make lint`` and "
"error out on any golang linting errors. The rules are configured in "
"``.golangci.yaml``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:435
msgid "See :ref:`integration_testing` on how to run integration tests."
msgstr ""

#: ../../contributing/development/dev_setup.rst:436
msgid ""
"See :ref:`testsuite` for information how to run the end to end "
"integration tests"
msgstr ""

#: ../../contributing/development/dev_setup.rst:438
msgid ""
"If you are making documentation changes, you can generate documentation "
"files and serve them locally on ``http://localhost:9081`` by running "
"``make render-docs``. This make target works both inside and outside the "
"Vagrant VM, assuming that ``docker`` is running in the environment."
msgstr ""

#: ../../contributing/development/dev_setup.rst:444
msgid "Add/update a golang dependency"
msgstr ""

#: ../../contributing/development/dev_setup.rst:446
msgid ""
"Let's assume we want to add ``github.com/containernetworking/cni`` "
"version ``v0.5.2``:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:455
msgid ""
"For a first run, it can take a while as it will download all dependencies"
" to your local cache but the remaining runs will be faster."
msgstr ""

#: ../../contributing/development/dev_setup.rst:458
msgid ""
"Updating k8s is a special case which requires updating k8s libraries in a"
" single change:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:473
msgid "Add/update a new Kubernetes version"
msgstr ""

#: ../../contributing/development/dev_setup.rst:475
msgid "Let's assume we want to add a new Kubernetes version ``v1.19.0``:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:477
msgid "Follow the above instructions to update the Kubernetes libraries."
msgstr ""

#: ../../contributing/development/dev_setup.rst:479
msgid ""
"Follow the next instructions depending on if it is a minor update or a "
"patch update."
msgstr ""

#: ../../contributing/development/dev_setup.rst:483
msgid "Minor version"
msgstr ""

#: ../../contributing/development/dev_setup.rst:485
msgid ""
"Check if it is possible to remove the last supported Kubernetes version "
"from :ref:`k8scompatibility`, :ref:`k8s_requirements`, "
":ref:`test_matrix`, :ref:`running_k8s_tests`, :ref:`gsg_istio` and add "
"the new Kubernetes version to that list."
msgstr ""

#: ../../contributing/development/dev_setup.rst:490
msgid ""
"If the minimal supported version changed, leave a note in the upgrade "
"guide stating the minimal supported Kubernetes version."
msgstr ""

#: ../../contributing/development/dev_setup.rst:493
msgid ""
"If the minimal supported version changed, search over the code, more "
"likely under ``pkg/k8s``, if there is code that can be removed which "
"specifically exists for the compatibility of the previous Kubernetes "
"minimal version supported."
msgstr ""

#: ../../contributing/development/dev_setup.rst:498
msgid ""
"If the minimal supported version changed, update the field "
"``MinimalVersionConstraint`` in ``pkg/k8s/version/version.go``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:501
msgid ""
"Sync all \"``slim``\" types by following the instructions in "
"``pkg/k8s/slim/README.md``.  The overall goal is to update changed fields"
" or deprecated fields from the upstream code. New functions / fields / "
"structs added in upstream that are not used in Cilium, can be removed."
msgstr ""

#: ../../contributing/development/dev_setup.rst:506
msgid ""
"Open files ``jenkinsfiles/{kubernetes-upstream,ginkgo-"
"kernel}.Jenkinsfile``, and bump the versions being tested. More important"
" is to make sure the pipeline used on all PRs are running with the new "
"Kubernetes version by default. Make sure the files "
"``contributing/testing/{ci,e2e}.rst`` are up to date with these changes."
msgstr ""

#: ../../contributing/development/dev_setup.rst:516
msgid "#  Update documentation files:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:513
msgid "Documentation/concepts/kubernetes/compatibility.rst"
msgstr ""

#: ../../contributing/development/dev_setup.rst:514
msgid "Documentation/concepts/kubernetes/requirements.rst"
msgstr ""

#: ../../contributing/development/dev_setup.rst:515
msgid "Documentation/contributing/testing/e2e.rst"
msgstr ""

#: ../../contributing/development/dev_setup.rst:516
msgid "Documentation/gettingstarted/istio.rst"
msgstr ""

#: ../../contributing/development/dev_setup.rst:518
msgid ""
"Update the Kubernetes version with the newer version in "
"``test/Vagrantfile``, ``test/test_suite_test.go`` and ``test/vagrant-"
"local-start.sh``."
msgstr ""

#: ../../contributing/development/dev_setup.rst:521
msgid ""
"Add the new coredns files specific for the Kubernetes version, for "
"``1.19`` is ``test/provision/manifest/1.19``. The coredns deployment "
"files can be found upstream as mentioned in the previous k8s version "
"coredns files. Perform a diff with the previous versions to check which "
"changes are required for our CI and which changes were added upstream."
msgstr ""

#: ../../contributing/development/dev_setup.rst:527
msgid ""
"If necessary, update the ``coredns`` files from "
"``contrib/vagrant/deployments`` with newer the file versions from "
"upstream."
msgstr ""

#: ../../contributing/development/dev_setup.rst:530
msgid ""
"Update the constraint in the function ``getK8sSupportedConstraints``, "
"that exists in the ``test/helpers/utils.go``, with the new Kubernetes "
"version that Cilium supports. It is possible that a new ``IsCiliumV1*`` "
"var in that file is required as well."
msgstr ""

#: ../../contributing/development/dev_setup.rst:535
msgid ""
"Add the new version in ``test/provision/k8s_install.sh``, if it is an RC "
"install it using binaries."
msgstr ""

#: ../../contributing/development/dev_setup.rst:538
msgid ""
"Bump the Kubernetes version in ``contrib/vagrant/scripts/helpers.bash`` "
"and the etcd version to the latest version."
msgstr ""

#: ../../contributing/development/dev_setup.rst:541
msgid "Run ``./contrib/scripts/check-k8s-code-gen.sh``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:543
msgid "Run ``go mod vendor && go mod tidy``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:545
msgid "Run ``./contrib/scripts/check-k8s-code-gen.sh`` (again)"
msgstr ""

#: ../../contributing/development/dev_setup.rst:547
msgid "Run ``make -C Documentation update-helm-values``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:549
msgid ""
"Compile the code locally to make sure all the library updates didn't "
"removed any used code."
msgstr ""

#: ../../contributing/development/dev_setup.rst:552
msgid ""
"Provision a new dev VM to check if the provisioning scripts work "
"correctly with the new k8s version."
msgstr ""

#: ../../contributing/development/dev_setup.rst:555
msgid ""
"Run ``git add vendor/ test/provision/manifest/ Documentation/ && git "
"commit -sam \"Update k8s tests and libraries to v1.23.0-rc.0\"``"
msgstr ""

#: ../../contributing/development/dev_setup.rst:557
#: ../../contributing/development/dev_setup.rst:581
msgid "Submit all your changes into a new PR."
msgstr ""

#: ../../contributing/development/dev_setup.rst:559
msgid ""
"Ping the CI team to make changes in Jenkins (adding new pipeline and "
"dedicated test trigger ``/test-X.XX-4.9`` where ``X.XX`` is the new "
"Kubernetes version)."
msgstr ""

#: ../../contributing/development/dev_setup.rst:563
msgid ""
"Run ``/test-upstream`` and the new ``/test-X.XX-4.9`` from the PR once "
"Jenkins is up-to-date."
msgstr ""

#: ../../contributing/development/dev_setup.rst:566
msgid ""
"Once CI is green and PR has been merged, ping the CI team again so that "
"they: #. Rotate the Jenkins pipelines and triggers due to removed/added "
"K8s versions."
msgstr ""

#: ../../contributing/development/dev_setup.rst:569
msgid ""
"Update the `Cilium CI matrix`_, ``.github/maintainers-little-"
"helper.yaml``, and GitHub required PR checks accordingly."
msgstr ""

#: ../../contributing/development/dev_setup.rst:575
msgid "Patch version"
msgstr ""

#: ../../contributing/development/dev_setup.rst:577
msgid "Bump the Kubernetes version in ``contrib/vagrant/scripts/helpers.bash``."
msgstr ""

#: ../../contributing/development/dev_setup.rst:579
msgid "Bump the Kubernetes version in ``test/provision/k8s_install.sh``."
msgstr ""

#: ../../contributing/development/dev_setup.rst:584
msgid "Optional: Docker and IPv6"
msgstr ""

#: ../../contributing/development/dev_setup.rst:586
msgid ""
"Note that these instructions are useful to you if you care about having "
"IPv6 addresses for your Docker containers."
msgstr ""

#: ../../contributing/development/dev_setup.rst:589
msgid "If you'd like IPv6 addresses, you will need to follow these steps:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:591
msgid "Edit ``/etc/docker/daemon.json`` and set the ``ipv6`` key to ``true``."
msgstr ""

#: ../../contributing/development/dev_setup.rst:600
msgid ""
"If that doesn't work alone, try assigning a fixed range. Many people have"
" reported trouble with IPv6 and Docker. `Source here. "
"<https://github.com/moby/moby/issues/29443#issuecomment-495808871>`_"
msgstr ""

#: ../../contributing/development/dev_setup.rst:612
msgid "And then:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:621
msgid "Restart the docker daemon to pick up the new configuration."
msgstr ""

#: ../../contributing/development/dev_setup.rst:623
msgid "The new command for creating a network managed by Cilium:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:630
msgid "Now new containers will have an IPv6 address assigned to them."
msgstr ""

#: ../../contributing/development/dev_setup.rst:636
msgid "Datapath code"
msgstr ""

#: ../../contributing/development/dev_setup.rst:637
msgid ""
"The tool ``cilium monitor`` can also be used to retrieve debugging "
"information from the eBPF based datapath. To enable all log messages:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:640
msgid "Start the ``cilium-agent`` with ``--debug-verbose=datapath``, or"
msgstr ""

#: ../../contributing/development/dev_setup.rst:641
msgid ""
"Run ``cilium config debug=true debugLB=true`` from an already running "
"agent."
msgstr ""

#: ../../contributing/development/dev_setup.rst:643
msgid ""
"These options enable logging functions in the datapath: ``cilium_dbg()``,"
" ``cilium_dbg_lb()`` and ``printk()``."
msgstr ""

#: ../../contributing/development/dev_setup.rst:648
msgid ""
"The ``printk()`` logging function is used by the developer to debug the "
"datapath outside of the ``cilium monitor``.  In this case, ``bpftool prog"
" tracelog`` can be used to retrieve debugging information from the eBPF "
"based datapath. Both ``cilium_dbg()`` and ``printk()`` functions are "
"available from the ``bpf/lib/dbg.h`` header file."
msgstr ""

#: ../../contributing/development/dev_setup.rst:653
msgid ""
"The image below shows the options that could be used as startup options "
"by ``cilium-agent`` (see upper blue box) or could be changed at runtime "
"by running ``cilium config <option(s)>`` for an already running agent "
"(see lower blue box). Along with each option, there is one or more "
"logging function associated with it: ``cilium_dbg()`` and ``printk()``, "
"for ``DEBUG`` and ``cilium_dbg_lb()`` for ``DEBUG_LB``."
msgstr ""

msgid "Cilium debug datapath options"
msgstr ""

#: ../../contributing/development/dev_setup.rst:666
msgid ""
"If you need to enable the ``LB_DEBUG`` for an already running agent by "
"running ``cilium config debugLB=true``, you must pass the option "
"``debug=true`` along."
msgstr ""

#: ../../contributing/development/dev_setup.rst:669
msgid ""
"Debugging of an individual endpoint can be enabled by running ``cilium "
"endpoint config ID debug=true``. Running ``cilium monitor -v`` will print"
" the normal form of monitor output along with debug messages:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:692
msgid "Passing ``-v -v`` supports deeper detail, for example:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:728
msgid ""
"One of the most common issues when developing datapath code is that the "
"eBPF code cannot be loaded into the kernel. This frequently manifests as "
"the endpoints appearing in the \"not-ready\" state and never switching "
"out of it:"
msgstr ""

#: ../../contributing/development/dev_setup.rst:740
msgid ""
"Running ``cilium endpoint get`` for one of the endpoints will provide a "
"description of known state about it, which includes eBPF verification "
"logs."
msgstr ""

#: ../../contributing/development/dev_setup.rst:743
msgid ""
"The files under ``/var/run/cilium/state`` provide context about how the "
"eBPF datapath is managed and set up. The .h files describe specific "
"configurations used for eBPF program compilation. The numbered "
"directories describe endpoint-specific state, including header "
"configuration files and eBPF binaries."
msgstr ""

#: ../../contributing/development/dev_setup.rst:748
msgid ""
"Current eBPF map state for particular programs is held under "
"``/sys/fs/bpf/``, and the `bpf-map <https://github.com/cilium/bpf-map>`_ "
"utility can be useful for debugging what is going on inside them, for "
"example:"
msgstr ""

#: ../../contributing/development/documentation.rst:9
msgid "Documentation Style"
msgstr ""

#: ../../contributing/development/documentation.rst:13
msgid ""
"Here are some guidelines and best practices for contributing to Cilium's "
"documentation. They have several objectives:"
msgstr ""

#: ../../contributing/development/documentation.rst:16
msgid ""
"Ensure that the documentation is rendered in the best possible way (in "
"particular for code blocks)."
msgstr ""

#: ../../contributing/development/documentation.rst:19
msgid "Make the documentation easy to maintain and extend."
msgstr ""

#: ../../contributing/development/documentation.rst:21
msgid "Help keep a consistent style throughout the documentation."
msgstr ""

#: ../../contributing/development/documentation.rst:23
msgid ""
"See also :ref:`the documentation for testing <testing-documentation>` for"
" instructions on how to preview documentation changes."
msgstr ""

#: ../../contributing/development/documentation.rst:27
msgid "Header"
msgstr ""

#: ../../contributing/development/documentation.rst:29
msgid "Use the following header when adding new files to the Documentation."
msgstr ""

#: ../../contributing/development/documentation.rst:39
msgid ""
"One exception is |RST| fragments that are supposed to be sourced from "
"other documentation files. Those do not need this header."
msgstr ""

#: ../../contributing/development/documentation.rst:43
msgid "Titles"
msgstr ""

#: ../../contributing/development/documentation.rst:45
msgid ""
"Prefer title case (capital letters on most words of the title) rather "
"than sentence case for titles. See this link if necessary: "
"https://titlecaseconverter.com/."
msgstr ""

#: ../../contributing/development/documentation.rst:50
msgid "Body"
msgstr ""

#: ../../contributing/development/documentation.rst:52
msgid ""
"Wrap the lines for long sentences or paragraphs. There is no fixed "
"convention on the length of lines, but targeting a width of about 80 "
"characters should be safe in most circumstances."
msgstr ""

#: ../../contributing/development/documentation.rst:57
msgid "Code Blocks"
msgstr ""

#: ../../contributing/development/documentation.rst:59
msgid ""
"Code snippets and other literal blocks usually fall under one of those "
"three categories:"
msgstr ""

#: ../../contributing/development/documentation.rst:62
msgid ""
"They contain `substitution references`_ (for example: ``|SCM_WEB|``). In "
"that case, always use the ``.. parsed-literal`` directive, otherwise the "
"token will not be substituted."
msgstr ""

#: ../../contributing/development/documentation.rst:66
#: ../../contributing/development/documentation.rst:87
#: ../../contributing/development/documentation.rst:123
#: ../../contributing/development/documentation.rst:180
#: ../../contributing/development/documentation.rst:222
#: ../../contributing/development/documentation.rst:242
#: ../../contributing/development/documentation.rst:262
msgid "Prefer:"
msgstr ""

#: ../../contributing/development/documentation.rst:75
#: ../../contributing/development/documentation.rst:103
#: ../../contributing/development/documentation.rst:133
#: ../../contributing/development/documentation.rst:191
#: ../../contributing/development/documentation.rst:207
#: ../../contributing/development/documentation.rst:230
#: ../../contributing/development/documentation.rst:249
#: ../../contributing/development/documentation.rst:268
msgid "Avoid:"
msgstr ""

#: ../../contributing/development/documentation.rst:83
msgid ""
"If the text is not a code snippet, but just some fragment that should be "
"printed verbatim (for example, the unstructured output of a shell "
"command), use the marker for `literal blocks`_ (``::``)."
msgstr ""

#: ../../contributing/development/documentation.rst:114
msgid ""
"The reason is that because these snippets contain no code, there is no "
"need to mark them as code or parsed literals. The former would tell "
"Sphinx to attempt to apply syntax highlight, the second would tell it to "
"look for |RST| markup to parse in the block."
msgstr ""

#: ../../contributing/development/documentation.rst:119
msgid ""
"If the text contained code or structured output, use the ``.. code-"
"block`` directive. Do *not* use the ``.. code`` directive, which is "
"slightly less flexible."
msgstr ""

#: ../../contributing/development/documentation.rst:155
msgid ""
"The ``.. code-block`` directive should always take a language name as "
"argument, for example: ``.. code-block:: yaml`` or ``.. code-block:: "
"shell-session``. The use of ``bash`` is possible but should be limited to"
" Bash scripts. For any listing of shell commands, and in particular if "
"the snippet mixes commands and their output, use ``shell-session``, which"
" will bring the best coloration and may trigger the generation of the "
"``Copy commands`` button."
msgstr ""

#: ../../contributing/development/documentation.rst:163
msgid ""
"For snippets containing shell commands, in particular if they also "
"contain the output for those commands, use prompt symbols to prefix the "
"commands. Use ``$`` for commands to run as a normal user, and ``#`` for "
"commands to run with administrator privileges. You may use ``sudo`` as an"
" alternative way to mark commands to run with privileges."
msgstr ""

#: ../../contributing/development/documentation.rst:173
msgid "Links"
msgstr ""

#: ../../contributing/development/documentation.rst:175
msgid ""
"Avoid using `embedded URIs`_ (```... <...>`__``), which make the document"
" harder to read when looking at the source code of the documentation. "
"Prefer to use `block-level hyperlink targets`_ (where the URI is not "
"written directly in the sentence in the |RST| file, below the paragraph)."
msgstr ""

#: ../../contributing/development/documentation.rst:197
msgid ""
"If using embedded URIs, use anonymous hyperlinks (```... <...>`__`` with "
"two underscores, see the documentation for `embedded URIs`_) instead of "
"named references (```... <...>`_``, note the single underscore)."
msgstr ""

#: ../../contributing/development/documentation.rst:201
msgid "Prefer (but see previous item):"
msgstr ""

#: ../../contributing/development/documentation.rst:217
msgid "Lists"
msgstr ""

#: ../../contributing/development/documentation.rst:219
msgid ""
"Left-align the body of a list item with the text on the first line, after"
" the item symbol."
msgstr ""

#: ../../contributing/development/documentation.rst:239
msgid ""
"For enumerated lists, prefer auto-numbering with the ``#.`` marker rather"
" than manually numbering the sections."
msgstr ""

#: ../../contributing/development/documentation.rst:257
msgid "Roles"
msgstr ""

#: ../../contributing/development/documentation.rst:259
msgid ""
"We have a dedicated role for referencing Cilium GitHub issues, to "
"reference them in a consistent fashion. Use it when relevant."
msgstr ""

#: ../../contributing/development/hubble.rst:13
msgid "This section is specific to Hubble contributions."
msgstr ""

#: ../../contributing/development/hubble.rst:16
msgid "Bumping the vendored Cilium dependency"
msgstr ""

#: ../../contributing/development/hubble.rst:18
msgid ""
"Hubble vendors Cilium using Go modules. You can bump the dependency by "
"first running:"
msgstr ""

#: ../../contributing/development/hubble.rst:25
msgid ""
"However, Cilium's ``go.mod`` contains ``replace`` directives, which are "
"ignored by ``go get`` and ``go mod``. Therefore you must also manually "
"copy any updated ``replace`` directives from Cilium's ``go.mod`` to "
"Hubble's ``go.mod``."
msgstr ""

#: ../../contributing/development/hubble.rst:29
msgid ""
"Once you have done this you can tidy up, vendor the modules, and verify "
"them:"
msgstr ""

#: ../../contributing/development/hubble.rst:37
msgid ""
"The bumped dependency should be committed as a single commit containing "
"all the changes to ``go.mod``, ``go.sum``, and the ``vendor`` directory."
msgstr ""

#: ../../contributing/development/images.rst:10
msgid "Building Container Images"
msgstr ""

#: ../../contributing/development/images.rst:12
msgid ""
"Two make targets exists to build container images automatically based on "
"the locally checked out branch:"
msgstr ""

#: ../../contributing/development/images.rst:16
msgid "Developer images"
msgstr ""

#: ../../contributing/development/images.rst:18
msgid ""
"Run ``make dev-docker-image`` to build a cilium-agent Docker image that "
"contains your local changes."
msgstr ""

#: ../../contributing/development/images.rst:25
msgid ""
"Run ``make docker-operator-generic-image`` (respectively, ``docker-"
"operator-aws-image`` or ``docker-operator-azure-image``) to build the "
"cilium-operator Docker image:"
msgstr ""

#: ../../contributing/development/images.rst:33
msgid ""
"The commands above assumes that your username for ``quay.io`` is "
"``myaccount``."
msgstr ""

#: ../../contributing/development/images.rst:39
msgid ""
"See section on :ref:`compiling Cilium with race detection <compile-"
"cilium-with-race-detection>`."
msgstr ""

#: ../../contributing/development/images.rst:43
msgid "Official release images"
msgstr ""

#: ../../contributing/development/images.rst:45
msgid "Anyone can build official release images using the make target below."
msgstr ""

#: ../../contributing/development/images.rst:52
msgid "Experimental Docker BuildKit and Buildx support"
msgstr ""

#: ../../contributing/development/images.rst:54
msgid ""
"Docker BuildKit allows build artifact caching between builds and "
"generally results in faster builds for the developer. Support can be "
"enabled by:"
msgstr ""

#: ../../contributing/development/images.rst:62
msgid ""
"Multi-arch image build support for arm64 (aka aarch64) and amd64 (aka "
"x86-64) can be enabled by defining:"
msgstr ""

#: ../../contributing/development/images.rst:69
msgid ""
"Multi-arch images are built using a cross-compilation builder by default,"
" which uses Go cross compilation for Go targets, and QEMU based emulation"
" for other build steps. You can also define your own Buildx builder if "
"you have access to both arm64 and amd64 machines. The \"cross\" builder "
"will be defined and used if your current builder is \"default\"."
msgstr ""

#: ../../contributing/development/images.rst:76
msgid ""
"Buildx targets push images automatically, so you must also have "
"DOCKER_REGISTRY and DOCKER_DEV_ACCOUNT defined, e.g.:"
msgstr ""

#: ../../contributing/development/images.rst:84
msgid ""
"Currently the cilium-runtime and cilium-builder images are released for "
"amd64 only (see the table below). This means that you have to build your "
"own cilium-runtime and cilium-builder images:"
msgstr ""

#: ../../contributing/development/images.rst:92
msgid ""
"After the build finishes update the runtime image references in other "
"Dockerfiles (``docker buildx imagetools inspect`` is useful for finding "
"image information). Then proceed to build the cilium-builder:"
msgstr ""

#: ../../contributing/development/images.rst:100
msgid ""
"After the build finishes update the main Cilium Dockerfile with the new "
"builder reference, then proceed to build Hubble from "
"github.com/cilium/hubble. Hubble builds via buildx QEMU based emulation, "
"unless you have an ARM machine added to your buildx builder:"
msgstr ""

#: ../../contributing/development/images.rst:111
msgid ""
"Update the main Cilium Dockerfile with the new Hubble reference and build"
" the multi-arch versions of the Cilium images:"
msgstr ""

#: ../../contributing/development/images.rst:119
msgid "Official Cilium repositories"
msgstr ""

#: ../../contributing/development/images.rst:121
msgid ""
"The following table contains the main container image repositories "
"managed by Cilium team. It is planned to convert the build process for "
"all images based on GH actions."
msgstr ""

#: ../../contributing/development/images.rst:126
msgid "**Github Repository**"
msgstr ""

#: ../../contributing/development/images.rst:126
msgid "**Dockerfile**"
msgstr ""

#: ../../contributing/development/images.rst:126
msgid "**container image repository**"
msgstr ""

#: ../../contributing/development/images.rst:126
msgid "**Architectures**"
msgstr ""

#: ../../contributing/development/images.rst:126
msgid "**Build process**"
msgstr ""

#: ../../contributing/development/images.rst:128
msgid "**amd64**"
msgstr ""

#: ../../contributing/development/images.rst:128
msgid "**aarch64**"
msgstr ""

#: ../../contributing/development/images.rst:130
msgid "github.com/cilium/cilium"
msgstr ""

#: ../../contributing/development/images.rst:130
msgid "images/runtime/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:130
msgid "quay.io/cilium/cilium-runtime"
msgstr ""

#: ../../contributing/development/images.rst:130
#: ../../contributing/development/images.rst:132
#: ../../contributing/development/images.rst:134
#: ../../contributing/development/images.rst:136
#: ../../contributing/development/images.rst:138
#: ../../contributing/development/images.rst:140
#: ../../contributing/development/images.rst:142
#: ../../contributing/development/images.rst:144
#: ../../contributing/development/images.rst:146
#: ../../contributing/development/images.rst:148
#: ../../contributing/development/images.rst:150
#: ../../contributing/development/images.rst:152
#: ../../contributing/development/images.rst:154
#: ../../contributing/development/images.rst:156
#: ../../contributing/development/images.rst:158
#: ../../contributing/development/images.rst:160
#: ../../contributing/development/images.rst:162
#: ../../contributing/development/images.rst:164
msgid "Y"
msgstr ""

#: ../../contributing/development/images.rst:130
#: ../../contributing/development/images.rst:132
#: ../../contributing/development/images.rst:134
#: ../../contributing/development/images.rst:136
#: ../../contributing/development/images.rst:138
#: ../../contributing/development/images.rst:140
#: ../../contributing/development/images.rst:142
#: ../../contributing/development/images.rst:144
#: ../../contributing/development/images.rst:146
#: ../../contributing/development/images.rst:148
#: ../../contributing/development/images.rst:150
#: ../../contributing/development/images.rst:152
#: ../../contributing/development/images.rst:154
#: ../../contributing/development/images.rst:156
#: ../../contributing/development/images.rst:158
#: ../../contributing/development/images.rst:160
#: ../../contributing/development/images.rst:162
#: ../../contributing/development/images.rst:164
msgid "GH Action"
msgstr ""

#: ../../contributing/development/images.rst:132
msgid "images/builder/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:132
msgid "quay.io/cilium/cilium-builder"
msgstr ""

#: ../../contributing/development/images.rst:134
msgid "images/cilium/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:134
msgid "[docker|quay].io/cilium/cilium"
msgstr ""

#: ../../contributing/development/images.rst:136
msgid "images/cilium-docker-plugin/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:136
msgid "[docker|quay].io/cilium/docker-plugin"
msgstr ""

#: ../../contributing/development/images.rst:138
msgid "images/hubble-relay/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:138
msgid "[docker|quay].io/cilium/hubble-relay"
msgstr ""

#: ../../contributing/development/images.rst:140
msgid "images/operator/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:140
msgid "[docker|quay].io/cilium/operator"
msgstr ""

#: ../../contributing/development/images.rst:142
msgid "images/operator-aws/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:142
msgid "[docker|quay].io/cilium/operator-aws"
msgstr ""

#: ../../contributing/development/images.rst:144
msgid "images/operator-azure/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:144
msgid "[docker|quay].io/cilium/operator-azure"
msgstr ""

#: ../../contributing/development/images.rst:146
msgid "images/operator-generic/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:146
msgid "[docker|quay].io/cilium/operator-generic"
msgstr ""

#: ../../contributing/development/images.rst:148
msgid "images/clustermesh-apiserver/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:148
msgid "[docker|quay].io/cilium/clustermesh-apiserver"
msgstr ""

#: ../../contributing/development/images.rst:150
msgid "github.com/cilium/proxy"
msgstr ""

#: ../../contributing/development/images.rst:150
msgid "Dockerfile.builder"
msgstr ""

#: ../../contributing/development/images.rst:150
msgid "quay.io/cilium/cilium-envoy-builder"
msgstr ""

#: ../../contributing/development/images.rst:152
msgid "Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:152
msgid "quay.io/cilium/cilium-envoy"
msgstr ""

#: ../../contributing/development/images.rst:159
msgid "github.com/cilium/image-tools"
msgstr ""

#: ../../contributing/development/images.rst:154
msgid "images/bpftool/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:154
msgid "docker.io/cilium/cilium-bpftool"
msgstr ""

#: ../../contributing/development/images.rst:156
msgid "images/iproute2/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:156
msgid "docker.io/cilium/cilium-iproute2"
msgstr ""

#: ../../contributing/development/images.rst:158
msgid "images/llvm/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:158
msgid "docker.io/cilium/cilium-llvm"
msgstr ""

#: ../../contributing/development/images.rst:160
msgid "images/compilers/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:160
msgid "docker.io/cilium/image-compilers"
msgstr ""

#: ../../contributing/development/images.rst:162
msgid "images/maker/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:162
msgid "docker.io/cilium/image-maker"
msgstr ""

#: ../../contributing/development/images.rst:164
msgid "images/startup-script/Dockerfile"
msgstr ""

#: ../../contributing/development/images.rst:164
msgid "docker.io/cilium/startup-script"
msgstr ""

#: ../../contributing/development/images.rst:167
msgid "Image dependency:"
msgstr ""

#: ../../contributing/development/images.rst:197
msgid "Update cilium-builder and cilium-runtime images"
msgstr ""

#: ../../contributing/development/images.rst:199
msgid ""
"The steps described here, starting with a commit that updates the image "
"versions, build the necessary images and update all the appropriate "
"locations in the Cilium codebase. Hence, before executing the following "
"steps, the user should have such a commit (e.g., see `this commit "
"<https://github.com/cilium/cilium/pull/17713/commits/b7a37ff80df8681d25a24fd5b464082d360fc6e2>`__)"
" in their local tree. After following the steps below, the result would "
"be another commit with the image updates (e.g,. see `this commit "
"<https://github.com/cilium/cilium/pull/17713/commits/bd3357704647117fa9ef4839b9f603cd0435b7cc>`__)."
" Please keep the two commits separate to ease backporting."
msgstr ""

#: ../../contributing/development/images.rst:210
msgid ""
"If you only wish to update the packages in these images, then you can "
"manually update the ``FORCE_BUILD`` variable in "
"``images/runtime/Dockerfile`` to have a different value and then proceed "
"with the steps below."
msgstr ""

#: ../../contributing/development/images.rst:214
msgid ""
"cilium-builder depends on cilium-runtime so one needs to update cilium-"
"runtime first. Steps 4 and 7 will fetch the digest of the image built by "
"GitHub actions."
msgstr ""

#: ../../contributing/development/images.rst:222
msgid "Commit your changes and create a PR in cilium/cilium."
msgstr ""

#: ../../contributing/development/images.rst:228
msgid ""
"Ping one of the members of `team/build "
"<https://github.com/orgs/cilium/teams/build/members>`__ to approve the "
"build that was created by GitHub Actions `here "
"<https://github.com/cilium/cilium/actions?query=workflow:%22Base+Image+Release+Build%22>`__."
" Note that at this step cilium-builder build failure is expected since we"
" have yet to update the runtime digest."
msgstr ""

#: ../../contributing/development/images.rst:232
msgid ""
"Wait for cilium-runtime build to complete. Only after the image is "
"available run:"
msgstr ""

#: ../../contributing/development/images.rst:238
#: ../../contributing/development/images.rst:253
msgid "Commit your changes and re-push to the PR in cilium/cilium."
msgstr ""

#: ../../contributing/development/images.rst:244
msgid ""
"Ping one of the members of `team/build "
"<https://github.com/orgs/cilium/teams/build/members>`__ to approve the "
"build that was created by GitHub Actions `here "
"<https://github.com/cilium/cilium/actions?query=workflow:%22Base+Image+Release+Build%22>`__."
msgstr ""

#: ../../contributing/development/images.rst:247
msgid "Wait for the build to complete. Only after the image is available run:"
msgstr ""

#: ../../contributing/development/images.rst:259
msgid "Update the versions of the images that are pulled into the CI VMs."
msgstr ""

#: ../../contributing/development/images.rst:261
msgid ""
"Open a PR against the :ref:`packer_ci` with an update to said image "
"versions. Once your PR is merged, a new version of the VM will be ready "
"for consumption in the CI."
msgstr ""

#: ../../contributing/development/images.rst:262
msgid ""
"Update the ``SERVER_VERSION``  field in ``test/Vagrantfile`` to contain "
"the new version, which is the build number from the `Jenkins Job for the "
"VMs <https://jenkins.cilium.io/job/Vagrant-Master-Boxes-Packer-Build/>`_."
" For example, build 119 from the pipeline would be the value to set for "
"``SERVER_VERSION``."
msgstr ""

#: ../../contributing/development/images.rst:263
msgid "Open a pull request with this version change in the cilium repository."
msgstr ""

#: ../../contributing/development/images.rst:266
msgid "Nightly Docker image"
msgstr ""

#: ../../contributing/development/images.rst:268
msgid ""
"After each successful Nightly build, a `cilium/nightly`_ image is pushed "
"to dockerhub."
msgstr ""

#: ../../contributing/development/images.rst:270
msgid ""
"To use latest nightly build, please use ``cilium/nightly:latest`` tag. "
"Nightly images are stored on dockerhub tagged with following format: "
"``YYYYMMDD-<job number>``. Job number is added to tag for the unlikely "
"event of two consecutive nightly builds being built on the same date."
msgstr ""

#: ../../contributing/development/images.rst:277
msgid "Image Building Process"
msgstr ""

#: ../../contributing/development/images.rst:279
msgid ""
"Images are automatically created by a GitHub action: ``build-images``. "
"This action will automatically run for any Pull Request, including Pull "
"Requests submitted from forked repositories, and push the images into "
"``quay.io/cilium/*-ci``. They will be available there for 1 week before "
"they are removed by the ``ci-images-garbage-collect`` workflow. Once they"
" are removed, the developer must re-push the Pull Request into GitHub so "
"that new images are created."
msgstr ""

#: ../../contributing/development/index.rst:10
msgid "Development Guide"
msgstr ""

#: ../../contributing/development/index.rst:12
msgid "We're happy you're interested in contributing to the Cilium project."
msgstr ""

#: ../../contributing/development/index.rst:14
msgid ""
"This section of the Cilium documentation  will help you make sure you "
"have an environment capable of testing changes to the Cilium source code,"
" and that you understand the workflow of getting these changes reviewed "
"and merged upstream."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:2
msgid "Introducing New CRDs"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:4
msgid ""
"Cilium uses a combination of code generation tools to facilitate adding "
"CRDs to the Kubernetes instance it is installed on."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:7
msgid ""
"These CRDs make themselves available in the generated Kubernetes client "
"Cilium uses."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:11
msgid "Defining And Generating CRDs"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:13
msgid "Currently, two API versions exist ``v2`` and ``v2alpha1``."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:15
#: ../../contributing/development/introducing_new_crds.rst:68
#: ../../contributing/development/introducing_new_crds.rst:162
msgid "Paths:"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:22
msgid ""
"CRDs are defined via Golang structures, annotated with ``marks``, and "
"generated with Cilium make file targets."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:26
msgid "Marks"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:28
msgid ""
"Marks are used to tell ``controller-gen`` *how* to generate the CRD. This"
" includes defining the CRD's various names (Singular, plural, group), its"
" Scope (Cluster, Namespaced), Shortnames, etc…"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:32
#: ../../contributing/development/introducing_new_crds.rst:49
msgid "An example:"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:42
msgid ""
"You can find CRD generation ``marks`` documentation `here "
"<https://book.kubebuilder.io/reference/markers/crd.html>`__."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:45
msgid ""
"Marks are also used to generate json-schema validation. You can define "
"validation criteria such as \"format=cidr\" and \"required\" via "
"validation ``marks`` in your struct's comments."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:62
msgid ""
"You can find CRD validation ``marks`` documentation `here "
"<https://book.kubebuilder.io/reference/markers/crd-validation.html>`__."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:66
msgid "Defining CRDs"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:75
msgid ""
"The portion of the directory after ``apis/`` makes up the CRD's ``Group``"
" and ``Version``. See `KubeBuilder-GVK <https://book.kubebuilder.io"
"/cronjob-tutorial/gvks.html>`__"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:79
msgid ""
"You can begin defining your ``CRD`` structure, making any subtypes you "
"like to adequately define your data model and using ``marks`` to control "
"the CRD generation process."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:83
msgid ""
"Here is a brief example, omitting any further definitions of sub-types to"
" express the CRD data model."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:112
msgid "Integrating CRDs Into Cilium"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:114
msgid ""
"Once you've coded your CRD data model you can use Cilium's ``make`` "
"infrastructure to generate and integrate your CRD into Cilium."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:117
msgid ""
"There are several make targets and a script which revolve around "
"generating CRD and associated code gen (client, informers, ``DeepCopy`` "
"implementations, ``DeepEqual`` implementations, etc)."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:121
msgid ""
"Each of the next sections also detail the steps you should take to "
"integrate your CRD into Cilium."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:125
msgid "Generating CRD YAML"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:127
msgid ""
"To simply generate the CRDs and copy them into the correct location you "
"must perform two tasks:"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:130
msgid ""
"Update the ``Makefile`` to copy your generated CRD from a ``tmp`` "
"directory to the correct location in Cilium repository. Edit the "
"following `location "
"<https://github.com/cilium/cilium/blob/89ca3eddf3dae9ac5fc6c343a2cd26cf3aa405fa/Makefile#L303-L311>`__"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:133
msgid "Run ``make manifests``"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:135
msgid ""
"This will generate your Golang structs into CRD manifests and copy them "
"to ``./pkg/k8s/apis/cilium.io/client/crds/`` into the appropriate "
"``Version`` directory."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:139
msgid "You can inspect your generated ``CRDs`` to confirm they look OK."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:141
msgid ""
"Additionally ``./contrib/scripts/check-k8s-code-gen.sh`` is a script "
"which will generate the CRD manifest along with generating the necessary "
"K8s API changes to use your CRDs via K8s client in Cilium source code."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:146
msgid "Generating Client Code"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:152
msgid ""
"This make target will perform the necessary code-gen to integrate your "
"CRD into Cilium's ``client-go`` client, create listers, watchers, and "
"informers."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:156
msgid ""
"Again, multiple steps must be taken to fully integrate your CRD into "
"Cilium."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:160
msgid "Register With API Scheme"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:168
msgid ""
"Make a change similar to this diff to register your CRDs with the API "
"scheme."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:224
msgid ""
"You should also bump the ``CustomResourceDefinitionSchemaVersion`` "
"variable in the correct ``{api_version}/register.go`` to instruct Cilium "
"that new CRDs have been added to the system. For example, bump this line "
"if adding a CRD to the ``v2`` group: `register.go "
"<https://github.com/cilium/cilium/blob/ea9fd6f97b6e7b0d115067dc9f69ba461055530f/pkg/k8s/apis/cilium.io/v2/register.go#L21-L27>`__"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:231
msgid "Register With Client"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:233
msgid "``pkg/k8s/apis/cilium.io/client/register.go``"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:235
msgid ""
"Make a change similar to the following to register CRD types with the "
"client."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:313
msgid "Getting Your CRDs Installed"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:315
msgid ""
"Your new CRDs must be installed into Kubernetes. This is controlled in "
"the ``pkg/k8s/synced/crd.go`` file."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:318
msgid ""
"Here is an example diff which installs the CRDs ``v2alpha1.BGPPName`` and"
" ``v2alpha.BGPPoolName``:"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:339
msgid "Updating RBAC Roles"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:341
msgid ""
"Cilium is installed with a service account and this service account "
"should be given RBAC permissions to access your new CRDs. The following "
"files should be updated to include permissions to create, read, update, "
"and delete your new CRD."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:352
msgid ""
"Here is a diff of updating the Agent's cluster role template to include "
"our new BGP CRDs:"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:371
msgid ""
"It's important to note, neither the Agent nor the Operator installs these"
" manifests to the Kubernetes clusters. This means when testing your CRD "
"out the updated ``clusterrole`` must be written to the cluster manually."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:376
msgid ""
"Also please note, you should be specific about which 'verbs' are added to"
" the Agent's cluster role. This ensures a good security posture and best "
"practice."
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:380
msgid "A convenient script for this follows:"
msgstr ""

#: ../../contributing/development/introducing_new_crds.rst:407
msgid ""
"The above script with install Cilium and newest ``clusterrole`` manifests"
" to anywhere your ``kubectl`` is pointed."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:11
msgid "Google Season of Docs 2022"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:13
msgid ""
"Cilium has been accepted into the 2022 Google Season of Docs to improve "
"the documentation experience for our users and contributors. Below is our"
" project idea, if you have any questions, please reach out to "
"gsod@cilium.io."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:16
msgid ""
"**Edit:** We now have selected our candidates, and would like to thank "
"all applicants. Our two technical writers are `Yoyo`_ and `Divine`_!"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:19
msgid "Reorganize Cilium Features and Getting Started"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:22
msgid "About Our Organization"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:24
msgid ""
"Cilium (current version 1.11, first released in 2017) is an Apache "
"2.0-licensed project for providing, securing, and observing network "
"connectivity between container workloads - cloud native, and built around"
" the revolutionary Linux Kernel technology eBPF. Our users adopt Cilium "
"to solve their cloud networking, observability, and security issues at "
"scale including running some of the largest Kubernetes clusters in the "
"world. Cilium has a large community of contributors from over 50 "
"countries around the world. Multiple companies have staff paid to work on"
" Cilium too. Cilium is an incubating project in the Cloud Native "
"Computing Foundation and is the networking data plane for Google "
"Kubernetes Engine and Anthos."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:33
msgid "About the Problem"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:35
msgid ""
"Cloud native networking and security are complex topics that even long "
"time practitioners struggle to master. Cilium documentation has grown "
"organically over time and the project has mainly been used by advanced "
"cloud native users. The documentation lacks the structure that new, and "
"even existing, users can rely on to quickly find the information they "
"need. In addition, users sometimes struggle to discover all of the "
"features and functionality of Cilium because the documentation does not "
"make them easily discoverable. Finally, new users often have questions "
"about how to troubleshoot setting up their network."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:41
msgid ""
"Improving the structure of the documentation will help new users adopt "
"Cilium and reduce the support load on the community."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:44
msgid "Project Scope"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:46
msgid "The project will:"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:48
msgid "Audit the existing document structure and inventory existing documentation"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:49
msgid ""
"Using the inventory as a guide, determine existing documentation and gaps"
" for the top three use cases (Networking, Observability and Security)"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:50
msgid ""
"Restructure the existing documentation to surface Cilium's capabilities "
"more prominently and determine documentation gaps of existing "
"functionality or missing links to existing talks or presentations"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:51
msgid ""
"Simplify the “Getting Started” section by moving advanced and detailed "
"config guides out to more appropriate sections"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:52
msgid ""
"Work with the release team to restructure the documentation and create a "
"process for keeping the documentation up to date going forward"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:54
msgid "Work that is out of scope:"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:56
msgid "Writing tutorials or reference documentation"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:58
msgid ""
"The writer will be working closely with Liz Rice, Bill Mulligan, and "
"other Cilium maintainers. We estimate the project will take five months "
"to complete."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:62
msgid "Measuring Success"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:64
msgid ""
"Cilium currently receives issues covered in the documentation in both the"
" Slack and through Github issues. It also receives few new contributors "
"to the documentation. We believe that this restructuring will result in "
"fewer questions and issues already covered in the documentation and more "
"contributors to the documentation since they will know where to add it."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:68
msgid ""
"We will track three metrics (number of questions covered in documentation"
" in Slack, number of questions covered in documentation in Github issues,"
" and number of pull requests from new contributors) monthly after the "
"documentation is published."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:71
msgid ""
"We would consider the project successful if, after publication of the new"
" documentation each of the following happens:"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:73
msgid ""
"The number of Slack questions covered in the documentation decreases by "
"10%"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:74
msgid "The number of Github issues covered in the documentation decreases by 20%"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:75
msgid "The number of pull requests from new contributors increases by 15%"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:78
msgid "Timeline"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:80
msgid ""
"The project itself will take approximately six months to complete. Once "
"the tech writer is hired, we'll spend a month on tech writer orientation,"
" then move onto the audit and inventory, and spend the last three months "
"focusing on restructuring the documentation."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:84
msgid "Dates"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:84
msgid "Action Items"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:86
msgid "May"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:86
msgid "Orientation"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:88
msgid "June - July"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:88
msgid "Audit existing documentation and create inventory"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:90
msgid "August - October"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:90
msgid "Restructure documentation"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:94
msgid "Project Budget"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:97
msgid "Budget Item"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:97
msgid "Amount"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:97
msgid "Running Total"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:99
msgid ""
"Technical writer audit, inventory, restructure, test, and publish "
"documentation"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:99
msgid "9,000.00"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:101
msgid "Project Swag"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:101
msgid "150.00"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:101
#: ../../contributing/development/season_of_docs.rst:103
msgid "9,150.00"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:103
msgid "Total"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:106
msgid ""
"This budget would allow us to hire a writer part time for $1,500 per "
"month for six months."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:109
msgid "Additional Information"
msgstr ""

#: ../../contributing/development/season_of_docs.rst:111
msgid ""
"Cilium participated in the Google Summer of Code in 2021. Our three "
"students successfully completed their project before the summer's end. "
"One of them presented it afterward at a national conference and another "
"continues to contribute regularly to Cilium."
msgstr ""

#: ../../contributing/development/season_of_docs.rst:114
msgid ""
"This experience highlighted the importance of regular status "
"reports/meetings between mentors and mentees. We also gained experience "
"establishing realistic timelines for people with diverse backgrounds. "
"Finally, this experience highlighted the need for better documentation "
"and led us to apply for Season of Docs."
msgstr ""

#: ../../contributing/release/backports.rst:10
msgid "Backporting process"
msgstr ""

#: ../../contributing/release/backports.rst:15
msgid "Backport Criteria"
msgstr ""

#: ../../contributing/release/backports.rst:17
msgid ""
"Committers may nominate PRs that have been merged into master as "
"candidates for backport into stable releases if they affect the stable "
"production usage of community users."
msgstr ""

#: ../../contributing/release/backports.rst:22
msgid "Backport Criteria for Current Minor Release"
msgstr ""

#: ../../contributing/release/backports.rst:24
msgid ""
"Criteria for inclusion into the next stable release of the current latest"
" minor version of Cilium, for example in a ``v1.2.z`` release prior to "
"the release of version ``v1.3.0``:"
msgstr ""

#: ../../contributing/release/backports.rst:28
msgid "All bugfixes"
msgstr ""

#: ../../contributing/release/backports.rst:29
#: ../../contributing/release/backports.rst:40
msgid "Debug tool improvements"
msgstr ""

#: ../../contributing/release/backports.rst:32
msgid "Backport Criteria for X.Y-1.Z and X.Y-2.Z"
msgstr ""

#: ../../contributing/release/backports.rst:34
msgid ""
"Criteria for the inclusion into the next stable release of the prior two "
"minor versions of Cilium, for example in a ``v1.0.z`` or ``v1.1.z`` "
"release prior to the release of version ``v1.3.0``:"
msgstr ""

#: ../../contributing/release/backports.rst:38
msgid "Security relevant fixes"
msgstr ""

#: ../../contributing/release/backports.rst:39
msgid "Major bugfixes relevant to the correct operation of Cilium"
msgstr ""

#: ../../contributing/release/backports.rst:43
msgid "Backport Criteria for documentation changes"
msgstr ""

#: ../../contributing/release/backports.rst:45
msgid ""
"Changes to Cilium's documentation should generally be subject to "
"backports for all supported branches to which they apply (all supported "
"branches containing the parent features to which the modified sections "
"relate)."
msgstr ""

#: ../../contributing/release/backports.rst:49
msgid ""
"The motivation is that users can then simply look at the branch of the "
"documentation related to the version they are deploying, and find the "
"latest correct instructions for their version."
msgstr ""

#: ../../contributing/release/backports.rst:54
msgid "Proposing PRs for backporting"
msgstr ""

#: ../../contributing/release/backports.rst:56
msgid ""
"PRs are proposed for backporting by adding a ``needs-backport/X.Y`` label"
" to them. Normally this is done by the author when the PR is created or "
"one of the maintainers when the PR is reviewed. When proposing PRs that "
"have already been merged, also add a comment to the PR to ensure that the"
" backporters are notified."
msgstr ""

#: ../../contributing/release/backports.rst:63
msgid "Backporting Guide for the Backporter"
msgstr ""

#: ../../contributing/release/backports.rst:65
msgid ""
"Cilium PRs that are marked with the label ``needs-backport/X.Y`` need to "
"be backported to the stable branch ``X.Y``. The following steps summarize"
" the process for backporting these PRs:"
msgstr ""

#: ../../contributing/release/backports.rst:69
msgid "One-time setup"
msgstr ""

#: ../../contributing/release/backports.rst:70
msgid "Preparing PRs for backport"
msgstr ""

#: ../../contributing/release/backports.rst:71
msgid "Cherry-picking commits into a backport branch"
msgstr ""

#: ../../contributing/release/backports.rst:72
msgid "Posting the PR and updating GitHub labels"
msgstr ""

#: ../../contributing/release/backports.rst:77
msgid "One-time Setup"
msgstr ""

#: ../../contributing/release/backports.rst:79
msgid ""
"Make sure you have a GitHub developer access token with the "
"``public_repos`` ``workflow``, ``read:user`` scopes available. You can do"
" this directly from https://github.com/settings/tokens or by opening "
"GitHub and then navigating to: User Profile -> Settings -> Developer "
"Settings -> Personal access token -> Generate new token."
msgstr ""

#: ../../contributing/release/backports.rst:85
msgid ""
"The scripts referred to below need to be run on Linux, they do not work "
"on macOS. It is recommended to create a container using "
"(``contrib/backporting/Dockerfile``), as it will have all the correct "
"versions of dependencies / libraries."
msgstr ""

#: ../../contributing/release/backports.rst:100
msgid ""
"If you are running on a mac OS, and see ``/home/user/.ssh/config: line 3:"
" Bad configuration option: usekeychain`` error message while running any "
"of the backporting scripts, comment out the line ``UseKeychain yes``."
msgstr ""

#: ../../contributing/release/backports.rst:104
msgid ""
"Once you have a setup ready, you need to configure git to have your name "
"and email address to be used in the commit messages:"
msgstr ""

#: ../../contributing/release/backports.rst:112
msgid ""
"Add remotes for the Cilium upstream repository and your Cilium repository"
" fork."
msgstr ""

#: ../../contributing/release/backports.rst:119
msgid ""
"Skip this step if you have created a setup using the pre-defined "
"Dockerfile. This guide makes use of several tools to automate the "
"backporting process. The basics require ``bash`` and ``git``, but to "
"automate interactions with github, further tools are required."
msgstr ""

#: ../../contributing/release/backports.rst:125
msgid "Required?"
msgstr ""

#: ../../contributing/release/backports.rst:127
msgid "bash"
msgstr ""

#: ../../contributing/release/backports.rst:127
#: ../../contributing/release/backports.rst:129
#: ../../contributing/release/backports.rst:131
#: ../../contributing/release/backports.rst:133
#: ../../contributing/release/backports.rst:135
#: ../../contributing/release/backports.rst:137
msgid "Yes"
msgstr ""

#: ../../contributing/release/backports.rst:131
msgid "jq"
msgstr ""

#: ../../contributing/release/backports.rst:133
msgid "python3"
msgstr ""

#: ../../contributing/release/backports.rst:133
msgid "`Python Downloads <https://www.python.org/downloads/>`_"
msgstr ""

#: ../../contributing/release/backports.rst:135
msgid "`PyGithub <https://pypi.org/project/PyGithub/>`_"
msgstr ""

#: ../../contributing/release/backports.rst:135
msgid "``pip3 install PyGithub``"
msgstr ""

#: ../../contributing/release/backports.rst:137
msgid "`Github hub CLI (>= 2.8.3) <https://github.com/github/hub>`_"
msgstr ""

#: ../../contributing/release/backports.rst:140
msgid "Verify your machine is correctly configured by running"
msgstr ""

#: ../../contributing/release/backports.rst:147
msgid "Preparation"
msgstr ""

#: ../../contributing/release/backports.rst:149
msgid ""
"Pull requests that are candidates for backports to the X.Y stable release"
" are tracked through the following links:"
msgstr ""

#: ../../contributing/release/backports.rst:152
msgid ""
"PRs with the needs-backport/X.Y label (\\ |CURRENT_RELEASE|: :github-"
"backport:`GitHub Link<needs-backport>`)"
msgstr ""

#: ../../contributing/release/backports.rst:153
msgid ""
"PRs with the backport-pending/X.Y label (\\ |CURRENT_RELEASE|: :github-"
"backport:`GitHub Link<backport-pending>`)"
msgstr ""

#: ../../contributing/release/backports.rst:154
msgid ""
"The X.Y GitHub project (\\ |NEXT_RELEASE|: :github-project:`GitHub "
"Link<>`)"
msgstr ""

#: ../../contributing/release/backports.rst:156
msgid ""
"Make sure that the Github labels are up-to-date, as this process will "
"deal with all commits from PRs that have the ``needs-backport/X.Y`` label"
" set (for a stable release version X.Y). If any PRs contain labels such "
"as ``backport-pending/X.Y``, ensure that the backport for that PR have "
"been merged and if so, change the label to ``backport-done/X.Y``."
msgstr ""

#: ../../contributing/release/backports.rst:163
msgid "Creating the Backports Branch"
msgstr ""

#: ../../contributing/release/backports.rst:165
#, python-format
msgid ""
"Check whether there are any `outstanding backport PRs for the target "
"branch "
"<https://github.com/cilium/cilium/pulls?q=is%3Aopen+is%3Apr+label%3Akind%2Fbackports>`__."
" If there are already backports for that branch, create a thread in the "
"#launchpad channel in Slack and reach out to the author to coordinate "
"triage, review and merge of the existing PR into the target branch."
msgstr ""

#: ../../contributing/release/backports.rst:171
msgid ""
"Run ``contrib/backporting/start-backport`` for the release version that "
"you intend to backport PRs for. This will pull the latest repository "
"commits from the Cilium repository (assumed to be the git remote "
"``origin``), create a new branch, and runs the ``contrib/backporting"
"/check-stable`` script to fetch the full set of PRs to backport."
msgstr ""

#: ../../contributing/release/backports.rst:183
msgid ""
"This command will leave behind a file in the current directory with a "
"name based upon the release version and the current date in the form "
"``vRELEASE-backport-YYYY-MM-DD.txt`` which contains a prepared backport "
"pull-request description so you don't need to write one yourself."
msgstr ""

#: ../../contributing/release/backports.rst:188
msgid ""
"Cherry-pick the commits using the master git SHAs listed, starting from "
"the oldest (top), working your way down and fixing any merge conflicts as"
" they appear. Note that for PRs that have multiple commits you will want "
"to check that you are cherry-picking oldest commits first. The ``cherry-"
"pick`` script accepts multiple arguments, in which case it will attempt "
"to apply each commit in the order specified on the command line until one"
" cherry pick fails or every commit is cherry-picked."
msgstr ""

#: ../../contributing/release/backports.rst:203
msgid ""
"Conflicts may be resolved by applying changes or backporting other PRs to"
" completely avoid conflicts. Backporting entire PRs is preferred if the "
"changes in the dependent PRs are small. `This stackoverflow.com question "
"<https://stackoverflow.com/questions/17818167/find-a-pull-request-on-"
"github-where-a-commit-was-originally-created>`_ describes how to "
"determine the original PR corresponding to a particular commit SHA in the"
" GitHub UI."
msgstr ""

#: ../../contributing/release/backports.rst:210
msgid ""
"If a conflict is resolved by modifying a commit during backport, describe"
" the changes made in the commit message and collect these to add to the "
"backport PR description when creating the PR below. This helps to direct "
"backport reviewers towards which changes may deviate from the original "
"commits to ensure that the changes are correctly backported. This can be "
"fairly simple, for example inside the commit message of the modified "
"commit::"
msgstr ""

#: ../../contributing/release/backports.rst:232
msgid ""
"**It is the backporter's responsibility to check that the backport "
"commits they are preparing are identical to the original commits**. This "
"can be achieved by preparing the commits, then running ``git show "
"<commit>`` for both the original upstream commit and the prepared "
"backport, and read through the commits side-by-side, line-by-line to "
"check that the changes are the same. If there is any uncertainty about "
"the backport, reach out to the original author directly to coordinate how"
" to prepare the backport for the target branch."
msgstr ""

#: ../../contributing/release/backports.rst:241
msgid ""
"For backporting commits that update cilium-builder and cilium-runtime "
"images, the backporter should build new images as described in "
":ref:`update_cilim_builder_runtime_images`."
msgstr ""

#: ../../contributing/release/backports.rst:244
msgid ""
"(Optional) If there are any commits or pull requests that are tricky or "
"time-consuming to backport, consider reaching out for help on Slack. If "
"the commit does not cherry-pick cleanly, please mention the necessary "
"changes in the pull request description in the next section."
msgstr ""

#: ../../contributing/release/backports.rst:250
msgid "Creating the Backport Pull Request"
msgstr ""

#: ../../contributing/release/backports.rst:252
msgid ""
"The backport pull-request may be created via CLI tools, or alternatively "
"you can use the GitHub web interface to achieve these steps."
msgstr ""

#: ../../contributing/release/backports.rst:256
msgid "Via Command-Line Tools (Recommended)"
msgstr ""

#: ../../contributing/release/backports.rst:258
msgid ""
"These steps require all of the tools described in the "
":ref:`backport_setup` section above. It pushes the git tree, creates the "
"pull request and updates the labels for the PRs that are backported, "
"based on the ``vRELEASE-backport-YYYY-MM-DD.txt`` file in the current "
"directory."
msgstr ""

#: ../../contributing/release/backports.rst:267
msgid "The script takes up to three positional arguments::"
msgstr ""

#: ../../contributing/release/backports.rst:271
msgid ""
"The first parameter is the version of the branch against which the PR "
"should be done, and defaults to the version passed to ``start-backport``."
msgstr ""

#: ../../contributing/release/backports.rst:273
msgid ""
"The second one is the name of the file containing the text summary to use"
" for the PR, and defaults to the file created by ``start-backport``."
msgstr ""

#: ../../contributing/release/backports.rst:275
msgid ""
"The third one is the name of the git remote of your (forked) repository "
"to which your changes will be pushed. It defaults to the git remote which"
" matches ``github.com/<your github username>/cilium``."
msgstr ""

#: ../../contributing/release/backports.rst:280
msgid "Via GitHub Web Interface"
msgstr ""

#: ../../contributing/release/backports.rst:282
msgid "Push your backports branch to your fork of the Cilium repo."
msgstr ""

#: ../../contributing/release/backports.rst:288
msgid ""
"Create a new PR from your branch towards the feature branch you are "
"backporting to. Note that by default Github creates PRs against the "
"``master`` branch, so you will need to change it. The title and "
"description for the pull request should be based upon the ``vRELEASE-"
"backport-YYYY-MM-DD.txt`` file that was generated by the scripts above."
msgstr ""

#: ../../contributing/release/backports.rst:297
msgid "The ``vRELEASE-backport-YYYY-MM-DD.txt`` file will include:"
msgstr ""

#: ../../contributing/release/backports.rst:306
msgid ""
"The ``upstream-prs`` tag `is required "
"<https://github.com/cilium/release/blob/3c5fc2bdc38f8d290349a612a03cc83655f57a51/pkg/github/labels.go#L26>`_,"
" so add it if you manually write the message."
msgstr ""

#: ../../contributing/release/backports.rst:311
msgid ""
"Label the new backport PR with the backport label for the stable branch "
"such as ``backport/X.Y`` as well as ``kind/backports`` so that it is easy"
" to find backport PRs later."
msgstr ""

#: ../../contributing/release/backports.rst:315
msgid ""
"Mark all PRs you backported with the backport pending label ``backport-"
"pending/X.Y`` and clear the ``needs-backport/X.Y`` label. This can be "
"done with the command printed out at the bottom of the output from the "
"``start-backport`` script above (``GITHUB_TOKEN`` needs to be set for "
"this to work)."
msgstr ""

#: ../../contributing/release/backports.rst:322
msgid "Running the CI Against the Pull Request"
msgstr ""

#: ../../contributing/release/backports.rst:324
msgid ""
"To validate a cross-section of various tests against the PRs, backport "
"PRs should be validated in the CI by running all CI targets. This can be "
"triggered by adding a comment to the PR with exactly the text ``/test-"
"backport-x.x``, where ``x.x`` is the target version as described in "
":ref:`trigger_phrases`. The comment must not contain any other "
"characters."
msgstr ""

#: ../../contributing/release/backports.rst:331
msgid "After the Backports are Merged"
msgstr ""

#: ../../contributing/release/backports.rst:333
msgid ""
"After the backport PR is merged, if the person who merged the PR didn't "
"take care of it already, mark all backported PRs with ``backport-"
"done/X.Y`` label and clear the ``backport-pending/X.Y`` label(s). If the "
"backport pull request description was generated using the scripts above, "
"then the full command is listed in the pull request description."
msgstr ""

#: ../../contributing/release/backports.rst:344
msgid "Backporting Guide for Others"
msgstr ""

#: ../../contributing/release/backports.rst:347
msgid "Original Committers and Reviewers"
msgstr ""

#: ../../contributing/release/backports.rst:349
msgid ""
"Committers should mark PRs needing backport as ``needs-backport/X.Y``, "
"based on the `backport criteria <backport_criteria_>`_. It is up to the "
"reviewers to confirm that the backport request is reasonable and, if not,"
" raise concerns on the PR as comments."
msgstr ""

#: ../../contributing/release/backports.rst:354
msgid ""
"At some point, changes will be picked up on a backport PR and the "
"committer will be notified and asked to approve the backport commits. "
"Confirm that:"
msgstr ""

#: ../../contributing/release/backports.rst:357
msgid "All the commits from the original PR have been indeed backported."
msgstr ""

#: ../../contributing/release/backports.rst:358
msgid "In case of conflicts, the resulting changes look good."
msgstr ""

#: ../../contributing/release/backports.rst:361
msgid "Merger"
msgstr ""

#: ../../contributing/release/backports.rst:363
msgid ""
"When merging a backport PR, set the labels of the backported PRs to "
"``done``. Typically, backport PRs include a line on how do that. E.g.,:"
msgstr ""

#: ../../contributing/release/feature.rst:10
msgid "Feature Release Process"
msgstr ""

#: ../../contributing/release/feature.rst:12
msgid ""
"This document describes the process for creating a major or minor feature"
" release of Cilium."
msgstr ""

#: ../../contributing/release/feature.rst:16
msgid "On Freeze date"
msgstr ""

#: ../../contributing/release/feature.rst:18
msgid "Fork a new release branch from master:"
msgstr ""

#: ../../contributing/release/feature.rst:26
msgid ""
"Protect the branch using the GitHub UI to disallow direct push and "
"require merging via PRs with proper reviews. `Direct link "
"<https://github.com/cilium/cilium/settings/branches>`_"
msgstr ""

#: ../../contributing/release/feature.rst:29
msgid ""
"Update the contents of the ``CODEOWNERS`` file to reduce code reviews to "
"essential approvals:"
msgstr ""

#: ../../contributing/release/feature.rst:32
msgid "Keep ``* @cilium/tophat`` fallback entry."
msgstr ""

#: ../../contributing/release/feature.rst:33
msgid "Keep ``/.github/workflows/`` entry for CI/CD security."
msgstr ""

#: ../../contributing/release/feature.rst:34
msgid ""
"Keep all ``@cilium/api`` assignments for API stability on the release "
"branch."
msgstr ""

#: ../../contributing/release/feature.rst:36
msgid "Remove everything else so that it is handled by the Top Hat."
msgstr ""

#: ../../contributing/release/feature.rst:38
msgid "Delete the ``stable.txt`` file."
msgstr ""

#: ../../contributing/release/feature.rst:44
msgid ""
"Create a new project named \"X.Y.Z\" to automatically track the backports"
" for that particular release. `Direct Link: "
"<https://github.com/cilium/cilium/projects/new>`_"
msgstr ""

#: ../../contributing/release/feature.rst:47
msgid ""
"Copy the ``.github/maintainers-little-helper.yaml`` from the previous "
"release ``vX.Y-1`` change the contents to be relevant for the release "
"``vX.Y`` and set the ``project:`` to be the generated link created by the"
" previous step. The link should be something like: "
"``https://github.com/cilium/cilium/projects/NNN``"
msgstr ""

#: ../../contributing/release/feature.rst:52
msgid ""
"Set the right version for the ``CustomResourceDefinitionSchemaVersion`` "
"in the ``pkg/k8s/...`` by following these instructions:"
msgstr ""

#: ../../contributing/release/feature.rst:55
#: ../../contributing/release/rc.rst:79
#: ../../contributing/release/stable.rst:65
msgid "Run ``./Documentation/check-crd-compat-table.sh vX.Y``"
msgstr ""

#: ../../contributing/release/feature.rst:57
msgid ""
"Commit changes, open a pull request against the new ``v1.2`` branch, and "
"get the pull request merged"
msgstr ""

#: ../../contributing/release/feature.rst:67
msgid "Create the following GitHub labels:"
msgstr ""

#: ../../contributing/release/feature.rst:69
msgid "``backport-pending/1.2``"
msgstr ""

#: ../../contributing/release/feature.rst:70
msgid "``backport-done/1.2``"
msgstr ""

#: ../../contributing/release/feature.rst:71
msgid "``backport/1.2``"
msgstr ""

#: ../../contributing/release/feature.rst:72
msgid "``needs-backport/1.2``"
msgstr ""

#: ../../contributing/release/feature.rst:75
msgid ""
"Checkout to master and update the ``.github/maintainers-little-"
"helper.yaml`` to have all the necessary configurations for the backport "
"of the new ``vX.Y`` branch. Specifically, ensure that:"
msgstr ""

#: ../../contributing/release/feature.rst:79
msgid "The project at the top of the file points to the \"next\" release,"
msgstr ""

#: ../../contributing/release/feature.rst:80
msgid ""
"A new section is added for the upcoming release that is being prepared, "
"and"
msgstr ""

#: ../../contributing/release/feature.rst:81
msgid "The section for the oldest release is removed."
msgstr ""

#: ../../contributing/release/feature.rst:91
msgid ""
"Continue with the next step only after the previous steps are merged into"
" master."
msgstr ""

#: ../../contributing/release/feature.rst:94
msgid ""
"Mark all open PRs with ``needs-backport/x.y`` that have the milestone "
"``x.y``"
msgstr ""

#: ../../contributing/release/feature.rst:96
msgid ""
"Change the VERSION file to contain the next ``rc`` version. For example, "
"if we are branching v1.2 and still in the RC phase we need to change the "
"VERSION file to contain the ``v1.2.0-rcX``"
msgstr ""

#: ../../contributing/release/feature.rst:100
msgid ""
"Set the branch as \"Active\" and the \"Privacy Level\" to \"Private\" in "
"the readthedocs Admin page. (Replace ``v1.2`` with the right branch) "
"``https://readthedocs.org/dashboard/cilium/version/v1.2/``"
msgstr ""

#: ../../contributing/release/feature.rst:104
msgid ""
"Since this is the first release being made from a new branch, please "
"follow the :ref:`generic_release_process` to release ``v1.2.0-rc1``."
msgstr ""

#: ../../contributing/release/feature.rst:107
msgid ""
"Alert in the testing channel that a new jenkins job needs to be created "
"for this new branch."
msgstr ""

#: ../../contributing/release/feature.rst:110
msgid "Prepare the master branch for the next development cycle:"
msgstr ""

#: ../../contributing/release/feature.rst:116
msgid "Update the ``VERSION`` file to contain ``v1.2.90``"
msgstr ""

#: ../../contributing/release/feature.rst:117
msgid ""
"Add the ``VERSION`` file using ``git add`` and create & merge a PR titled"
" ``Prepare for 1.3.0 development``."
msgstr ""

#: ../../contributing/release/feature.rst:120
msgid "Update the release branch on"
msgstr ""

#: ../../contributing/release/feature.rst:120
msgid ""
"`Jenkins <https://jenkins.cilium.io/>`_ to be tested on every change and "
"Nightly."
msgstr ""

#: ../../contributing/release/feature.rst:122
msgid ""
"(Only 1.0 minor releases) Tag newest 1.0.x Docker image as "
"``v1.0-stable`` and push it to Docker Hub. This will ensure that Kops "
"uses latest 1.0 release by default."
msgstr ""

#: ../../contributing/release/feature.rst:124
msgid ""
"Update Grafana dashboards in `Grafana "
"<https://grafana.com/orgs/cilium/dashboards>`_. Install the dashboards "
"available in ``./examples/kubernetes/addons/prometheus`` and use them to "
"upload them to Grafana."
msgstr ""

#: ../../contributing/release/feature.rst:130
msgid "For the final release"
msgstr ""

#: ../../contributing/release/feature.rst:132
msgid ""
"Follow the :ref:`generic_release_process` to create the final replace and"
" replace ``X.Y.0-rcX`` with ``X.Y.0``."
msgstr ""

#: ../../contributing/release/feature.rst:135
msgid "Announce to Slack with a more thorough release text. Sample text:"
msgstr ""

#: ../../contributing/release/feature.rst:148
msgid ""
"Update ``SECURITY.md`` to represent the security support for the most "
"recent three release series."
msgstr ""

#: ../../contributing/release/feature.rst:151
msgid ""
"Set the branch for the oldest release (now EOL) as \"Active\" and "
"\"Hidden\" in the readthedocs Admin page. (Replace ``v1.2`` with the "
"right branch) ``https://readthedocs.org/dashboard/cilium/version/v1.2/``"
msgstr ""

#: ../../contributing/release/index.rst:11
msgid "Release Management"
msgstr ""

#: ../../contributing/release/index.rst:13
msgid ""
"This section describes the release processes for tracking, preparing, and"
" creating new Cilium releases. This includes information around the "
"release cycles and guides for developers responsible for backporting "
"fixes or preparing upcoming stable releases."
msgstr ""

#: ../../contributing/release/organization.rst:8
msgid "Organization"
msgstr ""

#: ../../contributing/release/organization.rst:11
msgid "Release tracking"
msgstr ""

#: ../../contributing/release/organization.rst:13
msgid ""
"Feature work for upcoming releases is tracked through GitHub Projects. "
"You can view the projects related to the \\ |NEXT_RELEASE| release here:"
msgstr ""

#: ../../contributing/release/organization.rst:16
msgid ":github-project:`GitHub release projects<>`"
msgstr ""

#: ../../contributing/release/organization.rst:19
msgid "Release Cadence"
msgstr ""

#: ../../contributing/release/organization.rst:21
msgid ""
"New versions of Cilium are released based on completion of feature work "
"that has been scheduled for that release. Minor releases are typically "
"designated by by incrementing the ``Y`` in the version format ``X.Y.Z``."
msgstr ""

#: ../../contributing/release/organization.rst:25
msgid ""
"Three stable branches are maintained at a time: One for the most recent "
"minor release, and two for the prior two minor releases. For each minor "
"release that is currently maintained, the stable branch ``vX.Y`` on "
"github contains the code for the next stable release. New patch releases "
"for an existing stable version ``X.Y.Z`` are published incrementing the "
"``Z`` in the version format."
msgstr ""

#: ../../contributing/release/organization.rst:31
msgid ""
"New patch releases for stable branches are made periodically to provide "
"security and bug fixes, based upon community demand and bugfix severity. "
"Potential fixes for an upcoming release are first merged into the "
"``master`` branch, then backported to the relevant stable branches using "
"the following criteria."
msgstr ""

#: ../../contributing/release/rc.rst:10
msgid "Release Candidate Process"
msgstr ""

#: ../../contributing/release/rc.rst:12
msgid "This process applies to all releases candidates:"
msgstr ""

#: ../../contributing/release/rc.rst:14
#: ../../contributing/release/stable.rst:16
msgid ""
"If you intent to release a new feature release, see the "
":ref:`minor_release_process` section instead."
msgstr ""

#: ../../contributing/release/rc.rst:17
#: ../../contributing/release/stable.rst:19
msgid ""
"The following commands have been validated when ran in the VM used in the"
" Cilium development process. See :ref:`dev_env` for detailed instructions"
" about setting up said VM."
msgstr ""

#: ../../contributing/release/rc.rst:22
#: ../../contributing/release/stable.rst:24
msgid "GitHub template process"
msgstr ""

#: ../../contributing/release/rc.rst:24
#: ../../contributing/release/stable.rst:26
#, python-format
msgid ""
"File a `new release issue "
"<https://github.com/cilium/cilium/issues/new?assignees=&labels=kind%2Frelease&template=release_template.md&title=vX.Y.Z+release>`_"
" on GitHub, updating the title to reflect the version that will be "
"released."
msgstr ""

#: ../../contributing/release/rc.rst:27
#: ../../contributing/release/stable.rst:29
msgid "Follow the steps in the issue template to prepare the release."
msgstr ""

#: ../../contributing/release/rc.rst:30
#: ../../contributing/release/stable.rst:32
msgid "Reference steps for the template"
msgstr ""

#: ../../contributing/release/rc.rst:34
msgid ""
"These instructions will generate a CHANGELOG based on the time when the "
"``start-release.sh`` script is run, so you should aim to coordinate with "
"the core maintainers to complete these steps up until merging the PR "
"before merging additional PRs from contributors."
msgstr ""

#: ../../contributing/release/rc.rst:39
msgid ""
"Ensure that the necessary features and fixes have been completed and "
"merged into the branch for which the release candidate will happen."
msgstr ""

#: ../../contributing/release/rc.rst:42
msgid "Update GitHub project and create ``vX.Y.Z-rcW+1`` project if applicable."
msgstr ""

#: ../../contributing/release/rc.rst:43
msgid ""
"Update PRs / issues that were added to the ``vX.Y.Z-rcW`` project, but "
"didn't make it into this release into the ``vX.Y.Z-rcW+1`` project."
msgstr ""

#: ../../contributing/release/rc.rst:45
msgid ""
"The `Cilium Release Tool <https://github.com/cilium/release>`__ tool can "
"help to manage these for you."
msgstr ""

#: ../../contributing/release/rc.rst:48
msgid ""
"Checkout the desired stable branch (can be master branch if stable branch"
" was not created) and pull it:"
msgstr ""

#: ../../contributing/release/rc.rst:55
#: ../../contributing/release/stable.rst:50
msgid "Run the release preparation script:"
msgstr ""

#: ../../contributing/release/rc.rst:63
#: ../../contributing/release/stable.rst:58
msgid ""
"Check to see if the ``AUTHORS`` file has any formatting errors (for "
"instance, indentation mismatches) as well as duplicate contributor names,"
" and correct them accordingly."
msgstr ""

#: ../../contributing/release/rc.rst:67
#: ../../contributing/release/stable.rst:62
msgid ""
"Set the right version for the ``CustomResourceDefinitionSchemaVersion`` "
"in the ``pkg/k8s/client`` by following these instructions:"
msgstr ""

#: ../../contributing/release/rc.rst:70
msgid ""
"If you are doing the first RC for a new minor version, the validation "
"schema version should be ``vX.Y.1`` regardless of the value set in "
"``CustomResourceDefinitionSchemaVersion``. For example, when setting up "
"the first RC for Cilium ``1.11``, ``1.11.0-rc1``, the validation schema "
"should be ``vX.Y+1.1`` where ``X`` and ``Y`` are the major and minor "
"versions used in the schema version of Cilium ``1.10``."
msgstr ""

#: ../../contributing/release/rc.rst:77
msgid "If this is not the first RC run, and there is a branch for ``vX.Y``:"
msgstr ""

#: ../../contributing/release/rc.rst:81
msgid ""
"If a branch for ``vX.Y`` doesn't exist yet, then manually ensure the CRD "
"schema version has not been incremented in the case there were no "
"changes. If there were changes to the CRD, then ensure it is incremented "
"at most by 1 patch version."
msgstr ""

#: ../../contributing/release/rc.rst:86
msgid ""
"If this release will be based on the ``master`` branch rather than a "
"stable branch, add the AUTHORS modifications to a new commit."
msgstr ""

#: ../../contributing/release/rc.rst:89
msgid ""
"Add all other modified files using ``git add`` and create a commit with "
"the title ``Prepare for release vX.Y.Z-rcW+1``."
msgstr ""

#: ../../contributing/release/rc.rst:92
#: ../../contributing/release/stable.rst:70
msgid "Prepare a pull request for the changes:"
msgstr ""

#: ../../contributing/release/rc.rst:98
msgid "Ensure that the CI smoke tests and reviews are in for the pull request."
msgstr ""

#: ../../contributing/release/rc.rst:100
msgid "Revert the top commit on the branch and push the branch again to GitHub."
msgstr ""

#: ../../contributing/release/rc.rst:102
#: ../../contributing/release/stable.rst:76
msgid ""
"Follow standard procedures to get the aforementioned PR merged into the "
"desired stable branch. See :ref:`submit_pr` for more information about "
"this process."
msgstr ""

#: ../../contributing/release/rc.rst:106
#: ../../contributing/release/stable.rst:80
msgid "Checkout out the stable branch and pull your merged changes:"
msgstr ""

#: ../../contributing/release/rc.rst:112
msgid "Check out the \"Prepare for release\" commit and create release tags:"
msgstr ""

#: ../../contributing/release/rc.rst:120
#: ../../contributing/release/stable.rst:94
msgid ""
"There are two tags that correspond to the same release because GitHub "
"recommends using ``vx.y.z`` for release version formatting, and "
"ReadTheDocs, which hosts the Cilium documentation, requires the version "
"to be in format ``x.y.z`` For more information about how ReadTheDocs does"
" versioning, you can read their `Versions Documentation "
"<https://docs.readthedocs.io/en/latest/versions.html>`_."
msgstr ""

#: ../../contributing/release/rc.rst:126
#: ../../contributing/release/stable.rst:100
msgid ""
"Approve the release from the `Release Image build UI "
"<https://github.com/cilium/cilium/actions?query=workflow:%22Image+Release+Build%22>`_."
msgstr ""

#: ../../contributing/release/rc.rst:128
msgid "Once the release images are pushed, fetch the digests from the workflow."
msgstr ""

#: ../../contributing/release/rc.rst:130
#: ../../contributing/release/stable.rst:111
msgid ""
"Prepare Helm changes for the release using the `Cilium Helm Charts "
"Repository <https://github.com/cilium/charts/>`__ and push the changes "
"into that repository (not the main cilium repository):"
msgstr ""

#: ../../contributing/release/rc.rst:138
#: ../../contributing/release/stable.rst:138
msgid ""
"Wait for the `Cilium Helm Charts Workflow "
"<https://github.com/cilium/charts/actions>`__ to successfully deploy a "
"cluster using the new Helm charts."
msgstr ""

#: ../../contributing/release/rc.rst:141
#: ../../contributing/release/stable.rst:141
msgid "`Publish a GitHub release <https://github.com/cilium/cilium/releases/>`_:"
msgstr ""

#: ../../contributing/release/rc.rst:143
msgid "Following the steps above, the release draft will already be prepared."
msgstr ""

#: ../../contributing/release/rc.rst:145
msgid "Check the ``This is a pre-release`` box."
msgstr ""

#: ../../contributing/release/rc.rst:146
#: ../../contributing/release/stable.rst:146
msgid ""
"Copy the official docker manifests for the release from the previous step"
" into the end of the Github release announcement."
msgstr ""

#: ../../contributing/release/rc.rst:148
msgid "Preview the description and then publish the release"
msgstr ""

#: ../../contributing/release/rc.rst:150
#: ../../contributing/release/stable.rst:149
msgid "Announce the release in the ``#general`` channel on Slack. Sample text:"
msgstr ""

#: ../../contributing/release/stable.rst:10
msgid "Generic Release Process"
msgstr ""

#: ../../contributing/release/stable.rst:12
msgid ""
"This process applies to all releases other than feature releases, this "
"includes:"
msgstr ""

#: ../../contributing/release/stable.rst:14
msgid "Stable releases"
msgstr ""

#: ../../contributing/release/stable.rst:34
msgid ""
"Ensure that the necessary backports have been completed and merged. See "
":ref:`backport_process`."
msgstr ""

#: ../../contributing/release/stable.rst:37
msgid "Update GitHub project and create ``vX.Y.Z+1`` project if applicable."
msgstr ""

#: ../../contributing/release/stable.rst:38
msgid ""
"Update PRs / issues that were added to the ``vX.Y.Z`` project, but didn't"
" make it into this release into the ``vX.Y.Z+1`` project."
msgstr ""

#: ../../contributing/release/stable.rst:41
msgid ""
"Create a new project named \"X.Y.Z+1\" to automatically track the "
"backports for that particular release. `Direct Link: "
"<https://github.com/cilium/cilium/projects/new>`_"
msgstr ""

#: ../../contributing/release/stable.rst:44
msgid "Checkout the desired stable branch and pull it:"
msgstr ""

#: ../../contributing/release/stable.rst:67
msgid ""
"Add all modified files using ``git add`` and create a commit with the "
"title ``Prepare for release v1.0.3``."
msgstr ""

#: ../../contributing/release/stable.rst:86
msgid "Create and push release tags to GitHub:"
msgstr ""

#: ../../contributing/release/stable.rst:102
msgid ""
"Once the release images are pushed, pull the image digests and prepare a "
"PR with the official release image digests:"
msgstr ""

#: ../../contributing/release/stable.rst:108
msgid ""
"This will leave a file with the format ``digest-vX.Y.Z.txt`` in the local"
" directory which can be used to prepare the release in the next step."
msgstr ""

#: ../../contributing/release/stable.rst:119
msgid ""
"Prepare Helm changes for the dev version of the branch using the `Cilium "
"Helm Charts Repository <https://github.com/cilium/charts/>`__ for the "
"vX.Y helm charts, and push the changes into that repository (not the main"
" cilium repository):"
msgstr ""

#: ../../contributing/release/stable.rst:122
msgid "In the ``cilium/cilium`` repository:"
msgstr ""

#: ../../contributing/release/stable.rst:124
msgid "``git checkout vx.y -b vx.z-dev``"
msgstr ""

#: ../../contributing/release/stable.rst:125
msgid "Change the ``VERSION`` file to ``x.y-dev``"
msgstr ""

#: ../../contributing/release/stable.rst:126
msgid "Run ``make -C install/kubernetes``"
msgstr ""

#: ../../contributing/release/stable.rst:128
msgid "In the ``cilium/charts`` repository:"
msgstr ""

#: ../../contributing/release/stable.rst:135
msgid ""
"After pushing you can revert all the changes made in the local branch "
"``x.y-dev`` from ``cilium/cilium``."
msgstr ""

#: ../../contributing/release/stable.rst:143
msgid ""
"Following the steps above, the release draft will already be prepared. "
"Preview the description and then publish the release."
msgstr ""

#: ../../contributing/release/stable.rst:160
msgid ""
"Create a new git branch based on the master branch to update "
"``README.rst``:"
msgstr ""

#: ../../contributing/release/stable.rst:168
msgid ""
"Bump the version of Cilium used in the Cilium upgrade tests to use the "
"new release"
msgstr ""

#: ../../contributing/release/stable.rst:170
msgid ""
"Please reach out on the ``#development`` channel on Slack for assistance "
"with this task."
msgstr ""

#: ../../contributing/release/stable.rst:173
msgid ""
"Update the ``stable`` tags for ``cilium``, ``cilium-operator``, ``cilium-"
"operator-aws``, ``cilium-operator-azure``, ``cilium-operator-generic``, "
"``cilium-docker-plugin``, ``hubble-relay`` and ``clustermesh-apiserver`` "
"on DockerHub, for the latest version of Cilium. For example, if the "
"latest version is ``1.8``, then for all patch releases on the ``1.8`` "
"line, this step should be performed. Once ``1.9`` is out for example, "
"then this is no longer required for ``1.8`` or earlier releases."
msgstr ""

#: ../../contributing/release/stable.rst:185
msgid "Check if all docker images are available before announcing the release:"
msgstr ""

#: ../../contributing/release/stable.rst:191
msgid ""
"Update the following external tools and guides to point to the released "
"Cilium version. This step is only required on a new minor release like "
"going from ``1.8`` to ``1.9``."
msgstr ""

#: ../../contributing/release/stable.rst:195
msgid ""
"`kubeadm <https://kubernetes.io/docs/setup/production-"
"environment/tools/kubeadm/create-cluster-kubeadm/>`_"
msgstr ""

#: ../../contributing/release/stable.rst:196
msgid "`kops <https://github.com/kubernetes/kops/>`_"
msgstr ""

#: ../../contributing/release/stable.rst:197
msgid "`kubespray <https://github.com/kubernetes-sigs/kubespray/>`_"
msgstr ""

#: ../../contributing/testing/ci.rst:10
msgid "CI / Jenkins"
msgstr ""

#: ../../contributing/testing/ci.rst:12
msgid "The main CI infrastructure is maintained at https://jenkins.cilium.io/"
msgstr ""

#: ../../contributing/testing/ci.rst:15
msgid "Triggering Pull-Request Builds With Jenkins"
msgstr ""

#: ../../contributing/testing/ci.rst:17
msgid ""
"To ensure that build resources are used judiciously, builds on Jenkins "
"are manually triggered via comments on each pull-request that contain "
"\"trigger-phrases\". Only members of the Cilium GitHub organization are "
"allowed to trigger these jobs."
msgstr ""

#: ../../contributing/testing/ci.rst:22
msgid ""
"Depending on the PR target branch, a specific set of jobs is marked as "
"required, as per the `Cilium CI matrix`_. They will be automatically "
"featured in PR checks directly on the PR page. The following trigger "
"phrases may be used to trigger them all at once:"
msgstr ""

#: ../../contributing/testing/ci.rst:28
msgid "PR target branch"
msgstr ""

#: ../../contributing/testing/ci.rst:28
msgid "Trigger required PR jobs"
msgstr ""

#: ../../contributing/testing/ci.rst:30
msgid "master"
msgstr ""

#: ../../contributing/testing/ci.rst:30
msgid "/test"
msgstr ""

#: ../../contributing/testing/ci.rst:32
msgid "v1.11"
msgstr ""

#: ../../contributing/testing/ci.rst:32
msgid "/test-backport-1.11"
msgstr ""

#: ../../contributing/testing/ci.rst:34
msgid "v1.10"
msgstr ""

#: ../../contributing/testing/ci.rst:34
msgid "/test-backport-1.10"
msgstr ""

#: ../../contributing/testing/ci.rst:36
msgid "v1.9"
msgstr ""

#: ../../contributing/testing/ci.rst:36
msgid "/test-backport-1.9"
msgstr ""

#: ../../contributing/testing/ci.rst:39
msgid ""
"For ``master`` PRs: on top of ``/test``, one may use ``/test-missed-k8s``"
" to trigger all non-required K8s versions on Kernel 4.9 as per the "
"`Cilium CI matrix`_."
msgstr ""

#: ../../contributing/testing/ci.rst:43
msgid ""
"For a full list of Jenkins PR jobs, see `Jenkins (PR tab) "
"<https://jenkins.cilium.io/view/PR/>`_. Trigger phrases are configured "
"within each job's build triggers advanced options."
msgstr ""

#: ../../contributing/testing/ci.rst:47
msgid ""
"There are some feature flags based on Pull Requests labels, the list of "
"labels are the following:"
msgstr ""

#: ../../contributing/testing/ci.rst:50
msgid "``area/containerd``: Enable containerd runtime on all Kubernetes test."
msgstr ""

#: ../../contributing/testing/ci.rst:51
msgid ""
"``ci/net-next``: Run tests on net-next kernel. This causes the  ``/test``"
" target to only run on the net-next kernel. It is purely for testing on a"
" different kernel, to merge a PR it must pass the CI without this flag."
msgstr ""

#: ../../contributing/testing/ci.rst:56
msgid "Retrigger specific jobs"
msgstr ""

#: ../../contributing/testing/ci.rst:58
msgid ""
"For all PRs: one may manually retrigger a specific job (e.g. in case of a"
" flake) with the individual trigger featured directly in the PR check's "
"name (e.g. for ``K8s-1.20-kernel-4.9 (test-1.20-4.9)``, use "
"``/test-1.20-4.9``)."
msgstr ""

#: ../../contributing/testing/ci.rst:62
msgid "This works for all displayed Jenkins tests."
msgstr ""

#: ../../contributing/testing/ci.rst:65
msgid "Testing with race condition detection enabled"
msgstr ""

#: ../../contributing/testing/ci.rst:67
msgid ""
"Optional non-required Jenkins are available for running the test suite "
"with race condition detection enabled, and may be triggered using the "
"trigger phrase ``/test-race``."
msgstr ""

#: ../../contributing/testing/ci.rst:71
msgid ""
"For a full list of Jenkins PR jobs with race detection enabled, see "
"`Jenkins (Race Detection tab) "
"<https://jenkins.cilium.io/view/Race%20Detection/>`_. Trigger phrases are"
" configured within each job's build triggers advanced options."
msgstr ""

#: ../../contributing/testing/ci.rst:77
msgid "Using Jenkins for testing"
msgstr ""

#: ../../contributing/testing/ci.rst:79
msgid ""
"Typically when running Jenkins tests via one of the above trigger phases,"
" it will run all of the tests in that particular category. However, there"
" may be cases where you just want to run a single test quickly on Jenkins"
" and observe the test result. To do so, you need to update the relevant "
"test to have a custom name, and to update the Jenkins file to focus that "
"test. Below is an example patch that shows how this can be achieved."
msgstr ""

#: ../../contributing/testing/ci.rst:122
msgid "Jobs Overview"
msgstr ""

#: ../../contributing/testing/ci.rst:125
msgid "Cilium-PR-Ginkgo-Tests-Validated"
msgstr ""

#: ../../contributing/testing/ci.rst:127
msgid ""
"Runs validated Ginkgo tests which are confirmed to be stable and have "
"been verified. These tests must always pass."
msgstr ""

#: ../../contributing/testing/ci.rst:130
msgid "The configuration for this job is contained within ``ginkgo.Jenkinsfile``."
msgstr ""

#: ../../contributing/testing/ci.rst:132
msgid "The job runs the following steps in parallel:"
msgstr ""

#: ../../contributing/testing/ci.rst:134
msgid "Runs the single-node e2e tests using the Docker runtime."
msgstr ""

#: ../../contributing/testing/ci.rst:135
msgid ""
"Runs the multi-node Kubernetes e2e tests against the latest default "
"version of Kubernetes specified above."
msgstr ""

#: ../../contributing/testing/ci.rst:138
msgid ""
"This job can be used to run tests on custom branches. To do so, log into "
"Jenkins and go to https://jenkins.cilium.io/job/cilium-ginkgo/configure ."
" Then add your branch name to ``GitHub Organization -> cilium -> Filter "
"by name (with wildcards) -> Include`` field and save changes. After you "
"don't need to run tests on your branch, please remove the branch from "
"this field."
msgstr ""

#: ../../contributing/testing/ci.rst:144
msgid ""
"It is also possible to run specific tests from this suite via ``test-"
"only``. The comment can contain 3 arguments: ``--focus`` which specifies "
"which tests should be run, ``--kernel_version`` for supported kernel "
"version (net-next, 49, 419 are possible values right now), "
"``--k8s_version`` for k8s version. If you want to run only one ``It`` "
"block, you need to prepend it with a test suite and create a regex, e.g "
"``/test-only --focus=\"K8sDatapathConfig.*Check connectivity with "
"automatic direct nodes routes\" --k8s_version=1.18 --kernel_version=net-"
"next`` will run specified test in 1.18 Kubernetes cluster running on net-"
"next nodes. Kubernetes version defaults to 1.21, kernel version defaults "
"to 4.19."
msgstr ""

#: ../../contributing/testing/ci.rst:155
msgid "``/test-only --focus=\"K8s\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:155
msgid "Runs all kubernetes tests"
msgstr ""

#: ../../contributing/testing/ci.rst:157
msgid "``/test-only --focus=\"K8sConformance\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:157
msgid "Runs all k8s conformance tests"
msgstr ""

#: ../../contributing/testing/ci.rst:159
msgid "``/test-only --focus=\"K8sChaos\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:159
msgid "Runs all k8s chaos tests"
msgstr ""

#: ../../contributing/testing/ci.rst:161
msgid "``/test-only --focus=\"K8sDatapathConfig\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:161
msgid "Runs all k8s datapath configuration tests"
msgstr ""

#: ../../contributing/testing/ci.rst:163
msgid "``/test-only --focus=\"K8sDemos\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:163
msgid "Runs all k8s demo tests"
msgstr ""

#: ../../contributing/testing/ci.rst:165
msgid "``/test-only --focus=\"K8sKubeProxyFreeMatrix\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:165
msgid "Runs all k8s kube-proxy free matrix tests"
msgstr ""

#: ../../contributing/testing/ci.rst:167
msgid "``/test-only --focus=\"K8sFQDNTest\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:167
msgid "Runs all k8s fqdn tests"
msgstr ""

#: ../../contributing/testing/ci.rst:169
msgid "``/test-only --focus=\"K8sHealthTest\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:169
msgid "Runs all k8s health tests"
msgstr ""

#: ../../contributing/testing/ci.rst:171
msgid "``/test-only --focus=\"K8sHubbleTest\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:171
msgid "Runs all k8s Hubble tests"
msgstr ""

#: ../../contributing/testing/ci.rst:173
msgid "``/test-only --focus=\"K8sIdentity\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:173
msgid "Runs all k8s identity tests"
msgstr ""

#: ../../contributing/testing/ci.rst:175
msgid "``/test-only --focus=\"K8sIstioTest\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:175
msgid "Runs all k8s Istio tests"
msgstr ""

#: ../../contributing/testing/ci.rst:177
msgid "``/test-only --focus=\"K8sKafkaPolicyTest\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:177
msgid "Runs all k8s Kafka tests"
msgstr ""

#: ../../contributing/testing/ci.rst:179
msgid "``/test-only --focus=\"K8sPolicyTest\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:179
msgid "Runs all k8s policy tests"
msgstr ""

#: ../../contributing/testing/ci.rst:181
msgid "``/test-only --focus=\"K8sServicesTest\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:181
msgid "Runs all k8s services tests"
msgstr ""

#: ../../contributing/testing/ci.rst:183
msgid "``/test-only --focus=\"K8sUpdates\"``"
msgstr ""

#: ../../contributing/testing/ci.rst:183
msgid "Runs k8s update tests"
msgstr ""

#: ../../contributing/testing/ci.rst:187
msgid "Running Runtime test suite is still done via ``/test-focus`` command."
msgstr ""

#: ../../contributing/testing/ci.rst:190
msgid "``/test-focus Runtime``"
msgstr ""

#: ../../contributing/testing/ci.rst:190
msgid "Runs all runtime tests"
msgstr ""

#: ../../contributing/testing/ci.rst:195
msgid "It is not possible to run specific tests within the runtime test suite."
msgstr ""

#: ../../contributing/testing/ci.rst:199
msgid "Cilium-PR-Ginkgo-Tests-Kernel"
msgstr ""

#: ../../contributing/testing/ci.rst:201
msgid ""
"Runs the Kubernetes e2e tests with a 4.19 kernel. The configuration for "
"this job is contained within ``ginkgo-kernel.Jenkinsfile``."
msgstr ""

#: ../../contributing/testing/ci.rst:206
msgid "Cilium-PR-Ginkgo-Tests-k8s"
msgstr ""

#: ../../contributing/testing/ci.rst:208
msgid ""
"Runs the Kubernetes e2e tests against all Kubernetes versions that are "
"not currently not tested as part of each pull-request, but which Cilium "
"still supports, as well as the most-recently-released versions of "
"Kubernetes that might not be declared stable by Kubernetes upstream. "
"Check the contents of ``ginkgo-kubernetes-all.Jenkinsfile`` in the branch"
" of Cilium for which you are running tests to see which Kubernetes "
"versions will be tested against."
msgstr ""

#: ../../contributing/testing/ci.rst:216
msgid "Ginkgo-CI-Tests-Pipeline"
msgstr ""

#: ../../contributing/testing/ci.rst:218 ../../contributing/testing/ci.rst:311
msgid "`Ginkgo-CI-Tests-Pipeline`_"
msgstr ""

#: ../../contributing/testing/ci.rst:223
msgid "Packer-CI-Build"
msgstr ""

#: ../../contributing/testing/ci.rst:225
msgid ""
"As part of Cilium development, we use a custom base box with a bunch of "
"pre-installed libraries and tools that we need to enhance our daily "
"workflow. That base box is built with `Packer <https://www.packer.io/>`_ "
"and it is hosted in the `packer-ci-build`_ GitHub repository."
msgstr ""

#: ../../contributing/testing/ci.rst:230
msgid ""
"New versions of this box can be created via `Jenkins Packer Build`_, "
"where new builds of the image will be pushed to  `Vagrant Cloud "
"<https://app.vagrantup.com/cilium>`_ . The version of the image "
"corresponds to the `BUILD_ID "
"<https://wiki.jenkins.io/display/JENKINS/Building+a+software+project"
"#Buildingasoftwareproject-below>`_ environment variable in the Jenkins "
"job. That version ID will be used in Cilium `Vagrantfiles "
"<https://github.com/cilium/cilium/blob/master/test/Vagrantfile#L10>`_."
msgstr ""

#: ../../contributing/testing/ci.rst:238
msgid ""
"Changes to this image are made via contributions to the packer-ci-build "
"repository. Authorized GitHub users can trigger builds with a GitHub "
"comment on the PR containing the trigger phrase ``/build``. In case that "
"a new box needs to be rebased with a different branch than master, "
"authorized developers can run the build with custom parameters. To use a "
"different Cilium branch in the `job`_ go to *Build with parameters* and a"
" base branch can be set as the user needs."
msgstr ""

#: ../../contributing/testing/ci.rst:245
msgid ""
"This box will need to be updated when a new developer needs a new "
"dependency that is not installed in the current version of the box, or if"
" a dependency that is cached within the box becomes stale."
msgstr ""

#: ../../contributing/testing/ci.rst:249
msgid ""
"Make sure that you update vagrant box versions in "
"`vagrant_box_defaults.rb "
"<https://github.com/cilium/cilium/blob/master/vagrant_box_defaults.rb>`__"
" after new box is built and tested."
msgstr ""

#: ../../contributing/testing/ci.rst:253
msgid ""
"Once you change the image versions locally, create a branch named ``pr"
"/update-packer-ci-build`` and open a PR ``github.com/cilium/cilium``. It "
"is important that you use that branch name so the VM images are cached "
"into packet.net before the branch is merged."
msgstr ""

#: ../../contributing/testing/ci.rst:258
msgid ""
"Once this PR is merged, ask `Cilium's CI team "
"<https://github.com/orgs/cilium/teams/vagrant>`_ to ensure:"
msgstr ""

#: ../../contributing/testing/ci.rst:261
msgid "The autoscaler provisioning code is up to date."
msgstr ""

#: ../../contributing/testing/ci.rst:263
msgid "That all Jenkins nodes are scaled down and then back up."
msgstr ""

#: ../../contributing/testing/ci.rst:271
msgid "Testing matrix"
msgstr ""

#: ../../contributing/testing/ci.rst:273
msgid ""
"Up to date CI testing information regarding k8s - kernel version pairs "
"can always be found in the `Cilium CI matrix`_."
msgstr ""

#: ../../contributing/testing/ci.rst:281
msgid "CI Failure Triage"
msgstr ""

#: ../../contributing/testing/ci.rst:283
msgid ""
"This section describes the process to triage CI failures. We define 3 "
"categories:"
msgstr ""

#: ../../contributing/testing/ci.rst:286
msgid "Keyword"
msgstr ""

#: ../../contributing/testing/ci.rst:286 ../../contributing/testing/ci.rst:307
#: ../../contributing/testing/e2e.rst:637
msgid "Description"
msgstr ""

#: ../../contributing/testing/ci.rst:288
msgid "Flake"
msgstr ""

#: ../../contributing/testing/ci.rst:288
msgid ""
"Failure due to a temporary situation such as loss of connectivity to "
"external services or bug in system component, e.g. quay.io is down, VM "
"race conditions, kube-dns bug, ..."
msgstr ""

#: ../../contributing/testing/ci.rst:292
msgid "CI-Bug"
msgstr ""

#: ../../contributing/testing/ci.rst:292
msgid ""
"Bug in the test itself that renders the test unreliable, e.g. timing "
"issue when importing and missing to block until policy is being enforced "
"before connectivity is verified."
msgstr ""

#: ../../contributing/testing/ci.rst:296
msgid "Regression"
msgstr ""

#: ../../contributing/testing/ci.rst:296
msgid ""
"Failure is due to a regression, all failures in the CI that are not "
"caused by bugs in the test are considered regressions."
msgstr ""

#: ../../contributing/testing/ci.rst:301
msgid "Pipelines subject to triage"
msgstr ""

#: ../../contributing/testing/ci.rst:303
msgid ""
"Build/test failures for the following Jenkins pipelines must be reported "
"as GitHub issues using the process below:"
msgstr ""

#: ../../contributing/testing/ci.rst:307
msgid "Pipeline"
msgstr ""

#: ../../contributing/testing/ci.rst:309
msgid "`Ginkgo-Tests-Validated-master`_"
msgstr ""

#: ../../contributing/testing/ci.rst:309
msgid "Runs whenever a PR is merged into master"
msgstr ""

#: ../../contributing/testing/ci.rst:311
msgid "Runs every two hours on the master branch"
msgstr ""

#: ../../contributing/testing/ci.rst:313
msgid "`Vagrant-Master-Boxes-Packer-Build`_"
msgstr ""

#: ../../contributing/testing/ci.rst:313
msgid "Runs on merge into `packer-ci-build`_ repository."
msgstr ""

#: ../../contributing/testing/ci.rst:315
msgid ":jenkins-branch:`Release-branch <>`"
msgstr ""

#: ../../contributing/testing/ci.rst:315
msgid "Runs various Ginkgo tests on merge into branch \"\\ |SCM_BRANCH|\""
msgstr ""

#: ../../contributing/testing/ci.rst:324
msgid "Triage process"
msgstr ""

#: ../../contributing/testing/ci.rst:326
msgid ""
"Discover untriaged Jenkins failures via the jenkins-failures.sh script. "
"It defaults to checking the previous 24 hours but this can be modified by"
" setting the SINCE environment variable (it is a unix timestamp). The "
"script checks the various test pipelines that need triage."
msgstr ""

#: ../../contributing/testing/ci.rst:337
msgid ""
"You can quickly assign SINCE with statements like ``SINCE=`date -d "
"-3days```"
msgstr ""

#: ../../contributing/testing/ci.rst:339
msgid ""
"Investigate the failure you are interested in and determine if it is a "
"CI-Bug, Flake, or a Regression as defined in the table above."
msgstr ""

#: ../../contributing/testing/ci.rst:342
#, python-format
msgid ""
"Search `GitHub issues "
"<https://github.com/cilium/cilium/issues?utf8=%E2%9C%93&q=is%3Aissue+>`_ "
"to see if bug is already filed. Make sure to also include closed issues "
"in your search as a CI issue can be considered solved and then re-"
"appears. Good search terms are:"
msgstr ""

#: ../../contributing/testing/ci.rst:347
msgid "The test name, e.g. ::"
msgstr ""

#: ../../contributing/testing/ci.rst:352
msgid "The line on which the test failed, e.g. ::"
msgstr ""

#: ../../contributing/testing/ci.rst:357
msgid "The error message, e.g. ::"
msgstr ""

#: ../../contributing/testing/ci.rst:362
msgid "If a corresponding GitHub issue exists, update it with:"
msgstr ""

#: ../../contributing/testing/ci.rst:364
msgid ""
"A link to the failing Jenkins build (note that the build information is "
"eventually deleted)."
msgstr ""

#: ../../contributing/testing/ci.rst:366
msgid ""
"Attach the zipfile downloaded from Jenkins with logs from the failing "
"tests. A zipfile for all tests is also available."
msgstr ""

#: ../../contributing/testing/ci.rst:368
msgid ""
"Check how much time has passed since the last reported occurrence of this"
" failure and move this issue to the correct column in the `CI flakes "
"project`_ board."
msgstr ""

#: ../../contributing/testing/ci.rst:372
msgid ""
"If no existing GitHub issue was found, file a `new GitHub issue "
"<https://github.com/cilium/cilium/issues/new>`_:"
msgstr ""

#: ../../contributing/testing/ci.rst:374 ../../contributing/testing/ci.rst:386
msgid "Attach zipfile downloaded from Jenkins with logs from failing test"
msgstr ""

#: ../../contributing/testing/ci.rst:375
msgid "If the failure is a new regression or a real bug:"
msgstr ""

#: ../../contributing/testing/ci.rst:377
msgid "Title: ``<Short bug description>``"
msgstr ""

#: ../../contributing/testing/ci.rst:378
msgid "Labels ``kind/bug`` and ``needs/triage``."
msgstr ""

#: ../../contributing/testing/ci.rst:380
msgid "If failure is a new CI-Bug, Flake or if you are unsure:"
msgstr ""

#: ../../contributing/testing/ci.rst:382
msgid ""
"Title ``CI: <testname>: <cause>``, e.g. ``CI: K8sValidatedPolicyTest "
"Namespaces: cannot curl service``"
msgstr ""

#: ../../contributing/testing/ci.rst:383
msgid "Labels ``kind/bug/CI`` and ``needs/triage``"
msgstr ""

#: ../../contributing/testing/ci.rst:384
msgid ""
"Include a link to the failing Jenkins build (note that the build "
"information is eventually deleted)."
msgstr ""

#: ../../contributing/testing/ci.rst:387
msgid ""
"Include the test name and whole Stacktrace section to help others find "
"this issue."
msgstr ""

#: ../../contributing/testing/ci.rst:388
msgid "Add issue to `CI flakes project`_."
msgstr ""

#: ../../contributing/testing/ci.rst:392
msgid ""
"Be extra careful when you see a new flake on a PR, and want to open an "
"issue. It's much more difficult to debug these without context around the"
" PR and the changes it introduced. When creating an issue for a PR flake,"
" include a description of the code change, the PR, or the diff. If it "
"isn't related to the PR, then it should already happen in master, and a "
"new issue isn't needed."
msgstr ""

#: ../../contributing/testing/ci.rst:399
msgid ""
"Edit the description of the Jenkins build to mark it as triaged. This "
"will exclude it from future jenkins-failures.sh output."
msgstr ""

#: ../../contributing/testing/ci.rst:402
msgid "Login -> Click on build -> Edit Build Information"
msgstr ""

#: ../../contributing/testing/ci.rst:403
msgid ""
"Add the failure type and GH issue number. Use the table describing the "
"failure categories, at the beginning of this section, to help categorize "
"them."
msgstr ""

#: ../../contributing/testing/ci.rst:409
msgid ""
"This step can only be performed with an account on Jenkins. If you are "
"interested in CI failure reviews and do not have an account yet, ping us "
"on Slack."
msgstr ""

#: ../../contributing/testing/ci.rst:413
msgid "**Examples:**"
msgstr ""

#: ../../contributing/testing/ci.rst:415
msgid "``Flake, quay.io is down``"
msgstr ""

#: ../../contributing/testing/ci.rst:416
msgid "``Flake, DNS not ready, #3333``"
msgstr ""

#: ../../contributing/testing/ci.rst:417
msgid "``CI-Bug, K8sValidatedPolicyTest: Namespaces, pod not ready, #9939``"
msgstr ""

#: ../../contributing/testing/ci.rst:418
msgid "``Regression, k8s host policy, #1111``"
msgstr ""

#: ../../contributing/testing/ci.rst:423
msgid "Bisect process"
msgstr ""

#: ../../contributing/testing/ci.rst:425
msgid ""
"If you are unable to triage the issue, you may try to use bisect job to "
"find when things went awry in Jenkins."
msgstr ""

#: ../../contributing/testing/ci.rst:427
msgid "Log in to Jenkins"
msgstr ""

#: ../../contributing/testing/ci.rst:429
msgid "Go to https://jenkins.cilium.io/job/bisect-cilium/configure ."
msgstr ""

#: ../../contributing/testing/ci.rst:431
msgid ""
"Under ``Git Bisect`` build step fill in ``Good start revision`` and ``Bad"
" end revision``."
msgstr ""

#: ../../contributing/testing/ci.rst:433
msgid "Write description of what you are looking for under ``Search Identifier``."
msgstr ""

#: ../../contributing/testing/ci.rst:435
msgid ""
"Adjust ``Retry number`` and ``Min Successful Runs`` to account for "
"current CI flakiness."
msgstr ""

#: ../../contributing/testing/ci.rst:437
msgid "Save the configuration."
msgstr ""

#: ../../contributing/testing/ci.rst:439
msgid "Click \"Build Now\" in https://jenkins.cilium.io/job/bisect-cilium/ ."
msgstr ""

#: ../../contributing/testing/ci.rst:441
msgid ""
"This may take over a day depending on how many underlying builds will be "
"created. The result will be in ``bisect-cilium`` console output, actual "
"builds will be happening in https://jenkins.cilium.io/job/cilium-"
"revision/ job."
msgstr ""

#: ../../contributing/testing/ci.rst:444
msgid "Infrastructure details"
msgstr ""

#: ../../contributing/testing/ci.rst:447
msgid "Logging into VM running tests"
msgstr ""

#: ../../contributing/testing/ci.rst:449
msgid ""
"If you have access to credentials for Jenkins, log into the Jenkins slave"
" running the test workload"
msgstr ""

#: ../../contributing/testing/ci.rst:450
msgid "Identify the vagrant box running the specific test"
msgstr ""

#: ../../contributing/testing/ci.rst:463
msgid "Log into the specific VM"
msgstr ""

#: ../../contributing/testing/ci.rst:471
msgid "Jenkinsfiles Extensions"
msgstr ""

#: ../../contributing/testing/ci.rst:473
msgid ""
"Cilium uses a custom `Jenkins helper library <https://github.com/cilium"
"/Jenkins-library>`_ to gather metadata from PRs and simplify our "
"Jenkinsfiles. The exported methods are:"
msgstr ""

#: ../../contributing/testing/ci.rst:477
msgid "**ispr()**: return true if the current build is a PR."
msgstr ""

#: ../../contributing/testing/ci.rst:478
msgid ""
"**setIfPr(string, string)**: return the first argument in case of a PR, "
"if not a PR return the second one."
msgstr ""

#: ../../contributing/testing/ci.rst:480
msgid ""
"**BuildIfLabel(String label, String Job)**: trigger a new Job if the PR "
"has that specific Label."
msgstr ""

#: ../../contributing/testing/ci.rst:482
msgid ""
"**Status(String status, String context)**: set pull request check status "
"on the given context, example ``Status(\"SUCCESS\", \"$JOB_BASE_NAME\")``"
msgstr ""

#: ../../contributing/testing/documentation.rst:10
msgid "Documentation"
msgstr ""

#: ../../contributing/testing/documentation.rst:12
msgid ""
"First, start a local document server that automatically refreshes when "
"you save files for real-time preview. It relies on the ``cilium/docs-"
"builder`` Docker container."
msgstr ""

#: ../../contributing/testing/documentation.rst:19
msgid ""
"and preview the documentation at http://localhost:9081/ as you make "
"changes. After making changes to Cilium documentation you should check "
"that you did not introduce any new warnings or errors, and also check "
"that your changes look as you intended one last time before opening a "
"pull request. To do this you can build the docs:"
msgstr ""

#: ../../contributing/testing/documentation.rst:28
msgid ""
"This generates documentation files and starts a web server using a Docker"
" container. You can view the updated documentation by opening either "
"``Documentation/_build/html/index.html`` or http://localhost:9081 in a "
"browser."
msgstr ""

#: ../../contributing/testing/documentation.rst:34
msgid ""
"By default, ``render-docs-live-preview`` generates a preview with "
"instructions to install Cilium from the latest version on GitHub (i.e. "
"from the HEAD of the master branch that has not been released) regardless"
" of which Cilium branch you are in. You can target a specific branch by "
"specifying ``READTHEDOCS_VERSION`` environment variable:"
msgstr ""

#: ../../contributing/testing/e2e.rst:10
msgid "End-To-End Testing Framework"
msgstr ""

#: ../../contributing/testing/e2e.rst:13
msgid "Introduction"
msgstr ""

#: ../../contributing/testing/e2e.rst:15
msgid ""
"Cilium uses `Ginkgo`_ as a testing framework for writing end-to-end tests"
" which test Cilium all the way from the API level (e.g. importing "
"policies, CLI) to the datapath (i.e, whether policy that is imported is "
"enforced accordingly in the datapath).  The tests in the ``test`` "
"directory are built on top of Ginkgo. Ginkgo provides a rich framework "
"for developing tests alongside the benefits of Golang (compilation-time "
"checks, types, etc.). To get accustomed to the basics of Ginkgo, we "
"recommend reading the `Ginkgo Getting-Started Guide "
"<https://onsi.github.io/ginkgo/#getting-started-writing-your-first-"
"test>`_ , as well as running `example tests <https://github.com/onsi"
"/composition-ginkgo-example>`_ to get a feel for the Ginkgo workflow."
msgstr ""

#: ../../contributing/testing/e2e.rst:28
msgid ""
"These test scripts will invoke ``vagrant`` to create virtual machine(s) "
"to run the tests. The tests make heavy use of the Ginkgo `focus`_ concept"
" to determine which VMs are necessary to run particular tests. All test "
"names *must* begin with one of the following prefixes:"
msgstr ""

#: ../../contributing/testing/e2e.rst:33
msgid ""
"``Runtime``: Test cilium in a runtime environment running on a single "
"node."
msgstr ""

#: ../../contributing/testing/e2e.rst:34
msgid ""
"``K8s``: Create a small multi-node kubernetes environment for testing "
"features beyond a single host, and for testing kubernetes-specific "
"features."
msgstr ""

#: ../../contributing/testing/e2e.rst:36
msgid ""
"``Nightly``: sets up a multinode Kubernetes cluster to run scale, "
"performance, and chaos testing for Cilium."
msgstr ""

#: ../../contributing/testing/e2e.rst:42
msgid "Running End-To-End Tests"
msgstr ""

#: ../../contributing/testing/e2e.rst:45
msgid "Running All Ginkgo Tests"
msgstr ""

#: ../../contributing/testing/e2e.rst:47
msgid ""
"Running all of the Ginkgo tests may take an hour or longer. To run all "
"the ginkgo tests, invoke the make command as follows from the root of the"
" cilium repository:"
msgstr ""

#: ../../contributing/testing/e2e.rst:55
msgid ""
"The first time that this is invoked, the testsuite will pull the `testing"
" VMs <https://app.vagrantup.com/cilium/boxes/ginkgo>`_ and provision "
"Cilium into them. This may take several minutes, depending on your "
"internet connection speed. Subsequent runs of the test will reuse the "
"image."
msgstr ""

#: ../../contributing/testing/e2e.rst:61
msgid "Running Runtime Tests"
msgstr ""

#: ../../contributing/testing/e2e.rst:63
msgid ""
"To run all of the runtime tests, execute the following command from the "
"``test`` directory:"
msgstr ""

#: ../../contributing/testing/e2e.rst:69
msgid ""
"Ginkgo searches for all tests in all subdirectories that are \"named\" "
"beginning with the string \"Runtime\" and contain any characters after "
"it. For instance, here is an example showing what tests will be ran using"
" Ginkgo's dryRun option:"
msgstr ""

#: ../../contributing/testing/e2e.rst:106
msgid ""
"The output has been truncated. For more information about this "
"functionality, consult the aforementioned Ginkgo documentation."
msgstr ""

#: ../../contributing/testing/e2e.rst:112
msgid "Running Kubernetes Tests"
msgstr ""

#: ../../contributing/testing/e2e.rst:114
msgid ""
"To run all of the Kubernetes tests, run the following command from the "
"``test`` directory:"
msgstr ""

#: ../../contributing/testing/e2e.rst:120
msgid ""
"To run a specific test from the Kubernetes tests suite, run the following"
" command from the ``test`` directory:"
msgstr ""

#: ../../contributing/testing/e2e.rst:127
msgid ""
"Similar to the Runtime test suite, Ginkgo searches for all tests in all "
"subdirectories that are \"named\" beginning with the string \"K8s\" and "
"contain any characters after it."
msgstr ""

#: ../../contributing/testing/e2e.rst:131
msgid "The Kubernetes tests support the following Kubernetes versions:"
msgstr ""

#: ../../contributing/testing/e2e.rst:133
msgid "1.16"
msgstr ""

#: ../../contributing/testing/e2e.rst:134
msgid "1.17"
msgstr ""

#: ../../contributing/testing/e2e.rst:135
#: ../../contributing/testing/e2e.rst:649
msgid "1.18"
msgstr ""

#: ../../contributing/testing/e2e.rst:136
msgid "1.19"
msgstr ""

#: ../../contributing/testing/e2e.rst:137
msgid "1.20"
msgstr ""

#: ../../contributing/testing/e2e.rst:138
msgid "1.21"
msgstr ""

#: ../../contributing/testing/e2e.rst:139
msgid "1.22"
msgstr ""

#: ../../contributing/testing/e2e.rst:140
msgid "1.23"
msgstr ""

#: ../../contributing/testing/e2e.rst:141
msgid "1.24"
msgstr ""

#: ../../contributing/testing/e2e.rst:143
msgid ""
"By default, the Vagrant VMs are provisioned with Kubernetes 1.23. To run "
"with any other supported version of Kubernetes, run the test suite with "
"the following format:"
msgstr ""

#: ../../contributing/testing/e2e.rst:152
msgid ""
"When provisioning VMs with the net-next kernel (``NETNEXT=1``) on "
"VirtualBox which version does not match a version of the VM image "
"VirtualBox Guest Additions, Vagrant will install a new version of the "
"Additions with ``mount.vboxsf``. The latter is not compatible with "
"``vboxsf.ko`` shipped within the VM image, and thus syncing of shared "
"folders will not work."
msgstr ""

#: ../../contributing/testing/e2e.rst:159
msgid ""
"To avoid this, one can prevent Vagrant from installing the Additions by "
"putting the following into ``$HOME/.vagrant.d/Vagrantfile``:"
msgstr ""

#: ../../contributing/testing/e2e.rst:175
msgid "Running Nightly Tests"
msgstr ""

#: ../../contributing/testing/e2e.rst:177
msgid ""
"To run all of the Nightly tests, run the following command from the "
"``test`` directory:"
msgstr ""

#: ../../contributing/testing/e2e.rst:183
msgid ""
"Similar to the other test suites, Ginkgo searches for all tests in all "
"subdirectories that are \"named\" beginning with the string \"Nightly\" "
"and contain any characters after it. The default version of running "
"Nightly test are 1.8, but can be changed using the environment variable "
"``K8S_VERSION``."
msgstr ""

#: ../../contributing/testing/e2e.rst:189
msgid "Available CLI Options"
msgstr ""

#: ../../contributing/testing/e2e.rst:191
msgid ""
"For more advanced workflows, check the list of available custom options "
"for the Cilium framework in the ``test/`` directory and interact with "
"ginkgo directly:"
msgstr ""

#: ../../contributing/testing/e2e.rst:242
msgid ""
"For more information about other built-in options to Ginkgo, consult the "
"`Ginkgo documentation`_."
msgstr ""

#: ../../contributing/testing/e2e.rst:248
msgid "Running Specific Tests Within a Test Suite"
msgstr ""

#: ../../contributing/testing/e2e.rst:250
msgid "If you want to run one specified test, there are a few options:"
msgstr ""

#: ../../contributing/testing/e2e.rst:252
msgid ""
"By modifying code: add the prefix \"FIt\" on the test you want to run; "
"this marks the test as focused. Ginkgo will skip other tests and will "
"only run the \"focused\" test. For more information, consult the `Focused"
" Specs`_ documentation from Ginkgo."
msgstr ""

#: ../../contributing/testing/e2e.rst:268
msgid ""
"From the command line: specify a more granular focus if you want to focus"
" on, say, Runtime L7 tests:"
msgstr ""

#: ../../contributing/testing/e2e.rst:275
msgid ""
"This will focus on tests that contain \"Runtime\", followed by any number"
" of any characters, followed by \"L7\". ``--focus`` is a regular "
"expression and quotes are required if it contains spaces and to escape "
"shell expansion of ``*``."
msgstr ""

#: ../../contributing/testing/e2e.rst:283
msgid "Compiling the tests without running them"
msgstr ""

#: ../../contributing/testing/e2e.rst:285
msgid ""
"To validate that the Go code you've written for testing is correct "
"without needing to run the full test, you can build the test directory:"
msgstr ""

#: ../../contributing/testing/e2e.rst:293
msgid "Updating Cilium images for Kubernetes tests"
msgstr ""

#: ../../contributing/testing/e2e.rst:295
msgid ""
"Sometimes when running the CI suite for a feature under development, it's"
" common to re-run the CI suite on the CI VMs running on a local "
"development machine after applying some changes to Cilium. For this the "
"new Cilium images have to be built, and then used by the CI suite. To do "
"so, one can run the following commands on the ``k8s1`` VM:"
msgstr ""

#: ../../contributing/testing/e2e.rst:315
msgid "The commands were adapted from the ``test/provision/compile.sh`` script."
msgstr ""

#: ../../contributing/testing/e2e.rst:318
msgid "Test Reports"
msgstr ""

#: ../../contributing/testing/e2e.rst:320
msgid ""
"The Cilium Ginkgo framework formulates JUnit reports for each test. The "
"following files currently are generated depending upon the test suite "
"that is ran:"
msgstr ""

#: ../../contributing/testing/e2e.rst:323
msgid "runtime.xml"
msgstr ""

#: ../../contributing/testing/e2e.rst:324
msgid "K8s.xml"
msgstr ""

#: ../../contributing/testing/e2e.rst:327
msgid "Best Practices for Writing Tests"
msgstr ""

#: ../../contributing/testing/e2e.rst:329
msgid ""
"Provide informative output to console during a test using the `By "
"construct <https://onsi.github.io/ginkgo/#documenting-complex-its-by>`_. "
"This helps with debugging and gives those who did not write the test a "
"good idea of what is going on. The lower the barrier of entry is for "
"understanding tests, the better our tests will be!"
msgstr ""

#: ../../contributing/testing/e2e.rst:330
msgid ""
"Leave the testing environment in the same state that it was in when the "
"test started by deleting resources, resetting configuration, etc."
msgstr ""

#: ../../contributing/testing/e2e.rst:331
msgid ""
"Gather logs in the case that a test fails. If a test fails while running "
"on Jenkins, a postmortem needs to be done to analyze why. So, dumping "
"logs to a location where Jenkins can pick them up is of the highest "
"imperative. Use the following code in an ``AfterFailed`` method:"
msgstr ""

#: ../../contributing/testing/e2e.rst:341
msgid "Ginkgo Extensions"
msgstr ""

#: ../../contributing/testing/e2e.rst:343
msgid ""
"In Cilium, some Ginkgo features are extended to cover some uses cases "
"that are useful for testing Cilium."
msgstr ""

#: ../../contributing/testing/e2e.rst:347
msgid "BeforeAll"
msgstr ""

#: ../../contributing/testing/e2e.rst:349
msgid ""
"This function will run before all `BeforeEach`_ within a `Describe or "
"Context`_. This method is an equivalent to ``SetUp`` or initialize "
"functions in common unit test frameworks."
msgstr ""

#: ../../contributing/testing/e2e.rst:357
msgid "AfterAll"
msgstr ""

#: ../../contributing/testing/e2e.rst:359
msgid ""
"This method will run after all `AfterEach`_ functions defined in a "
"`Describe or Context`_. This method is used for tearing down objects "
"created which are used by all ``Its`` within the given ``Context`` or "
"``Describe``. It is ran after all Its have ran, this method is a "
"equivalent to ``tearDown`` or ``finalize`` methods in common unit test "
"frameworks."
msgstr ""

#: ../../contributing/testing/e2e.rst:365
msgid ""
"A good use case for using ``AfterAll`` method is to remove containers or "
"pods that are needed for multiple ``Its`` in the given ``Context`` or "
"``Describe``."
msgstr ""

#: ../../contributing/testing/e2e.rst:371
msgid "JustAfterEach"
msgstr ""

#: ../../contributing/testing/e2e.rst:373
msgid ""
"This method will run just after each test and before ``AfterFailed`` and "
"``AfterEach``. The main reason of this method is to perform some "
"assertions for a group of tests.  A good example of using a global "
"``JustAfterEach`` function is for deadlock detection, which checks the "
"Cilium logs for deadlocks that may have occurred in the duration of the "
"tests."
msgstr ""

#: ../../contributing/testing/e2e.rst:380
msgid "AfterFailed"
msgstr ""

#: ../../contributing/testing/e2e.rst:382
msgid ""
"This method will run before all ``AfterEach`` and after "
"``JustAfterEach``. This function is only called when the test failed.This"
" construct is used to gather logs, the status of Cilium, etc, which "
"provide data for analysis when tests fail."
msgstr ""

#: ../../contributing/testing/e2e.rst:388
msgid "Example Test Layout"
msgstr ""

#: ../../contributing/testing/e2e.rst:390
msgid ""
"Here is an example layout of how a test may be written with the "
"aforementioned constructs:"
msgstr ""

#: ../../contributing/testing/e2e.rst:393
msgid "Test description diagram::"
msgstr ""

#: ../../contributing/testing/e2e.rst:415
msgid "Test execution flow::"
msgstr ""

#: ../../contributing/testing/e2e.rst:440
msgid "Debugging:"
msgstr ""

#: ../../contributing/testing/e2e.rst:442
msgid ""
"You can retrieve all run commands and their output in the report "
"directory (``./test/test_results``). Each test creates a new folder, "
"which contains a file called log where all information is saved, in case "
"of a failing test an exhaustive data will be added."
msgstr ""

#: ../../contributing/testing/e2e.rst:463
msgid "Running with delve"
msgstr ""

#: ../../contributing/testing/e2e.rst:465
msgid ""
"`Delve <https://github.com/derekparker/delve>`_ is a debugging tool for "
"Go applications. If you want to run your test with delve,  you should add"
" a new breakpoint using `runtime.BreakPoint() "
"<https://golang.org/pkg/runtime/#Breakpoint>`_ in the code, and run "
"ginkgo using ``dlv``."
msgstr ""

#: ../../contributing/testing/e2e.rst:471
msgid "Example how to run ginkgo using ``dlv``:"
msgstr ""

#: ../../contributing/testing/e2e.rst:478
msgid "Running End-To-End Tests In Other Environments via kubeconfig"
msgstr ""

#: ../../contributing/testing/e2e.rst:480
msgid ""
"The end-to-end tests can be run with an arbitrary kubeconfig file. "
"Normally the CI will use the kubernetes created via vagrant but this can "
"be overridden with ``--cilium.kubeconfig``. When used, ginkgo will not "
"start a VM nor compile cilium. It will also skip some setup tasks like "
"labeling nodes for testing."
msgstr ""

#: ../../contributing/testing/e2e.rst:485
msgid "This mode expects:"
msgstr ""

#: ../../contributing/testing/e2e.rst:487
msgid "The current directory is ``cilium/test``"
msgstr ""

#: ../../contributing/testing/e2e.rst:489
msgid ""
"A test focus with ``--focus``. ``--focus=\"K8s\"`` selects all kubernetes"
" tests."
msgstr ""

#: ../../contributing/testing/e2e.rst:491
msgid ""
"Cilium images as full URLs specified with the ``--cilium.image`` and "
"``--cilium.operator-image`` options."
msgstr ""

#: ../../contributing/testing/e2e.rst:494
msgid "A working kubeconfig with the ``--cilium.kubeconfig`` option"
msgstr ""

#: ../../contributing/testing/e2e.rst:496
msgid ""
"A populated K8S_VERSION environment variable set to the version of the "
"cluster"
msgstr ""

#: ../../contributing/testing/e2e.rst:498
msgid ""
"If appropriate, set the ``CNI_INTEGRATION`` environment variable set to "
"one of ``gke``, ``eks``, ``eks-chaining``, ``microk8s`` or ``minikube``. "
"This selects matching configuration overrides for cilium. Leaving this "
"unset for non-matching integrations is also correct."
msgstr ""

#: ../../contributing/testing/e2e.rst:503
msgid ""
"For k8s environments that invoke an authentication agent, such as EKS and"
" ``aws-iam-authenticator``, set ``--cilium.passCLIEnvironment=true``"
msgstr ""

#: ../../contributing/testing/e2e.rst:506
msgid "An example invocation is"
msgstr ""

#: ../../contributing/testing/e2e.rst:513
msgid "Running in GKE"
msgstr ""

#: ../../contributing/testing/e2e.rst:515
msgid ""
"1- Setup a cluster as in :ref:`k8s_install_quick` or utilize an existing "
"cluster."
msgstr ""

#: ../../contributing/testing/e2e.rst:518
msgid ""
"You do not need to deploy Cilium in this step, as the End-To-End Testing "
"Framework handles the deployment of Cilium."
msgstr ""

#: ../../contributing/testing/e2e.rst:521
msgid ""
"The tests require machines larger than ``n1-standard-4``. This can be set"
" with ``--machine-type n1-standard-4`` on cluster creation."
msgstr ""

#: ../../contributing/testing/e2e.rst:525
msgid ""
"2- Invoke the tests from ``cilium/test`` with options set as explained in"
" `Running End-To-End Tests In Other Environments via kubeconfig`_"
msgstr ""

#: ../../contributing/testing/e2e.rst:528
msgid ""
"The tests require the ``NATIVE_CIDR`` environment variable to be set to "
"the value of the cluster IPv4 CIDR returned by the ``gcloud container "
"clusters describe`` command."
msgstr ""

#: ../../contributing/testing/e2e.rst:540
msgid ""
"The kubernetes version defaults to 1.23 but can be configured with "
"versions between 1.16 and 1.23. Version should match the server version "
"reported by ``kubectl version``."
msgstr ""

#: ../../contributing/testing/e2e.rst:545
msgid "AWS EKS (experimental)"
msgstr ""

#: ../../contributing/testing/e2e.rst:547
msgid ""
"Not all tests can succeed on EKS. Many do, however and may be useful. "
":gh-issue:`9678#issuecomment-749350425` contains a list of tests that are"
" still failing."
msgstr ""

#: ../../contributing/testing/e2e.rst:551
msgid ""
"Setup a cluster as in :ref:`k8s_install_quick` or utilize an existing "
"cluster."
msgstr ""

#: ../../contributing/testing/e2e.rst:554
msgid ""
"Source the testing integration script from "
"``cilium/contrib/testing/integrations.sh``."
msgstr ""

#: ../../contributing/testing/e2e.rst:556
msgid ""
"Invoke the ``gks`` function by passing which ``cilium`` docker image to "
"run and the test focus. The command also accepts additional ginkgo "
"arguments."
msgstr ""

#: ../../contributing/testing/e2e.rst:565
msgid "Adding new Managed Kubernetes providers"
msgstr ""

#: ../../contributing/testing/e2e.rst:567
msgid ""
"All Managed Kubernetes test support relies on using a pre-configured "
"kubeconfig file.  This isn't always adequate, however, and adding "
"defaults specific to each provider is possible. The `commit adding GKE "
"<https://github.com/cilium/cilium/commit/c2d8445fd725c515a635c8c3ad3be901a08084eb>`_"
" support is a good reference."
msgstr ""

#: ../../contributing/testing/e2e.rst:572
msgid ""
"Add a map of helm settings to act as an override for this provider in "
"`test/helpers/kubectl.go "
"<https://github.com/cilium/cilium/blob/26dec4c4f4311df2b1a6c909b27ff7fe6e46929f/test/helpers/kubectl.go#L80-L102>`_."
" These should be the helm settings used when generating cilium specs for "
"this provider."
msgstr ""

#: ../../contributing/testing/e2e.rst:577
msgid ""
"Add a unique `CI Integration constant "
"<https://github.com/cilium/cilium/blob/26dec4c4f4311df2b1a6c909b27ff7fe6e46929f/test/helpers/kubectl.go#L66-L67>`_."
" This value is passed in when invoking ginkgo via the ``CNI_INTEGRATON`` "
"environment variable."
msgstr ""

#: ../../contributing/testing/e2e.rst:581
msgid ""
"Update the `helm overrides "
"<https://github.com/cilium/cilium/blob/26dec4c4f4311df2b1a6c909b27ff7fe6e46929f/test/helpers/kubectl.go#L138-L147>`_"
" mapping with the constant and the helm settings."
msgstr ""

#: ../../contributing/testing/e2e.rst:584
msgid ""
"For cases where a test should be skipped use the ``SkipIfIntegration``. "
"To skip whole contexts, use ``SkipContextIf``. More complex logic can be "
"expressed with functions like ``IsIntegration``. These functions are all "
"part of the `test/helpers "
"<https://github.com/cilium/cilium/tree/26dec4c4f4311df2b1a6c909b27ff7fe6e46929f/test/helpers>`_"
" package."
msgstr ""

#: ../../contributing/testing/e2e.rst:591
msgid "Running End-To-End Tests In Other Environments via SSH"
msgstr ""

#: ../../contributing/testing/e2e.rst:593
msgid ""
"If you want to run tests in an arbitrary environment with SSH access, you"
" can use ``--cilium.SSHConfig`` to provide the SSH configuration of the "
"endpoint on which tests will be run. The tests presume the following on "
"the remote instance:"
msgstr ""

#: ../../contributing/testing/e2e.rst:598
msgid ""
"Cilium source code is located in the directory "
"``/home/vagrant/go/src/github.com/cilium/cilium/``."
msgstr ""

#: ../../contributing/testing/e2e.rst:599
msgid "Cilium is installed and running."
msgstr ""

#: ../../contributing/testing/e2e.rst:601
msgid ""
"The ssh connection needs to be defined as a ``ssh-config`` file and need "
"to have the following targets:"
msgstr ""

#: ../../contributing/testing/e2e.rst:604
msgid "runtime: To run runtime tests"
msgstr ""

#: ../../contributing/testing/e2e.rst:605
msgid ""
"k8s{1..2}-${K8S_VERSION}: to run Kubernetes tests. These instances must "
"have Kubernetes installed and running as a prerequisite for running "
"tests."
msgstr ""

#: ../../contributing/testing/e2e.rst:608
msgid "An example ``ssh-config`` can be the following:"
msgstr ""

#: ../../contributing/testing/e2e.rst:623
msgid "To run this you can use the following command:"
msgstr ""

#: ../../contributing/testing/e2e.rst:631
msgid "VMs for Testing"
msgstr ""

#: ../../contributing/testing/e2e.rst:633
msgid ""
"The VMs used for testing are defined in ``test/Vagrantfile``. There are a"
" variety of configuration options that can be passed as environment "
"variables:"
msgstr ""

#: ../../contributing/testing/e2e.rst:637
msgid "ENV variable"
msgstr ""

#: ../../contributing/testing/e2e.rst:637
msgid "Default Value"
msgstr ""

#: ../../contributing/testing/e2e.rst:637
msgid "Options"
msgstr ""

#: ../../contributing/testing/e2e.rst:639
msgid "K8S\\_NODES"
msgstr ""

#: ../../contributing/testing/e2e.rst:639
#: ../../contributing/testing/e2e.rst:655
msgid "2"
msgstr ""

#: ../../contributing/testing/e2e.rst:639
#: ../../contributing/testing/e2e.rst:655
msgid "0..100"
msgstr ""

#: ../../contributing/testing/e2e.rst:639
msgid "Number of Kubernetes nodes in the cluster"
msgstr ""

#: ../../contributing/testing/e2e.rst:641
msgid "NO_CILIUM_ON_NODE[S]"
msgstr ""

#: ../../contributing/testing/e2e.rst:641
msgid "none"
msgstr ""

#: ../../contributing/testing/e2e.rst:641
#: ../../contributing/testing/e2e.rst:653
msgid "\\*"
msgstr ""

#: ../../contributing/testing/e2e.rst:641
msgid "Comma-separated list of K8s nodes that should not run Cilium"
msgstr ""

#: ../../contributing/testing/e2e.rst:643
msgid "NFS"
msgstr ""

#: ../../contributing/testing/e2e.rst:643
#: ../../contributing/testing/e2e.rst:645
msgid "0"
msgstr ""

#: ../../contributing/testing/e2e.rst:643
#: ../../contributing/testing/e2e.rst:651
msgid "1"
msgstr ""

#: ../../contributing/testing/e2e.rst:643
msgid "If Cilium folder needs to be shared using NFS"
msgstr ""

#: ../../contributing/testing/e2e.rst:645
msgid "IPv6"
msgstr ""

#: ../../contributing/testing/e2e.rst:645
#: ../../contributing/testing/e2e.rst:651
msgid "0-1"
msgstr ""

#: ../../contributing/testing/e2e.rst:645
msgid "If 1 the Kubernetes cluster will use IPv6"
msgstr ""

#: ../../contributing/testing/e2e.rst:647
msgid "CONTAINER\\_RUNTIME"
msgstr ""

#: ../../contributing/testing/e2e.rst:647
msgid "docker"
msgstr ""

#: ../../contributing/testing/e2e.rst:647
msgid "containerd"
msgstr ""

#: ../../contributing/testing/e2e.rst:647
msgid "To set the default container runtime in the Kubernetes cluster"
msgstr ""

#: ../../contributing/testing/e2e.rst:649
msgid "K8S\\_VERSION"
msgstr ""

#: ../../contributing/testing/e2e.rst:649
msgid "1.\\*\\*"
msgstr ""

#: ../../contributing/testing/e2e.rst:649
msgid "Kubernetes version to install"
msgstr ""

#: ../../contributing/testing/e2e.rst:651
msgid "KUBEPROXY"
msgstr ""

#: ../../contributing/testing/e2e.rst:651
msgid "If 0 the Kubernetes' kube-proxy won't be installed"
msgstr ""

#: ../../contributing/testing/e2e.rst:653
msgid "SERVER\\_BOX"
msgstr ""

#: ../../contributing/testing/e2e.rst:653
msgid "cilium/ubuntu-dev"
msgstr ""

#: ../../contributing/testing/e2e.rst:653
msgid "Vagrantcloud base image"
msgstr ""

#: ../../contributing/testing/e2e.rst:655
msgid "VM\\_CPUS"
msgstr ""

#: ../../contributing/testing/e2e.rst:655
msgid "Number of CPUs that need to have the VM"
msgstr ""

#: ../../contributing/testing/e2e.rst:657
msgid "VM\\_MEMORY"
msgstr ""

#: ../../contributing/testing/e2e.rst:657
msgid "4096"
msgstr ""

#: ../../contributing/testing/e2e.rst:657
msgid "\\d+"
msgstr ""

#: ../../contributing/testing/e2e.rst:657
msgid "RAM size in Megabytes"
msgstr ""

#: ../../contributing/testing/e2e.rst:661
msgid "VM images"
msgstr ""

#: ../../contributing/testing/e2e.rst:663
msgid ""
"The test suite relies on Vagrant to automatically download the required "
"VM image, if it is not already available on the system. VM images weight "
"several gigabytes so this may take some time, but faster tools such as "
"`aria2`_ can speed up the process by opening multiple connections. The "
"script `test/packet/scripts/add_vagrant_box.sh`_ can be useful to "
"manually download selected images with aria2 prior to launching the test "
"suite, or to periodically update images in a ``cron`` job::"
msgstr ""

#: ../../contributing/testing/e2e.rst:695
msgid "Known Issues and Workarounds"
msgstr ""

#: ../../contributing/testing/e2e.rst:698
msgid "VirtualBox hostonlyifs and DHCP related errors"
msgstr ""

#: ../../contributing/testing/e2e.rst:700
msgid ""
"If you see the following error, take a look at this `GitHub issue "
"<https://github.com/hashicorp/vagrant/issues/3083#issuecomment-41156076>`_"
" for workarounds."
msgstr ""

#: ../../contributing/testing/e2e.rst:714
msgid "Also, consider upgrading VirtualBox and Vagrant to the latest versions."
msgstr ""

#: ../../contributing/testing/e2e.rst:717
msgid "Further Assistance"
msgstr ""

#: ../../contributing/testing/e2e.rst:719
msgid ""
"Have a question about how the tests work or want to chat more about "
"improving the testing infrastructure for Cilium? Hop on over to the "
"`testing <https://cilium.slack.com/messages/C7PE7V806>`_ channel on "
"Slack."
msgstr ""

#: ../../contributing/testing/index.rst:10
msgid "Testing"
msgstr ""

#: ../../contributing/testing/index.rst:12
msgid ""
"There are multiple ways to test Cilium functionality, including unit-"
"testing and integration testing. In order to improve developer "
"throughput, we provide ways to run both the unit and integration tests in"
" your own workspace as opposed to being fully reliant on the Cilium CI "
"infrastructure. We encourage all PRs to add unit tests and if necessary, "
"integration tests. Consult the following pages to see how to run the "
"variety of tests that have been written for Cilium, and information about"
" Cilium's CI infrastructure."
msgstr ""

#: ../../contributing/testing/index.rst:31
msgid ""
"The best way to get help if you get stuck is to ask a question on the "
"`Cilium Slack channel <https://cilium.herokuapp.com>`_.  With Cilium "
"contributors across the globe, there is almost always someone available "
"to help."
msgstr ""

#: ../../contributing/testing/unit.rst:10
msgid "Integration Testing"
msgstr ""

#: ../../contributing/testing/unit.rst:12
msgid ""
"Cilium uses the standard `go test <https://golang.org/pkg/testing/>`__ "
"framework in combination with `gocheck <http://labix.org/gocheck>`__ for "
"richer testing functionality."
msgstr ""

#: ../../contributing/testing/unit.rst:19
msgid "Prerequisites"
msgstr ""

#: ../../contributing/testing/unit.rst:21
msgid ""
"Some tests interact with the kvstore and depend on a local kvstore "
"instances of etcd. To start the local instances, run:"
msgstr ""

#: ../../contributing/testing/unit.rst:29
msgid "Running all tests"
msgstr ""

#: ../../contributing/testing/unit.rst:31
msgid ""
"To run integration tests over the entire repository, run the following "
"command in the project root directory:"
msgstr ""

#: ../../contributing/testing/unit.rst:38
msgid "To run just unit tests, run:"
msgstr ""

#: ../../contributing/testing/unit.rst:45
msgid "Testing individual packages"
msgstr ""

#: ../../contributing/testing/unit.rst:47
msgid ""
"It is possible to test individual packages by invoking ``go test`` "
"directly. You can then ``cd`` into the package subject to testing and "
"invoke go test:"
msgstr ""

#: ../../contributing/testing/unit.rst:56
msgid ""
"If you need more verbose output, you can pass in the ``-check.v`` and "
"``-check.vv`` arguments:"
msgstr ""

#: ../../contributing/testing/unit.rst:64
msgid ""
"Integration tests have some prerequisites like "
":ref:`integration_testing_prerequisites`, you can use the following "
"command to automatically set up the prerequisites, run the unit tests and"
" tear down the prerequisites:"
msgstr ""

#: ../../contributing/testing/unit.rst:73
msgid ""
"Some packages have privileged tests. They are not run by default when you"
" run the integration tests for the respective package. The privileged "
"test files have an entry at the top of the test file as shown."
msgstr ""

#: ../../contributing/testing/unit.rst:81
msgid "There are two ways that you can run the 'privileged' tests."
msgstr ""

#: ../../contributing/testing/unit.rst:83
msgid ""
"To run all the 'privileged' tests for cilium follow the instructions "
"below."
msgstr ""

#: ../../contributing/testing/unit.rst:89
msgid ""
"To run a specific package 'privileged' test, follow the instructions "
"below. Here for example we are trying to run the tests for 'routing' "
"package."
msgstr ""

#: ../../contributing/testing/unit.rst:97
msgid "Running individual tests"
msgstr ""

#: ../../contributing/testing/unit.rst:99
msgid ""
"Due to the use of gocheck, the standard ``go test -run`` will not work, "
"instead, the ``-check.f`` argument has to be specified:"
msgstr ""

#: ../../contributing/testing/unit.rst:107
msgid "Automatically run unit tests on code changes"
msgstr ""

#: ../../contributing/testing/unit.rst:109
msgid ""
"The script ``contrib/shell/test.sh`` contains some helpful bash functions"
" to improve the feedback cycle between writing tests and seeing their "
"results. If you're writing unit tests in a particular package, the "
"``watchtest`` function will watch for changes in a directory and run the "
"unit tests for that package any time the files change. For example, if "
"writing unit tests in ``pkg/policy``, run this in a terminal next to your"
" editor:"
msgstr ""

#: ../../contributing/testing/unit.rst:121
msgid "This shell script depends on the ``inotify-tools`` package on Linux."
msgstr ""

