# SOME DESCRIPTIVE TITLE.
# Copyright (C) Cilium Authors
# This file is distributed under the same license as the Cilium package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Cilium \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-25 23:56+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../gettingstarted/dns.rst:3 b8dec275b49c43a6aaebd94d8b6a07ed
msgid ""
"WARNING: You are looking at unreleased Cilium documentation. Please use "
"the official rendered version released here: https://docs.cilium.io"
msgstr ""

#: ../../gettingstarted/dns.rst:11 1eef073fc9f942ddb648191c76b59ee9
msgid "Locking down external access with DNS-based policies"
msgstr ""

#: ../../gettingstarted/dns.rst:13 3104be9138b044ebbaabc658b1d3d367
msgid ""
"This document serves as an introduction for using Cilium to enforce DNS-"
"based security policies for Kubernetes pods."
msgstr ""

#: ../../gettingstarted/gsg_requirements.rst:1 ccc92b555ed54f0e97c82258b4b01d59
msgid ""
"If you haven't read the :ref:`intro` yet, we'd encourage you to do that "
"first."
msgstr ""

#: ../../gettingstarted/gsg_requirements.rst:3 34c1f716071947c8a72130361455d30b
msgid ""
"The best way to get help if you get stuck is to ask a question on the "
"`Cilium Slack channel <https://cilium.herokuapp.com>`_.  With Cilium "
"contributors across the globe, there is almost always someone available "
"to help."
msgstr ""

#: ../../gettingstarted/gsg_requirements.rst:8 8a116f825dd047b583d1ae11549643c3
msgid "Setup Cilium"
msgstr ""

#: ../../gettingstarted/gsg_requirements.rst:10
#: c3d1ed258893403dba9fecfee8324804
msgid ""
"If you have not set up Cilium yet, follow the guide "
":ref:`k8s_install_standard` for instructions on how to quickly bootstrap "
"a Kubernetes cluster and install Cilium. If in doubt, pick the minikube "
"route, you will be good to go in less than 5 minutes."
msgstr ""

#: ../../gettingstarted/dns.rst:19 bab9db05fdc649abb62efa93853dc966
msgid "Deploy the Demo Application"
msgstr ""

#: ../../gettingstarted/dns.rst:21 e8e90100304d4e189bd0cc6897ecffc8
msgid ""
"DNS-based policies are very useful for controlling access to services "
"running outside the Kubernetes cluster. DNS acts as a persistent service "
"identifier for both external services provided by AWS, Google, Twilio, "
"Stripe, etc., and internal services such as database clusters running in "
"private subnets outside Kubernetes. CIDR or IP-based policies are "
"cumbersome and hard to maintain as the IPs associated with external "
"services can change frequently. The Cilium DNS-based policies provide an "
"easy mechanism to specify access control while Cilium manages the harder "
"aspects of tracking DNS to IP mapping."
msgstr ""

#: ../../gettingstarted/dns.rst:23 cf67cb28565b4787aa30513a0098b279
msgid "In this guide we will learn about:"
msgstr ""

#: ../../gettingstarted/dns.rst:25 1c619147446b413ba1955f70696e4810
msgid ""
"Controlling egress access to services outside the cluster using DNS-based"
" policies"
msgstr ""

#: ../../gettingstarted/dns.rst:26 23fc2b47109d418bbb0262f96863d2e3
msgid "Using patterns (or wildcards) to whitelist a subset of DNS domains"
msgstr ""

#: ../../gettingstarted/dns.rst:27 9a9292b673fa407ba6ccff2f40249d76
msgid ""
"Combining DNS, port and L7 rules for restricting access to external "
"service"
msgstr ""

#: ../../gettingstarted/dns.rst:29 e65b0775a34f406cb54d7c735a4b3fde
msgid ""
"In line with our Star Wars theme examples, we will use a simple scenario "
"where the Empire's ``mediabot`` pods need access to Twitter for managing "
"the Empire's tweets. The pods shouldn't have access to any other external"
" service."
msgstr ""

#: ../../gettingstarted/dns.rst:41 4c612b9700db43ffb3384135c2209670
msgid "Apply DNS Egress Policy"
msgstr ""

#: ../../gettingstarted/dns.rst:43 4d22afdb4a5748448abf9aa8fd874d3b
msgid ""
"The following Cilium network policy allows ``mediabot`` pods to only "
"access ``api.twitter.com``."
msgstr ""

#: ../../gettingstarted/dns.rst:47 c8d080c837304d979e5af6af11924ad6
msgid "Generic"
msgstr ""

#: ../../gettingstarted/dns.rst:51 bd93eaa280e5451b99a712057d4577e6
msgid "OpenShift"
msgstr ""

#: ../../gettingstarted/dns.rst:57 e17ecf445ef14ba9a2683c4aaaba0d92
msgid ""
"OpenShift users will need to modify the policies to match the namespace "
"``openshift-dns`` (instead of ``kube-system``), remove the match on the "
"``k8s:k8s-app=kube-dns`` label, and change the port to 5353."
msgstr ""

#: ../../gettingstarted/dns.rst:61 93c9e97be7364f0e96923248cb6e9704
msgid "Let's take a closer look at the policy:"
msgstr ""

#: ../../gettingstarted/dns.rst:63 8476f622d5e34da1a0c4109ee77b1565
msgid ""
"The first egress section uses ``toFQDNs: matchName`` specification to "
"allow egress to ``api.twitter.com``. The destination DNS should match "
"exactly the name specified in the rule. The ``endpointSelector`` allows "
"only pods with labels ``class: mediabot, org:empire`` to have the egress "
"access."
msgstr ""

#: ../../gettingstarted/dns.rst:64 225a34539fe34bccae844d69bb07120f
msgid ""
"The second egress section (``toEndpoints``) allows ``mediabot`` pods to "
"access ``kube-dns`` service. Note that ``rules: dns`` instructs Cilium to"
" inspect and allow DNS lookups matching specified patterns. In this case,"
" inspect and allow all DNS queries."
msgstr ""

#: ../../gettingstarted/dns.rst:66 4f5a2338c2bf49a4ad6da081445be493
msgid ""
"Note that with this policy the ``mediabot`` doesn't have access to any "
"internal cluster service other than ``kube-dns``. Refer to :ref:`Network "
"Policy` to learn more about policies for controlling access to internal "
"cluster services."
msgstr ""

#: ../../gettingstarted/dns.rst:68 c38a53bef50f4750869521d8af8487f1
msgid "Let's apply the policy:"
msgstr ""

#: ../../gettingstarted/dns.rst:74 678d17bcf4824e68982921ba494bed6c
msgid ""
"Testing the policy, we see that ``mediabot`` has access to "
"``api.twitter.com`` but doesn't have access to any other external "
"service, e.g., ``help.twitter.com``."
msgstr ""

#: ../../gettingstarted/dns.rst:86 9ced820572e647d8b0bdf1f2d7cea7ec
msgid "DNS Policies Using Patterns"
msgstr ""

#: ../../gettingstarted/dns.rst:88 969690a210df41c2ad9a5caa35eb78f2
msgid ""
"The above policy controlled DNS access based on exact match of the DNS "
"domain name. Often, it is required to allow access to a subset of "
"domains. Let's say, in the above example, ``mediabot`` pods need access "
"to any Twitter sub-domain, e.g., the pattern ``*.twitter.com``. We can "
"achieve this easily by changing the ``toFQDN`` rule to use "
"``matchPattern`` instead of ``matchName``."
msgstr ""

#: ../../gettingstarted/dns.rst:96 fdd93d8a27d4448fbec1b810e3c3e35f
msgid ""
"Test that ``mediabot`` has access to multiple Twitter services for which "
"the DNS matches the pattern ``*.twitter.com``. It is important to note "
"and test that this doesn't allow access to ``twitter.com`` because the "
"``*.`` in the pattern requires one subdomain to be present in the DNS "
"name. You can simply add more ``matchName`` and ``matchPattern`` clauses "
"to extend the access. (See :ref:`DNS based` policies to learn more about "
"specifying DNS rules using patterns and names.)"
msgstr ""

#: ../../gettingstarted/dns.rst:112 74a1e5465d3a4fd884f9525a3f543af8
msgid "Combining DNS, Port and L7 Rules"
msgstr ""

#: ../../gettingstarted/dns.rst:114 e74a38d500eb4311a878b50c62f04548
msgid ""
"The DNS-based policies can be combined with port (L4) and API (L7) rules "
"to further restrict the access. In our example, we will restrict "
"``mediabot`` pods to access Twitter services only on ports ``443``. The "
"``toPorts`` section in the policy below achieves the port-based "
"restrictions along with the DNS-based policies."
msgstr ""

#: ../../gettingstarted/dns.rst:122 b0170807c24d41029a1ae336140a45c7
msgid ""
"Testing, the access to ``https://help.twitter.com`` on port ``443`` will "
"succeed but the access to ``http://help.twitter.com`` on port ``80`` will"
" be denied."
msgstr ""

#: ../../gettingstarted/dns.rst:133 1ba5804ae7b84e51b4d2ba437f1359b2
msgid ""
"Refer to :ref:`l4_policy` and :ref:`l7_policy` to learn more about Cilium"
" L4 and L7 network policies."
msgstr ""

#: ../../gettingstarted/dns.rst:136 5857c09f9c87443fb3f9c7dc298cea9a
msgid "Clean-up"
msgstr ""

